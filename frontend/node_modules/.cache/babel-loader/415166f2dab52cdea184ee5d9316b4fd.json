{"ast":null,"code":"'use strict';\n\nfunction normalizeIdentifier(value) {\n  return value // Collapse Markdown whitespace.\n  .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n  .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n  // counterpart is uppercased will result in a different uppercase\n  // character.\n  // Hence, to get that form, we perform both lower- and uppercase.\n  // Upper case makes sure keys will not interact with default prototypal\n  // methods: no object method is uppercase.\n  .toLowerCase().toUpperCase();\n}\n\nmodule.exports = normalizeIdentifier;","map":{"version":3,"sources":["C:/Users/ghdus/OneDrive/바탕 화면/team-project/nlp-project-team2/frontend/node_modules/micromark/dist/util/normalize-identifier.js"],"names":["normalizeIdentifier","value","replace","toLowerCase","toUpperCase","module","exports"],"mappings":"AAAA;;AAEA,SAASA,mBAAT,CAA6BC,KAA7B,EAAoC;AAClC,SACEA,KAAK,CAAC;AAAD,GACFC,OADH,CACW,aADX,EAC0B,GAD1B,EAC+B;AAD/B,GAEGA,OAFH,CAEW,QAFX,EAEqB,EAFrB,EAEyB;AACvB;AACA;AACA;AACA;AACA;AAPF,GAQGC,WARH,GASGC,WATH,EADF;AAYD;;AAEDC,MAAM,CAACC,OAAP,GAAiBN,mBAAjB","sourcesContent":["'use strict'\r\n\r\nfunction normalizeIdentifier(value) {\r\n  return (\r\n    value // Collapse Markdown whitespace.\r\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\r\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\r\n      // counterpart is uppercased will result in a different uppercase\r\n      // character.\r\n      // Hence, to get that form, we perform both lower- and uppercase.\r\n      // Upper case makes sure keys will not interact with default prototypal\r\n      // methods: no object method is uppercase.\r\n      .toLowerCase()\r\n      .toUpperCase()\r\n  )\r\n}\r\n\r\nmodule.exports = normalizeIdentifier\r\n"]},"metadata":{},"sourceType":"script"}