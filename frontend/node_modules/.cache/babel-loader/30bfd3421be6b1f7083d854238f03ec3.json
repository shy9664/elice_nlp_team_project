{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFeed = void 0;\n\nvar stringify_1 = require(\"./stringify\");\n\nvar legacy_1 = require(\"./legacy\");\n/**\r\n * Get the feed object from the root of a DOM tree.\r\n *\r\n * @param doc - The DOM to to extract the feed from.\r\n * @returns The feed.\r\n */\n\n\nfunction getFeed(doc) {\n  var feedRoot = getOneElement(isValidFeed, doc);\n  return !feedRoot ? null : feedRoot.name === \"feed\" ? getAtomFeed(feedRoot) : getRssFeed(feedRoot);\n}\n\nexports.getFeed = getFeed;\n/**\r\n * Parse an Atom feed.\r\n *\r\n * @param feedRoot The root of the feed.\r\n * @returns The parsed feed.\r\n */\n\nfunction getAtomFeed(feedRoot) {\n  var _a;\n\n  var childs = feedRoot.children;\n  var feed = {\n    type: \"atom\",\n    items: (0, legacy_1.getElementsByTagName)(\"entry\", childs).map(function (item) {\n      var _a;\n\n      var children = item.children;\n      var entry = {\n        media: getMediaElements(children)\n      };\n      addConditionally(entry, \"id\", \"id\", children);\n      addConditionally(entry, \"title\", \"title\", children);\n      var href = (_a = getOneElement(\"link\", children)) === null || _a === void 0 ? void 0 : _a.attribs.href;\n\n      if (href) {\n        entry.link = href;\n      }\n\n      var description = fetch(\"summary\", children) || fetch(\"content\", children);\n\n      if (description) {\n        entry.description = description;\n      }\n\n      var pubDate = fetch(\"updated\", children);\n\n      if (pubDate) {\n        entry.pubDate = new Date(pubDate);\n      }\n\n      return entry;\n    })\n  };\n  addConditionally(feed, \"id\", \"id\", childs);\n  addConditionally(feed, \"title\", \"title\", childs);\n  var href = (_a = getOneElement(\"link\", childs)) === null || _a === void 0 ? void 0 : _a.attribs.href;\n\n  if (href) {\n    feed.link = href;\n  }\n\n  addConditionally(feed, \"description\", \"subtitle\", childs);\n  var updated = fetch(\"updated\", childs);\n\n  if (updated) {\n    feed.updated = new Date(updated);\n  }\n\n  addConditionally(feed, \"author\", \"email\", childs, true);\n  return feed;\n}\n/**\r\n * Parse a RSS feed.\r\n *\r\n * @param feedRoot The root of the feed.\r\n * @returns The parsed feed.\r\n */\n\n\nfunction getRssFeed(feedRoot) {\n  var _a, _b;\n\n  var childs = (_b = (_a = getOneElement(\"channel\", feedRoot.children)) === null || _a === void 0 ? void 0 : _a.children) !== null && _b !== void 0 ? _b : [];\n  var feed = {\n    type: feedRoot.name.substr(0, 3),\n    id: \"\",\n    items: (0, legacy_1.getElementsByTagName)(\"item\", feedRoot.children).map(function (item) {\n      var children = item.children;\n      var entry = {\n        media: getMediaElements(children)\n      };\n      addConditionally(entry, \"id\", \"guid\", children);\n      addConditionally(entry, \"title\", \"title\", children);\n      addConditionally(entry, \"link\", \"link\", children);\n      addConditionally(entry, \"description\", \"description\", children);\n      var pubDate = fetch(\"pubDate\", children);\n      if (pubDate) entry.pubDate = new Date(pubDate);\n      return entry;\n    })\n  };\n  addConditionally(feed, \"title\", \"title\", childs);\n  addConditionally(feed, \"link\", \"link\", childs);\n  addConditionally(feed, \"description\", \"description\", childs);\n  var updated = fetch(\"lastBuildDate\", childs);\n\n  if (updated) {\n    feed.updated = new Date(updated);\n  }\n\n  addConditionally(feed, \"author\", \"managingEditor\", childs, true);\n  return feed;\n}\n\nvar MEDIA_KEYS_STRING = [\"url\", \"type\", \"lang\"];\nvar MEDIA_KEYS_INT = [\"fileSize\", \"bitrate\", \"framerate\", \"samplingrate\", \"channels\", \"duration\", \"height\", \"width\"];\n/**\r\n * Get all media elements of a feed item.\r\n *\r\n * @param where Nodes to search in.\r\n * @returns Media elements.\r\n */\n\nfunction getMediaElements(where) {\n  return (0, legacy_1.getElementsByTagName)(\"media:content\", where).map(function (elem) {\n    var attribs = elem.attribs;\n    var media = {\n      medium: attribs.medium,\n      isDefault: !!attribs.isDefault\n    };\n\n    for (var _i = 0, MEDIA_KEYS_STRING_1 = MEDIA_KEYS_STRING; _i < MEDIA_KEYS_STRING_1.length; _i++) {\n      var attrib = MEDIA_KEYS_STRING_1[_i];\n\n      if (attribs[attrib]) {\n        media[attrib] = attribs[attrib];\n      }\n    }\n\n    for (var _a = 0, MEDIA_KEYS_INT_1 = MEDIA_KEYS_INT; _a < MEDIA_KEYS_INT_1.length; _a++) {\n      var attrib = MEDIA_KEYS_INT_1[_a];\n\n      if (attribs[attrib]) {\n        media[attrib] = parseInt(attribs[attrib], 10);\n      }\n    }\n\n    if (attribs.expression) {\n      media.expression = attribs.expression;\n    }\n\n    return media;\n  });\n}\n/**\r\n * Get one element by tag name.\r\n *\r\n * @param tagName Tag name to look for\r\n * @param node Node to search in\r\n * @returns The element or null\r\n */\n\n\nfunction getOneElement(tagName, node) {\n  return (0, legacy_1.getElementsByTagName)(tagName, node, true, 1)[0];\n}\n/**\r\n * Get the text content of an element with a certain tag name.\r\n *\r\n * @param tagName Tag name to look for.\r\n * @param where  Node to search in.\r\n * @param recurse Whether to recurse into child nodes.\r\n * @returns The text content of the element.\r\n */\n\n\nfunction fetch(tagName, where, recurse) {\n  if (recurse === void 0) {\n    recurse = false;\n  }\n\n  return (0, stringify_1.textContent)((0, legacy_1.getElementsByTagName)(tagName, where, recurse, 1)).trim();\n}\n/**\r\n * Adds a property to an object if it has a value.\r\n *\r\n * @param obj Object to be extended\r\n * @param prop Property name\r\n * @param tagName Tag name that contains the conditionally added property\r\n * @param where Element to search for the property\r\n * @param recurse Whether to recurse into child nodes.\r\n */\n\n\nfunction addConditionally(obj, prop, tagName, where, recurse) {\n  if (recurse === void 0) {\n    recurse = false;\n  }\n\n  var val = fetch(tagName, where, recurse);\n  if (val) obj[prop] = val;\n}\n/**\r\n * Checks if an element is a feed root node.\r\n *\r\n * @param value The name of the element to check.\r\n * @returns Whether an element is a feed root node.\r\n */\n\n\nfunction isValidFeed(value) {\n  return value === \"rss\" || value === \"feed\" || value === \"rdf:RDF\";\n}","map":{"version":3,"sources":["C:/Users/ghdus/OneDrive/바탕 화면/team-project/nlp-project-team2/frontend/node_modules/domutils/lib/feeds.js"],"names":["Object","defineProperty","exports","value","getFeed","stringify_1","require","legacy_1","doc","feedRoot","getOneElement","isValidFeed","name","getAtomFeed","getRssFeed","_a","childs","children","feed","type","items","getElementsByTagName","map","item","entry","media","getMediaElements","addConditionally","href","attribs","link","description","fetch","pubDate","Date","updated","_b","substr","id","MEDIA_KEYS_STRING","MEDIA_KEYS_INT","where","elem","medium","isDefault","_i","MEDIA_KEYS_STRING_1","length","attrib","MEDIA_KEYS_INT_1","parseInt","expression","tagName","node","recurse","textContent","trim","obj","prop","val"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getFeed = void 0;\r\nvar stringify_1 = require(\"./stringify\");\r\nvar legacy_1 = require(\"./legacy\");\r\n/**\r\n * Get the feed object from the root of a DOM tree.\r\n *\r\n * @param doc - The DOM to to extract the feed from.\r\n * @returns The feed.\r\n */\r\nfunction getFeed(doc) {\r\n    var feedRoot = getOneElement(isValidFeed, doc);\r\n    return !feedRoot\r\n        ? null\r\n        : feedRoot.name === \"feed\"\r\n            ? getAtomFeed(feedRoot)\r\n            : getRssFeed(feedRoot);\r\n}\r\nexports.getFeed = getFeed;\r\n/**\r\n * Parse an Atom feed.\r\n *\r\n * @param feedRoot The root of the feed.\r\n * @returns The parsed feed.\r\n */\r\nfunction getAtomFeed(feedRoot) {\r\n    var _a;\r\n    var childs = feedRoot.children;\r\n    var feed = {\r\n        type: \"atom\",\r\n        items: (0, legacy_1.getElementsByTagName)(\"entry\", childs).map(function (item) {\r\n            var _a;\r\n            var children = item.children;\r\n            var entry = { media: getMediaElements(children) };\r\n            addConditionally(entry, \"id\", \"id\", children);\r\n            addConditionally(entry, \"title\", \"title\", children);\r\n            var href = (_a = getOneElement(\"link\", children)) === null || _a === void 0 ? void 0 : _a.attribs.href;\r\n            if (href) {\r\n                entry.link = href;\r\n            }\r\n            var description = fetch(\"summary\", children) || fetch(\"content\", children);\r\n            if (description) {\r\n                entry.description = description;\r\n            }\r\n            var pubDate = fetch(\"updated\", children);\r\n            if (pubDate) {\r\n                entry.pubDate = new Date(pubDate);\r\n            }\r\n            return entry;\r\n        }),\r\n    };\r\n    addConditionally(feed, \"id\", \"id\", childs);\r\n    addConditionally(feed, \"title\", \"title\", childs);\r\n    var href = (_a = getOneElement(\"link\", childs)) === null || _a === void 0 ? void 0 : _a.attribs.href;\r\n    if (href) {\r\n        feed.link = href;\r\n    }\r\n    addConditionally(feed, \"description\", \"subtitle\", childs);\r\n    var updated = fetch(\"updated\", childs);\r\n    if (updated) {\r\n        feed.updated = new Date(updated);\r\n    }\r\n    addConditionally(feed, \"author\", \"email\", childs, true);\r\n    return feed;\r\n}\r\n/**\r\n * Parse a RSS feed.\r\n *\r\n * @param feedRoot The root of the feed.\r\n * @returns The parsed feed.\r\n */\r\nfunction getRssFeed(feedRoot) {\r\n    var _a, _b;\r\n    var childs = (_b = (_a = getOneElement(\"channel\", feedRoot.children)) === null || _a === void 0 ? void 0 : _a.children) !== null && _b !== void 0 ? _b : [];\r\n    var feed = {\r\n        type: feedRoot.name.substr(0, 3),\r\n        id: \"\",\r\n        items: (0, legacy_1.getElementsByTagName)(\"item\", feedRoot.children).map(function (item) {\r\n            var children = item.children;\r\n            var entry = { media: getMediaElements(children) };\r\n            addConditionally(entry, \"id\", \"guid\", children);\r\n            addConditionally(entry, \"title\", \"title\", children);\r\n            addConditionally(entry, \"link\", \"link\", children);\r\n            addConditionally(entry, \"description\", \"description\", children);\r\n            var pubDate = fetch(\"pubDate\", children);\r\n            if (pubDate)\r\n                entry.pubDate = new Date(pubDate);\r\n            return entry;\r\n        }),\r\n    };\r\n    addConditionally(feed, \"title\", \"title\", childs);\r\n    addConditionally(feed, \"link\", \"link\", childs);\r\n    addConditionally(feed, \"description\", \"description\", childs);\r\n    var updated = fetch(\"lastBuildDate\", childs);\r\n    if (updated) {\r\n        feed.updated = new Date(updated);\r\n    }\r\n    addConditionally(feed, \"author\", \"managingEditor\", childs, true);\r\n    return feed;\r\n}\r\nvar MEDIA_KEYS_STRING = [\"url\", \"type\", \"lang\"];\r\nvar MEDIA_KEYS_INT = [\r\n    \"fileSize\",\r\n    \"bitrate\",\r\n    \"framerate\",\r\n    \"samplingrate\",\r\n    \"channels\",\r\n    \"duration\",\r\n    \"height\",\r\n    \"width\",\r\n];\r\n/**\r\n * Get all media elements of a feed item.\r\n *\r\n * @param where Nodes to search in.\r\n * @returns Media elements.\r\n */\r\nfunction getMediaElements(where) {\r\n    return (0, legacy_1.getElementsByTagName)(\"media:content\", where).map(function (elem) {\r\n        var attribs = elem.attribs;\r\n        var media = {\r\n            medium: attribs.medium,\r\n            isDefault: !!attribs.isDefault,\r\n        };\r\n        for (var _i = 0, MEDIA_KEYS_STRING_1 = MEDIA_KEYS_STRING; _i < MEDIA_KEYS_STRING_1.length; _i++) {\r\n            var attrib = MEDIA_KEYS_STRING_1[_i];\r\n            if (attribs[attrib]) {\r\n                media[attrib] = attribs[attrib];\r\n            }\r\n        }\r\n        for (var _a = 0, MEDIA_KEYS_INT_1 = MEDIA_KEYS_INT; _a < MEDIA_KEYS_INT_1.length; _a++) {\r\n            var attrib = MEDIA_KEYS_INT_1[_a];\r\n            if (attribs[attrib]) {\r\n                media[attrib] = parseInt(attribs[attrib], 10);\r\n            }\r\n        }\r\n        if (attribs.expression) {\r\n            media.expression =\r\n                attribs.expression;\r\n        }\r\n        return media;\r\n    });\r\n}\r\n/**\r\n * Get one element by tag name.\r\n *\r\n * @param tagName Tag name to look for\r\n * @param node Node to search in\r\n * @returns The element or null\r\n */\r\nfunction getOneElement(tagName, node) {\r\n    return (0, legacy_1.getElementsByTagName)(tagName, node, true, 1)[0];\r\n}\r\n/**\r\n * Get the text content of an element with a certain tag name.\r\n *\r\n * @param tagName Tag name to look for.\r\n * @param where  Node to search in.\r\n * @param recurse Whether to recurse into child nodes.\r\n * @returns The text content of the element.\r\n */\r\nfunction fetch(tagName, where, recurse) {\r\n    if (recurse === void 0) { recurse = false; }\r\n    return (0, stringify_1.textContent)((0, legacy_1.getElementsByTagName)(tagName, where, recurse, 1)).trim();\r\n}\r\n/**\r\n * Adds a property to an object if it has a value.\r\n *\r\n * @param obj Object to be extended\r\n * @param prop Property name\r\n * @param tagName Tag name that contains the conditionally added property\r\n * @param where Element to search for the property\r\n * @param recurse Whether to recurse into child nodes.\r\n */\r\nfunction addConditionally(obj, prop, tagName, where, recurse) {\r\n    if (recurse === void 0) { recurse = false; }\r\n    var val = fetch(tagName, where, recurse);\r\n    if (val)\r\n        obj[prop] = val;\r\n}\r\n/**\r\n * Checks if an element is a feed root node.\r\n *\r\n * @param value The name of the element to check.\r\n * @returns Whether an element is a feed root node.\r\n */\r\nfunction isValidFeed(value) {\r\n    return value === \"rss\" || value === \"feed\" || value === \"rdf:RDF\";\r\n}\r\n"]},"metadata":{},"sourceType":"script"}