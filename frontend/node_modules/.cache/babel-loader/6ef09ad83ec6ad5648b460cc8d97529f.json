{"ast":null,"code":"\"use strict\";\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n\n  return to;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.subselects = exports.getNextSiblings = exports.ensureIsTag = exports.PLACEHOLDER_ELEMENT = void 0;\n\nvar boolbase_1 = require(\"boolbase\");\n\nvar procedure_1 = require(\"../procedure\");\n/** Used as a placeholder for :has. Will be replaced with the actual element. */\n\n\nexports.PLACEHOLDER_ELEMENT = {};\n\nfunction ensureIsTag(next, adapter) {\n  if (next === boolbase_1.falseFunc) return boolbase_1.falseFunc;\n  return function (elem) {\n    return adapter.isTag(elem) && next(elem);\n  };\n}\n\nexports.ensureIsTag = ensureIsTag;\n\nfunction getNextSiblings(elem, adapter) {\n  var siblings = adapter.getSiblings(elem);\n  if (siblings.length <= 1) return [];\n  var elemIndex = siblings.indexOf(elem);\n  if (elemIndex < 0 || elemIndex === siblings.length - 1) return [];\n  return siblings.slice(elemIndex + 1).filter(adapter.isTag);\n}\n\nexports.getNextSiblings = getNextSiblings;\n\nvar is = function (next, token, options, context, compileToken) {\n  var opts = {\n    xmlMode: !!options.xmlMode,\n    adapter: options.adapter,\n    equals: options.equals\n  };\n  var func = compileToken(token, opts, context);\n  return function (elem) {\n    return func(elem) && next(elem);\n  };\n};\n/*\r\n * :not, :has, :is and :matches have to compile selectors\r\n * doing this in src/pseudos.ts would lead to circular dependencies,\r\n * so we add them here\r\n */\n\n\nexports.subselects = {\n  is: is,\n\n  /**\r\n   * `:matches` is an alias for `:is`.\r\n   */\n  matches: is,\n  not: function (next, token, options, context, compileToken) {\n    var opts = {\n      xmlMode: !!options.xmlMode,\n      adapter: options.adapter,\n      equals: options.equals\n    };\n    var func = compileToken(token, opts, context);\n    if (func === boolbase_1.falseFunc) return next;\n    if (func === boolbase_1.trueFunc) return boolbase_1.falseFunc;\n    return function not(elem) {\n      return !func(elem) && next(elem);\n    };\n  },\n  has: function (next, subselect, options, _context, compileToken) {\n    var adapter = options.adapter;\n    var opts = {\n      xmlMode: !!options.xmlMode,\n      adapter: adapter,\n      equals: options.equals\n    }; // @ts-expect-error Uses an array as a pointer to the current element (side effects)\n\n    var context = subselect.some(function (s) {\n      return s.some(procedure_1.isTraversal);\n    }) ? [exports.PLACEHOLDER_ELEMENT] : undefined;\n    var compiled = compileToken(subselect, opts, context);\n    if (compiled === boolbase_1.falseFunc) return boolbase_1.falseFunc;\n\n    if (compiled === boolbase_1.trueFunc) {\n      return function (elem) {\n        return adapter.getChildren(elem).some(adapter.isTag) && next(elem);\n      };\n    }\n\n    var hasElement = ensureIsTag(compiled, adapter);\n    var _a = compiled.shouldTestNextSiblings,\n        shouldTestNextSiblings = _a === void 0 ? false : _a;\n    /*\r\n     * `shouldTestNextSiblings` will only be true if the query starts with\r\n     * a traversal (sibling or adjacent). That means we will always have a context.\r\n     */\n\n    if (context) {\n      return function (elem) {\n        context[0] = elem;\n        var childs = adapter.getChildren(elem);\n        var nextElements = shouldTestNextSiblings ? __spreadArray(__spreadArray([], childs), getNextSiblings(elem, adapter)) : childs;\n        return next(elem) && adapter.existsOne(hasElement, nextElements);\n      };\n    }\n\n    return function (elem) {\n      return next(elem) && adapter.existsOne(hasElement, adapter.getChildren(elem));\n    };\n  }\n};","map":{"version":3,"sources":["C:/Users/ghdus/OneDrive/바탕 화면/team-project/nlp-project-team2/frontend/node_modules/cheerio-select/node_modules/css-select/lib/pseudo-selectors/subselects.js"],"names":["__spreadArray","to","from","i","il","length","j","Object","defineProperty","exports","value","subselects","getNextSiblings","ensureIsTag","PLACEHOLDER_ELEMENT","boolbase_1","require","procedure_1","next","adapter","falseFunc","elem","isTag","siblings","getSiblings","elemIndex","indexOf","slice","filter","is","token","options","context","compileToken","opts","xmlMode","equals","func","matches","not","trueFunc","has","subselect","_context","some","s","isTraversal","undefined","compiled","getChildren","hasElement","_a","shouldTestNextSiblings","childs","nextElements","existsOne"],"mappings":"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","sourcesContent":["\"use strict\";\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.subselects = exports.getNextSiblings = exports.ensureIsTag = exports.PLACEHOLDER_ELEMENT = void 0;\r\nvar boolbase_1 = require(\"boolbase\");\r\nvar procedure_1 = require(\"../procedure\");\r\n/** Used as a placeholder for :has. Will be replaced with the actual element. */\r\nexports.PLACEHOLDER_ELEMENT = {};\r\nfunction ensureIsTag(next, adapter) {\r\n    if (next === boolbase_1.falseFunc)\r\n        return boolbase_1.falseFunc;\r\n    return function (elem) { return adapter.isTag(elem) && next(elem); };\r\n}\r\nexports.ensureIsTag = ensureIsTag;\r\nfunction getNextSiblings(elem, adapter) {\r\n    var siblings = adapter.getSiblings(elem);\r\n    if (siblings.length <= 1)\r\n        return [];\r\n    var elemIndex = siblings.indexOf(elem);\r\n    if (elemIndex < 0 || elemIndex === siblings.length - 1)\r\n        return [];\r\n    return siblings.slice(elemIndex + 1).filter(adapter.isTag);\r\n}\r\nexports.getNextSiblings = getNextSiblings;\r\nvar is = function (next, token, options, context, compileToken) {\r\n    var opts = {\r\n        xmlMode: !!options.xmlMode,\r\n        adapter: options.adapter,\r\n        equals: options.equals,\r\n    };\r\n    var func = compileToken(token, opts, context);\r\n    return function (elem) { return func(elem) && next(elem); };\r\n};\r\n/*\r\n * :not, :has, :is and :matches have to compile selectors\r\n * doing this in src/pseudos.ts would lead to circular dependencies,\r\n * so we add them here\r\n */\r\nexports.subselects = {\r\n    is: is,\r\n    /**\r\n     * `:matches` is an alias for `:is`.\r\n     */\r\n    matches: is,\r\n    not: function (next, token, options, context, compileToken) {\r\n        var opts = {\r\n            xmlMode: !!options.xmlMode,\r\n            adapter: options.adapter,\r\n            equals: options.equals,\r\n        };\r\n        var func = compileToken(token, opts, context);\r\n        if (func === boolbase_1.falseFunc)\r\n            return next;\r\n        if (func === boolbase_1.trueFunc)\r\n            return boolbase_1.falseFunc;\r\n        return function not(elem) {\r\n            return !func(elem) && next(elem);\r\n        };\r\n    },\r\n    has: function (next, subselect, options, _context, compileToken) {\r\n        var adapter = options.adapter;\r\n        var opts = {\r\n            xmlMode: !!options.xmlMode,\r\n            adapter: adapter,\r\n            equals: options.equals,\r\n        };\r\n        // @ts-expect-error Uses an array as a pointer to the current element (side effects)\r\n        var context = subselect.some(function (s) {\r\n            return s.some(procedure_1.isTraversal);\r\n        })\r\n            ? [exports.PLACEHOLDER_ELEMENT]\r\n            : undefined;\r\n        var compiled = compileToken(subselect, opts, context);\r\n        if (compiled === boolbase_1.falseFunc)\r\n            return boolbase_1.falseFunc;\r\n        if (compiled === boolbase_1.trueFunc) {\r\n            return function (elem) {\r\n                return adapter.getChildren(elem).some(adapter.isTag) && next(elem);\r\n            };\r\n        }\r\n        var hasElement = ensureIsTag(compiled, adapter);\r\n        var _a = compiled.shouldTestNextSiblings, shouldTestNextSiblings = _a === void 0 ? false : _a;\r\n        /*\r\n         * `shouldTestNextSiblings` will only be true if the query starts with\r\n         * a traversal (sibling or adjacent). That means we will always have a context.\r\n         */\r\n        if (context) {\r\n            return function (elem) {\r\n                context[0] = elem;\r\n                var childs = adapter.getChildren(elem);\r\n                var nextElements = shouldTestNextSiblings\r\n                    ? __spreadArray(__spreadArray([], childs), getNextSiblings(elem, adapter)) : childs;\r\n                return (next(elem) && adapter.existsOne(hasElement, nextElements));\r\n            };\r\n        }\r\n        return function (elem) {\r\n            return next(elem) &&\r\n                adapter.existsOne(hasElement, adapter.getChildren(elem));\r\n        };\r\n    },\r\n};\r\n"]},"metadata":{},"sourceType":"script"}