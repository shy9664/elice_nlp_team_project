{"ast":null,"code":"import React from 'react';\nimport { Combobox } from '@udecode/plate-combobox';\nimport { usePlateEditorRef, getPluginOptions, getHandler } from '@udecode/plate-core';\nimport { ELEMENT_MENTION, getMentionOnSelectItem } from '@udecode/plate-mention';\nimport { createStyles, getRootProps } from '@udecode/plate-styled-components';\nimport _styled, { css } from 'styled-components';\nimport { useSelected, useFocused } from 'slate-react';\n\nconst MentionCombobox = ({\n  items,\n  component,\n  onRenderItem,\n  pluginKey = ELEMENT_MENTION,\n  id = pluginKey\n}) => {\n  const editor = usePlateEditorRef();\n  const {\n    trigger\n  } = getPluginOptions(editor, pluginKey);\n  return /*#__PURE__*/React.createElement(Combobox, {\n    id: id,\n    trigger: trigger,\n    controlled: true,\n    items: items,\n    component: component,\n    onRenderItem: onRenderItem,\n    onSelectItem: getMentionOnSelectItem({\n      key: pluginKey\n    })\n  });\n};\n\nconst getMentionElementStyles = props => createStyles({\n  prefixClassNames: 'MentionElement',\n  ...props\n}, {\n  root: [{\n    \"marginTop\": \"0px\",\n    \"marginBottom\": \"0px\",\n    \"marginLeft\": \"1px\",\n    \"marginRight\": \"1px\",\n    \"verticalAlign\": \"baseline\",\n    \"display\": \"inline-block\"\n  }, props.selected && props.focused && {\n    \"boxShadow\": \"0 0 0 2px #B4D5FF\"\n  }, css([\"padding:3px 3px 2px;border-radius:4px;background-color:#eee;font-size:0.9em;\"])]\n});\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nconst MentionElement = props => {\n  const {\n    attributes,\n    children,\n    nodeProps,\n    element,\n    prefix,\n    as,\n    onClick,\n    renderLabel\n  } = props;\n  const rootProps = getRootProps(props);\n  const selected = useSelected();\n  const focused = useFocused();\n  const styles = getMentionElementStyles({ ...props,\n    selected,\n    focused\n  });\n  return /*#__PURE__*/React.createElement(_StyledSpan$1, _extends({}, attributes, {\n    as: as,\n    \"data-slate-value\": element.value,\n    className: styles.root.className,\n    contentEditable: false,\n    onClick: getHandler(onClick, element)\n  }, rootProps, nodeProps, {\n    $_css: styles.root.css\n  }), prefix, renderLabel ? renderLabel(element) : element.value, children);\n};\n\nvar _StyledSpan$1 = _styled(\"span\").withConfig({\n  displayName: \"MentionElement___StyledSpan\",\n  componentId: \"sc-iu2gv3-0\"\n})([\"\", \"\"], p => p.$_css);\n\nconst getMentionInputElementStyles = props => createStyles({\n  prefixClassNames: 'MentionInputElement',\n  ...props\n}, {\n  root: [{\n    \"marginTop\": \"0px\",\n    \"marginBottom\": \"0px\",\n    \"marginLeft\": \"1px\",\n    \"marginRight\": \"1px\",\n    \"verticalAlign\": \"baseline\",\n    \"display\": \"inline-block\"\n  }, props.selected && props.focused && {\n    \"boxShadow\": \"0 0 0 2px #B4D5FF\"\n  }, css([\"padding:3px 3px 2px;border-radius:4px;background-color:#eee;font-size:0.9em;\"])]\n});\n\nconst MentionInputElement = props => {\n  const {\n    attributes,\n    children,\n    nodeProps,\n    element,\n    as,\n    onClick\n  } = props;\n  const rootProps = getRootProps(props);\n  const selected = useSelected();\n  const focused = useFocused();\n  const styles = getMentionInputElementStyles({ ...props,\n    selected,\n    focused\n  });\n  return /*#__PURE__*/React.createElement(_StyledSpan, _extends({}, attributes, {\n    as: as,\n    \"data-slate-value\": element.value,\n    className: styles.root.className,\n    onClick: getHandler(onClick, element)\n  }, rootProps, nodeProps, {\n    $_css: styles.root.css\n  }), children);\n};\n\nvar _StyledSpan = _styled(\"span\").withConfig({\n  displayName: \"MentionInputElement___StyledSpan\",\n  componentId: \"sc-1xv1w6t-0\"\n})([\"\", \"\"], p => p.$_css);\n\nexport { MentionCombobox, MentionElement, MentionInputElement, getMentionElementStyles, getMentionInputElementStyles };","map":{"version":3,"sources":["../src/MentionCombobox/MentionCombobox.tsx","../src/MentionElement/MentionElement.styles.ts","../src/MentionElement/MentionElement.tsx","../src/MentionInputElement/MentionInputElement.styles.ts","../src/MentionInputElement/MentionInputElement.tsx"],"names":["MentionCombobox","pluginKey","id","editor","usePlateEditorRef","trigger","getPluginOptions","getMentionOnSelectItem","key","getMentionElementStyles","props","createStyles","prefixClassNames","root","css","MentionElement","renderLabel","rootProps","getRootProps","selected","useSelected","focused","useFocused","styles","element","getHandler","getMentionInputElementStyles","MentionInputElement","onClick"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Combobox, ComboboxProps, Data, NoData } from '@udecode/plate-combobox';\nimport { getPluginOptions, usePlateEditorRef } from '@udecode/plate-core';\nimport {\n  ELEMENT_MENTION,\n  getMentionOnSelectItem,\n  MentionPlugin,\n} from '@udecode/plate-mention';\n\nexport const MentionCombobox = <TData extends Data = NoData>({\n  items,\n  component,\n  onRenderItem,\n  pluginKey = ELEMENT_MENTION,\n  id = pluginKey,\n}: Pick<\n  Partial<ComboboxProps<TData>>,\n  'id' | 'items' | 'component' | 'onRenderItem'\n> & { pluginKey?: string }) => {\n  const editor = usePlateEditorRef()!;\n\n  const { trigger } = getPluginOptions<MentionPlugin>(editor, pluginKey);\n\n  return (\n    <Combobox\n      id={id}\n      trigger={trigger!}\n      controlled\n      items={items}\n      component={component}\n      onRenderItem={onRenderItem}\n      onSelectItem={getMentionOnSelectItem({\n        key: pluginKey,\n      })}\n    />\n  );\n};\n","import { createStyles } from '@udecode/plate-styled-components';\nimport { css } from 'styled-components';\nimport tw from 'twin.macro';\nimport { MentionElementStyleProps } from './MentionElement.types';\n\nexport const getMentionElementStyles = (props: MentionElementStyleProps) =>\n  createStyles(\n    { prefixClassNames: 'MentionElement', ...props },\n    {\n      root: [\n        tw`my-0 mx-px align-baseline inline-block`,\n        props.selected && props.focused && tw`boxShadow[0 0 0 2px #B4D5FF]`,\n        css`\n          padding: 3px 3px 2px;\n          border-radius: 4px;\n          background-color: #eee;\n          font-size: 0.9em;\n        `,\n      ],\n    }\n  );\n","import React from 'react';\nimport { getHandler } from '@udecode/plate-core';\nimport { getRootProps } from '@udecode/plate-styled-components';\nimport { useFocused, useSelected } from 'slate-react';\nimport { getMentionElementStyles } from './MentionElement.styles';\nimport { MentionElementProps } from './MentionElement.types';\n\nexport const MentionElement = (props: MentionElementProps) => {\n  const {\n    attributes,\n    children,\n    nodeProps,\n    element,\n    prefix,\n    as,\n    onClick,\n    renderLabel,\n  } = props;\n\n  const rootProps = getRootProps(props);\n\n  const selected = useSelected();\n  const focused = useFocused();\n\n  const styles = getMentionElementStyles({ ...props, selected, focused });\n\n  return (\n    <span\n      {...attributes}\n      as={as}\n      data-slate-value={element.value}\n      className={styles.root.className}\n      css={styles.root.css}\n      contentEditable={false}\n      onClick={getHandler(onClick, element)}\n      {...rootProps}\n      {...nodeProps}\n    >\n      {prefix}\n      {renderLabel ? renderLabel(element) : element.value}\n      {children}\n    </span>\n  );\n};\n","import { createStyles } from '@udecode/plate-styled-components';\nimport tw, { css } from 'twin.macro';\nimport { MentionInputElementStyleProps } from './MentionInputElement.types';\n\nexport const getMentionInputElementStyles = (\n  props: MentionInputElementStyleProps\n) =>\n  createStyles(\n    { prefixClassNames: 'MentionInputElement', ...props },\n    {\n      root: [\n        tw`my-0 mx-px align-baseline inline-block`,\n        props.selected && props.focused && tw`boxShadow[0 0 0 2px #B4D5FF]`,\n        css`\n          padding: 3px 3px 2px;\n          border-radius: 4px;\n          background-color: #eee;\n          font-size: 0.9em;\n        `,\n      ],\n    }\n  );\n","import React from 'react';\nimport { getHandler } from '@udecode/plate-core';\nimport { getRootProps } from '@udecode/plate-styled-components';\nimport { useFocused, useSelected } from 'slate-react';\nimport { getMentionInputElementStyles } from './MentionInputElement.styles';\nimport { MentionInputElementProps } from './MentionInputElement.types';\n\nexport const MentionInputElement = (props: MentionInputElementProps) => {\n  const { attributes, children, nodeProps, element, as, onClick } = props;\n\n  const rootProps = getRootProps(props);\n\n  const selected = useSelected();\n  const focused = useFocused();\n\n  const styles = getMentionInputElementStyles({\n    ...props,\n    selected,\n    focused,\n  });\n\n  return (\n    <span\n      {...attributes}\n      as={as}\n      data-slate-value={element.value}\n      className={styles.root.className}\n      css={styles.root.css}\n      onClick={getHandler(onClick, element)}\n      {...rootProps}\n      {...nodeProps}\n    >\n      {children}\n    </span>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}