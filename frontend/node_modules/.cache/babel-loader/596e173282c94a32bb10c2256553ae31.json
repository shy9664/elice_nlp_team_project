{"ast":null,"code":"import { createStyles, getRootProps } from '@udecode/plate-styled-components';\nimport _styled, { css } from 'styled-components';\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { setNodes, usePlateEditorRef } from '@udecode/plate-core';\nimport { Resizable } from 're-resizable';\nimport { Transforms, Node } from 'slate';\nimport { useFocused, useSelected, ReactEditor } from 'slate-react';\nimport { insertImage } from '@udecode/plate-image';\nimport { ToolbarButton } from '@udecode/plate-toolbar';\n\nconst getImageElementStyles = props => {\n  const {\n    focused,\n    selected,\n    align,\n    caption = {\n      align: 'center'\n    }\n  } = props;\n  const handle = [{\n    \"display\": \"flex\",\n    \"flexDirection\": \"column\",\n    \"justifyContent\": \"center\",\n    \"position\": \"absolute\",\n    \"userSelect\": \"none\"\n  }, {\n    \"width\": \"1.5rem\",\n    \"height\": \"100%\",\n    \"top\": \"0px\",\n    \"zIndex\": \"10\"\n  }, css([\"::after{\", \";\", \";\", \";\", \";\", \";content:' ';width:3px;height:64px;border-radius:6px;}:hover,:focus,:active{::after{\", \";}}\"], {\n    \"opacity\": \"0\"\n  }, focused && selected && {\n    \"opacity\": \"1\"\n  }, {\n    \".group:hover &\": {\n      \"opacity\": \"1\"\n    }\n  }, {\n    \"display\": \"flex\"\n  }, {\n    \"--tw-bg-opacity\": \"1\",\n    \"backgroundColor\": \"rgba(156, 163, 175, var(--tw-bg-opacity))\"\n  }, {\n    \"--tw-bg-opacity\": \"1\",\n    \"backgroundColor\": \"rgba(59, 130, 246, var(--tw-bg-opacity))\"\n  })];\n  return createStyles({\n    prefixClassNames: 'ImageElement',\n    ...props\n  }, {\n    root: [{\n      \"paddingTop\": \"0.625rem\",\n      \"paddingBottom\": \"0.625rem\"\n    }],\n    resizable: [align === 'center' && {\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\"\n    }, align === 'right' && {\n      \"marginLeft\": \"auto\"\n    }],\n    figure: [{\n      \"margin\": \"0px\",\n      \"position\": \"relative\"\n    }],\n    img: [{\n      \"display\": \"block\",\n      \"maxWidth\": \"100%\",\n      \"paddingLeft\": \"0px\",\n      \"paddingRight\": \"0px\",\n      \"cursor\": \"pointer\",\n      \"width\": \"100%\"\n    }, {\n      \"borderRadius\": \"3px\",\n      \"objectFit\": \"cover\"\n    }, focused && selected && {\n      \"boxShadow\": \"0 0 0 1px rgb(59,130,249)\"\n    }],\n    figcaption: [align === 'center' && {\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\"\n    }, align === 'right' && {\n      \"marginLeft\": \"auto\"\n    }],\n    caption: [{\n      \"width\": \"100%\",\n      \"borderStyle\": \"none\",\n      \":focus\": {\n        \"outline\": \"2px solid transparent\",\n        \"outlineOffset\": \"2px\"\n      },\n      \"marginTop\": \"0.5rem\",\n      \"padding\": \"0px\",\n      \"resize\": \"none\"\n    }, (caption === null || caption === void 0 ? void 0 : caption.align) === 'center' && {\n      \"textAlign\": \"center\"\n    }, (caption === null || caption === void 0 ? void 0 : caption.align) === 'right' && {\n      \"textAlign\": \"right\"\n    }, css([\"font:inherit;color:inherit;background-color:inherit;:focus{::placeholder{opacity:0;}}\"])],\n    handleLeft: [...handle, {\n      \"left\": \"-0.75rem\",\n      \"marginLeft\": \"-0.75rem\",\n      \"paddingLeft\": \"0.75rem\"\n    }],\n    handleRight: [...handle, {\n      \"alignItems\": \"flex-end\",\n      \"right\": \"-0.75rem\",\n      \"marginRight\": \"-0.75rem\",\n      \"paddingRight\": \"0.75rem\"\n    }]\n  });\n};\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nconst ImageHandle = props => /*#__PURE__*/React.createElement(\"div\", props);\n\nconst ImageElement = props => {\n  var _styles$figure, _styles$figure2, _styles$resizable, _styles$handleLeft, _styles$handleLeft2, _styles$handleRight, _styles$handleRight2, _styles$resizable2, _styles$img, _styles$img2, _styles$figcaption, _styles$figcaption2, _styles$caption, _styles$caption2;\n\n  const {\n    attributes,\n    children,\n    element,\n    nodeProps,\n    caption = {},\n    resizableProps = {\n      minWidth: 92\n    },\n    align = 'center',\n    draggable,\n    editor\n  } = props;\n  const rootProps = getRootProps(props);\n  const {\n    placeholder = 'Write a caption...'\n  } = caption;\n  const {\n    url,\n    width: nodeWidth = '100%',\n    caption: nodeCaption = [{\n      children: [{\n        text: ''\n      }]\n    }]\n  } = element;\n  const focused = useFocused();\n  const selected = useSelected();\n  const [width, setWidth] = useState(nodeWidth); // const [captionId] = useState(nanoid());\n\n  useEffect(() => {\n    setWidth(nodeWidth);\n  }, [nodeWidth]);\n  const styles = getImageElementStyles({ ...props,\n    align,\n    focused,\n    selected\n  });\n  const setNodeWidth = useCallback(w => {\n    const path = ReactEditor.findPath(editor, element);\n\n    if (w === nodeWidth) {\n      // Focus the node if not resized\n      Transforms.select(editor, path);\n    } else {\n      setNodes(editor, {\n        width: w\n      }, {\n        at: path\n      });\n    }\n  }, [editor, element, nodeWidth]);\n  const onChangeCaption = useCallback(e => {\n    const path = ReactEditor.findPath(editor, element);\n    setNodes(editor, {\n      caption: [{\n        text: e.target.value\n      }]\n    }, {\n      at: path\n    });\n  }, [editor, element]);\n  const captionString = useMemo(() => {\n    return Node.string(nodeCaption[0]) || '';\n  }, [nodeCaption]);\n  return /*#__PURE__*/React.createElement(_StyledDiv, _extends({}, attributes, {\n    className: styles.root.className\n  }, rootProps, nodeProps, {\n    $_css: styles.root.css\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    contentEditable: false\n  }, /*#__PURE__*/React.createElement(_StyledFigure, {\n    className: `group ${(_styles$figure = styles.figure) === null || _styles$figure === void 0 ? void 0 : _styles$figure.className}`,\n    $_css2: (_styles$figure2 = styles.figure) === null || _styles$figure2 === void 0 ? void 0 : _styles$figure2.css\n  }, /*#__PURE__*/React.createElement(_StyledResizable, _extends({\n    className: (_styles$resizable = styles.resizable) === null || _styles$resizable === void 0 ? void 0 : _styles$resizable.className,\n    size: {\n      width,\n      height: '100%'\n    },\n    maxWidth: \"100%\",\n    lockAspectRatio: true,\n    resizeRatio: align === 'center' ? 2 : 1,\n    enable: {\n      left: ['center', 'left'].includes(align),\n      right: ['center', 'right'].includes(align)\n    },\n    handleComponent: {\n      left: /*#__PURE__*/React.createElement(_StyledImageHandle, {\n        className: (_styles$handleLeft = styles.handleLeft) === null || _styles$handleLeft === void 0 ? void 0 : _styles$handleLeft.className,\n        $_css4: [(_styles$handleLeft2 = styles.handleLeft) === null || _styles$handleLeft2 === void 0 ? void 0 : _styles$handleLeft2.css]\n      }),\n      right: /*#__PURE__*/React.createElement(_StyledImageHandle2, {\n        className: (_styles$handleRight = styles.handleRight) === null || _styles$handleRight === void 0 ? void 0 : _styles$handleRight.className,\n        $_css5: (_styles$handleRight2 = styles.handleRight) === null || _styles$handleRight2 === void 0 ? void 0 : _styles$handleRight2.css\n      })\n    },\n    handleStyles: {\n      left: {\n        left: 0\n      },\n      right: {\n        right: 0\n      }\n    },\n    onResize: (e, direction, ref) => {\n      setWidth(ref.offsetWidth);\n    },\n    onResizeStop: (e, direction, ref) => setNodeWidth(ref.offsetWidth)\n  }, resizableProps, {\n    $_css3: (_styles$resizable2 = styles.resizable) === null || _styles$resizable2 === void 0 ? void 0 : _styles$resizable2.css\n  }), /*#__PURE__*/React.createElement(_StyledImg, _extends({\n    \"data-testid\": \"ImageElementImage\",\n    className: (_styles$img = styles.img) === null || _styles$img === void 0 ? void 0 : _styles$img.className,\n    src: url,\n    alt: captionString,\n    draggable: draggable\n  }, nodeProps, {\n    $_css6: (_styles$img2 = styles.img) === null || _styles$img2 === void 0 ? void 0 : _styles$img2.css\n  }))), !caption.disabled && (captionString.length || selected) && /*#__PURE__*/React.createElement(_StyledFigcaption, {\n    style: {\n      width\n    },\n    className: (_styles$figcaption = styles.figcaption) === null || _styles$figcaption === void 0 ? void 0 : _styles$figcaption.className,\n    $_css7: (_styles$figcaption2 = styles.figcaption) === null || _styles$figcaption2 === void 0 ? void 0 : _styles$figcaption2.css\n  }, /*#__PURE__*/React.createElement(_StyledTextareaAutosize, {\n    className: (_styles$caption = styles.caption) === null || _styles$caption === void 0 ? void 0 : _styles$caption.className,\n    value: nodeCaption[0].text,\n    placeholder: placeholder,\n    onChange: onChangeCaption,\n    $_css8: (_styles$caption2 = styles.caption) === null || _styles$caption2 === void 0 ? void 0 : _styles$caption2.css\n  })))), children);\n};\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"ImageElement___StyledDiv\",\n  componentId: \"sc-bie0hf-0\"\n})([\"\", \"\"], p => p.$_css);\n\nvar _StyledFigure = _styled(\"figure\").withConfig({\n  displayName: \"ImageElement___StyledFigure\",\n  componentId: \"sc-bie0hf-1\"\n})([\"\", \"\"], p => p.$_css2);\n\nvar _StyledResizable = _styled(Resizable).withConfig({\n  displayName: \"ImageElement___StyledResizable\",\n  componentId: \"sc-bie0hf-2\"\n})([\"\", \"\"], p => p.$_css3);\n\nvar _StyledImageHandle = _styled(ImageHandle).withConfig({\n  displayName: \"ImageElement___StyledImageHandle\",\n  componentId: \"sc-bie0hf-3\"\n})([\"\", \"\"], p => p.$_css4);\n\nvar _StyledImageHandle2 = _styled(ImageHandle).withConfig({\n  displayName: \"ImageElement___StyledImageHandle2\",\n  componentId: \"sc-bie0hf-4\"\n})([\"\", \"\"], p => p.$_css5);\n\nvar _StyledImg = _styled(\"img\").withConfig({\n  displayName: \"ImageElement___StyledImg\",\n  componentId: \"sc-bie0hf-5\"\n})([\"\", \"\"], p => p.$_css6);\n\nvar _StyledFigcaption = _styled(\"figcaption\").withConfig({\n  displayName: \"ImageElement___StyledFigcaption\",\n  componentId: \"sc-bie0hf-6\"\n})([\"\", \"\"], p => p.$_css7);\n\nvar _StyledTextareaAutosize = _styled(TextareaAutosize).withConfig({\n  displayName: \"ImageElement___StyledTextareaAutosize\",\n  componentId: \"sc-bie0hf-7\"\n})([\"\", \"\"], p => p.$_css8);\n\nconst ImageToolbarButton = ({\n  getImageUrl,\n  ...props\n}) => {\n  const editor = usePlateEditorRef();\n  return /*#__PURE__*/React.createElement(ToolbarButton, _extends({\n    onMouseDown: async event => {\n      if (!editor) return;\n      event.preventDefault();\n      let url;\n\n      if (getImageUrl) {\n        url = await getImageUrl();\n      } else {\n        url = window.prompt('Enter the URL of the image:');\n      }\n\n      if (!url) return;\n      insertImage(editor, url);\n    }\n  }, props));\n};\n\nexport { ImageElement, ImageHandle, ImageToolbarButton, getImageElementStyles };","map":{"version":3,"sources":["../src/ImageElement/ImageElement.styles.ts","../src/ImageElement/ImageHandle.tsx","../src/ImageElement/ImageElement.tsx","../src/ImageToolbarButton/ImageToolbarButton.tsx"],"names":["getImageElementStyles","props","caption","align","handle","css","focused","createStyles","prefixClassNames","root","resizable","figure","img","figcaption","handleLeft","handleRight","ImageHandle","ImageElement","resizableProps","minWidth","editor","rootProps","getRootProps","placeholder","width","nodeWidth","nodeCaption","children","text","useFocused","selected","useSelected","useState","useEffect","setWidth","styles","setNodeWidth","useCallback","w","path","ReactEditor","Transforms","setNodes","at","onChangeCaption","e","value","captionString","useMemo","Node","className","height","left","right","ref","draggable","ImageToolbarButton","usePlateEditorRef","event","url","getImageUrl","window","insertImage"],"mappings":";;;;;;;;;;;MAKaA,qBAAqB,GAAIC,KAAD,IAAmC;AACtE,QAAM;AAAA,IAAA,OAAA;AAAA,IAAA,QAAA;AAAA,IAAA,KAAA;AAIJC,IAAAA,OAAO,GAAG;AACRC,MAAAA,KAAK,EAAE;AADC;AAJN,MAAN,KAAA;AASA,QAAMC,MAAM,GAAG,CACX;AAAA,eAAA,MAAA;AAAA,qBAAA,QAAA;AAAA,sBAAA,QAAA;AAAA,gBAAA,UAAA;AAAA,kBAAA;AAAA,GADW,EAEX;AAAA,aAAA,QAAA;AAAA,cAAA,MAAA;AAAA,WAAA,KAAA;AAAA,cAAA;AAAA,GAFW,EAGbC,GAHa,CAAA,CAAA,UAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,sFAAA,EAAA,KAAA,CAAA,EAKL;AAAA,eAAA;AAAA,GALK,EAMPC,OAAO,IAAPA,QAAAA,IAAyB;AAAA,eAAA;AAAA,GANlB,EAOL;AAAA,sBAAA;AAAA,iBAAA;AAAA;AAAA,GAPK,EAQL;AAAA,eAAA;AAAA,GARK,EASL;AAAA,uBAAA,GAAA;AAAA,uBAAA;AAAA,GATK,EAqBH;AAAA,uBAAA,GAAA;AAAA,uBAAA;AAAA,GArBG,CAAA,CAAf;AA2BA,SAAOC,YAAY,CACjB;AAAEC,IAAAA,gBAAgB,EAAlB,cAAA;AAAoC,OAAGP;AAAvC,GADiB,EAEjB;AACEQ,IAAAA,IAAI,EAAE,CAAG;AAAA,oBAAA,UAAA;AAAA,uBAAA;AAAA,KAAH,CADR;AAEEC,IAAAA,SAAS,EAAE,CACTP,KAAK,KAALA,QAAAA,IAAwB;AAAA,oBAAA,MAAA;AAAA,qBAAA;AAAA,KADf,EAETA,KAAK,KAALA,OAAAA,IAAuB;AAAA,oBAAA;AAAA,KAFd,CAFb;AAMEQ,IAAAA,MAAM,EAAE,CAAG;AAAA,gBAAA,KAAA;AAAA,kBAAA;AAAA,KAAH,CANV;AAOEC,IAAAA,GAAG,EAAE,CACD;AAAA,iBAAA,OAAA;AAAA,kBAAA,MAAA;AAAA,qBAAA,KAAA;AAAA,sBAAA,KAAA;AAAA,gBAAA,SAAA;AAAA,eAAA;AAAA,KADC,EAED;AAAA,sBAAA,KAAA;AAAA,mBAAA;AAAA,KAFC,EAGHN,OAAO,IAAPA,QAAAA,IAAyB;AAAA,mBAAA;AAAA,KAHtB,CAPP;AAYEO,IAAAA,UAAU,EAAE,CACVV,KAAK,KAALA,QAAAA,IAAwB;AAAA,oBAAA,MAAA;AAAA,qBAAA;AAAA,KADd,EAEVA,KAAK,KAALA,OAAAA,IAAuB;AAAA,oBAAA;AAAA,KAFb,CAZd;AAgBED,IAAAA,OAAO,EAAE,CACL;AAAA,eAAA,MAAA;AAAA,qBAAA,MAAA;AAAA,gBAAA;AAAA,mBAAA,uBAAA;AAAA,yBAAA;AAAA,OAAA;AAAA,mBAAA,QAAA;AAAA,iBAAA,KAAA;AAAA,gBAAA;AAAA,KADK,EAEP,CAAA,OAAO,KAAP,IAAA,IAAA,OAAO,KAAA,KAAP,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAP,KAAA,MAAA,QAAA,IAAiC;AAAA,mBAAA;AAAA,KAF1B,EAGP,CAAA,OAAO,KAAP,IAAA,IAAA,OAAO,KAAA,KAAP,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAP,KAAA,MAAA,OAAA,IAAgC;AAAA,mBAAA;AAAA,KAHzB,EAIPG,GAJO,CAAA,CAhBX,uFAgBW,CAAA,CAAA,CAhBX;AAgCES,IAAAA,UAAU,EAAE,CAAC,GAAD,MAAA,EAAc;AAAA,cAAA,UAAA;AAAA,oBAAA,UAAA;AAAA,qBAAA;AAAA,KAAd,CAhCd;AAiCEC,IAAAA,WAAW,EAAE,CAAC,GAAD,MAAA,EAAc;AAAA,oBAAA,UAAA;AAAA,eAAA,UAAA;AAAA,qBAAA,UAAA;AAAA,sBAAA;AAAA,KAAd;AAjCf,GAFiB,CAAnB;AAsCD,C;;;;;;;;;;;;;;;;;;;;MCpEYC,WAAW,GAAIf,KAAD,IAAA,aAA6B,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,KAAA,C;;MCK3CgB,YAAY,GAAIhB,KAAD,IAA8B;AAAA,MAAA,cAAA,EAAA,eAAA,EAAA,iBAAA,EAAA,kBAAA,EAAA,mBAAA,EAAA,mBAAA,EAAA,oBAAA,EAAA,kBAAA,EAAA,WAAA,EAAA,YAAA,EAAA,kBAAA,EAAA,mBAAA,EAAA,eAAA,EAAA,gBAAA;;AACxD,QAAM;AAAA,IAAA,UAAA;AAAA,IAAA,QAAA;AAAA,IAAA,OAAA;AAAA,IAAA,SAAA;AAKJC,IAAAA,OAAO,GALH,EAAA;AAMJgB,IAAAA,cAAc,GAAG;AACfC,MAAAA,QAAQ,EAAE;AADK,KANb;AASJhB,IAAAA,KAAK,GATD,QAAA;AAAA,IAAA,SAAA;AAWJiB,IAAAA;AAXI,MAAN,KAAA;AAcA,QAAMC,SAAS,GAAGC,YAAY,CAA9B,KAA8B,CAA9B;AAEA,QAAM;AAAEC,IAAAA,WAAW,GAAG;AAAhB,MAAN,OAAA;AAEA,QAAM;AAAA,IAAA,GAAA;AAEJC,IAAAA,KAAK,EAAEC,SAAS,GAFZ,MAAA;AAGJvB,IAAAA,OAAO,EAAEwB,WAAW,GAAG,CAAC;AAAEC,MAAAA,QAAQ,EAAE,CAAC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAD;AAAZ,KAAD;AAHnB,MAAN,OAAA;AAKA,QAAMtB,OAAO,GAAGuB,UAAhB,EAAA;AACA,QAAMC,QAAQ,GAAGC,WAAjB,EAAA;AACA,QAAM,CAAA,KAAA,EAAA,QAAA,IAAoBC,QAAQ,CA1BsB,SA0BtB,CAAlC,CA1BwD,CAAA;;AA8BxDC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,QAAQ,CAARA,SAAQ,CAARA;AADO,GAAA,EAEN,CAFHD,SAEG,CAFM,CAATA;AAIA,QAAME,MAAM,GAAGnC,qBAAqB,CAAC,EAAE,GAAF,KAAA;AAAA,IAAA,KAAA;AAAA,IAAA,OAAA;AAA4B8B,IAAAA;AAA5B,GAAD,CAApC;AAEA,QAAMM,YAAY,GAAGC,WAAW,CAC7BC,CAAD,IAAe;AACb,UAAMC,IAAI,GAAGC,WAAW,CAAXA,QAAAA,CAAAA,MAAAA,EAAb,OAAaA,CAAb;;AAEA,QAAIF,CAAC,KAAL,SAAA,EAAqB;AACnB;AACAG,MAAAA,UAAU,CAAVA,MAAAA,CAAAA,MAAAA,EAAAA,IAAAA;AAFF,KAAA,MAGO;AACLC,MAAAA,QAAQ,CAAA,MAAA,EAAS;AAAElB,QAAAA,KAAK,EAAEc;AAAT,OAAT,EAAuB;AAAEK,QAAAA,EAAE,EAAEJ;AAAN,OAAvB,CAARG;AACD;AAT2B,GAAA,EAW9B,CAAA,MAAA,EAAA,OAAA,EAXF,SAWE,CAX8B,CAAhC;AAcA,QAAME,eAAwD,GAAGP,WAAW,CACzEQ,CAAD,IAAO;AACL,UAAMN,IAAI,GAAGC,WAAW,CAAXA,QAAAA,CAAAA,MAAAA,EAAb,OAAaA,CAAb;AACAE,IAAAA,QAAQ,CAAA,MAAA,EAAS;AAAExC,MAAAA,OAAO,EAAE,CAAC;AAAE0B,QAAAA,IAAI,EAAEiB,CAAC,CAADA,MAAAA,CAASC;AAAjB,OAAD;AAAX,KAAT,EAAkD;AAAEH,MAAAA,EAAE,EAAEJ;AAAN,KAAlD,CAARG;AAHwE,GAAA,EAK1E,CAAA,MAAA,EALF,OAKE,CAL0E,CAA5E;AAQA,QAAMK,aAAa,GAAGC,OAAO,CAAC,MAAM;AAClC,WAAOC,IAAI,CAAJA,MAAAA,CAAYvB,WAAW,CAAvBuB,CAAuB,CAAvBA,KAAP,EAAA;AAD2B,GAAA,EAE1B,CAFH,WAEG,CAF0B,CAA7B;AAIA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,QAAA,CAAA,EAAA,EAAA,UAAA,EAAA;AAGE,IAAA,SAAS,EAAEd,MAAM,CAANA,IAAAA,CAAYe;AAHzB,GAAA,EAAA,SAAA,EAAA,SAAA,EAAA;AAAA,IAAA,KAAA,EAEOf,MAAM,CAANA,IAAAA,CAAY9B;AAFnB,GAAA,CAAA,EAAA,aAOE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,eAAe,EAAE;AAAtB,GAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA;AAEE,IAAA,SAAS,EAAG,SAAD,CAAA,cAAA,GAAS8B,MAAM,CAAf,MAAA,MAAA,IAAA,IAAA,cAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAASA,cAAAA,CAAee,SAFrC,EAAA;AAAA,IAAA,MAAA,EAAA,CAAA,eAAA,GACOf,MAAM,CADb,MAAA,MAAA,IAAA,IAAA,eAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GACOA,eAAAA,CAAe9B;AADtB,GAAA,EAAA,aAIE,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA,QAAA,CAAA;AAGE,IAAA,SAAS,EAAA,CAAA,iBAAA,GAAE8B,MAAM,CAAR,SAAA,MAAA,IAAA,IAAA,iBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAEA,iBAAAA,CAHb,SAAA;AAIE,IAAA,IAAI,EAAE;AAAA,MAAA,KAAA;AAASgB,MAAAA,MAAM,EAAE;AAAjB,KAJR;AAKE,IAAA,QAAQ,EALV,MAAA;AAME,IAAA,eAAe,EANjB,IAAA;AAOE,IAAA,WAAW,EAAEhD,KAAK,KAALA,QAAAA,GAAAA,CAAAA,GAPf,CAAA;AAQE,IAAA,MAAM,EAAE;AACNiD,MAAAA,IAAI,EAAE,CAAA,QAAA,EAAA,MAAA,EAAA,QAAA,CADA,KACA,CADA;AAENC,MAAAA,KAAK,EAAE,CAAA,QAAA,EAAA,OAAA,EAAA,QAAA,CAAA,KAAA;AAFD,KARV;AAYE,IAAA,eAAe,EAAE;AACfD,MAAAA,IAAI,EAAA,aACF,KAAA,CAAA,aAAA,CAAA,kBAAA,EAAA;AAEE,QAAA,SAAS,EAAA,CAAA,kBAAA,GAAEjB,MAAM,CAAR,UAAA,MAAA,IAAA,IAAA,kBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAEA,kBAAAA,CAFb,SAAA;AAAA,QAAA,MAAA,EACO,CAAA,CAAA,mBAAA,GAACA,MAAM,CAAP,UAAA,MAAA,IAAA,IAAA,mBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAACA,mBAAAA,CAAD,GAAA;AADP,OAAA,CAFa;AAOfkB,MAAAA,KAAK,EAAA,aACH,KAAA,CAAA,aAAA,CAAA,mBAAA,EAAA;AAEE,QAAA,SAAS,EAAA,CAAA,mBAAA,GAAElB,MAAM,CAAR,WAAA,MAAA,IAAA,IAAA,mBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAEA,mBAAAA,CAFb,SAAA;AAAA,QAAA,MAAA,EAAA,CAAA,oBAAA,GACOA,MAAM,CADb,WAAA,MAAA,IAAA,IAAA,oBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GACOA,oBAAAA,CAAoB9B;AAD3B,OAAA;AARa,KAZnB;AA0BE,IAAA,YAAY,EAAE;AACZ+C,MAAAA,IAAI,EAAE;AAAEA,QAAAA,IAAI,EAAE;AAAR,OADM;AAEZC,MAAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT;AAFK,KA1BhB;AA8BE,IAAA,QAAQ,EAAE,CAAA,CAAA,EAAA,SAAA,EAAA,GAAA,KAAuB;AAC/BnB,MAAAA,QAAQ,CAACoB,GAAG,CAAZpB,WAAQ,CAARA;AA/BJ,KAAA;AAiCE,IAAA,YAAY,EAAE,CAAA,CAAA,EAAA,SAAA,EAAA,GAAA,KAAuBE,YAAY,CAACkB,GAAG,CAAJ,WAAA;AAjCnD,GAAA,EAAA,cAAA,EAAA;AAAA,IAAA,MAAA,EAAA,CAAA,kBAAA,GAEOnB,MAAM,CAFb,SAAA,MAAA,IAAA,IAAA,kBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAEOA,kBAAAA,CAAkB9B;AAFzB,GAAA,CAAA,EAAA,aAoCE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,QAAA,CAAA;AACE,mBADF,mBAAA;AAGE,IAAA,SAAS,EAAA,CAAA,WAAA,GAAE8B,MAAM,CAAR,GAAA,MAAA,IAAA,IAAA,WAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAEA,WAAAA,CAHb,SAAA;AAIE,IAAA,GAAG,EAJL,GAAA;AAKE,IAAA,GAAG,EALL,aAAA;AAME,IAAA,SAAS,EAAEoB;AANb,GAAA,EAAA,SAAA,EAAA;AAAA,IAAA,MAAA,EAAA,CAAA,YAAA,GAEOpB,MAAM,CAFb,GAAA,MAAA,IAAA,IAAA,YAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAEOA,YAAAA,CAAY9B;AAFnB,GAAA,CAAA,CApCF,CAJF,EAmDG,CAACH,OAAO,CAAR,QAAA,KAAsB6C,aAAa,CAAbA,MAAAA,IAAtB,QAAA,KAAA,aACC,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA;AACE,IAAA,KAAK,EAAE;AAAEvB,MAAAA;AAAF,KADT;AAGE,IAAA,SAAS,EAAA,CAAA,kBAAA,GAAEW,MAAM,CAAR,UAAA,MAAA,IAAA,IAAA,kBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAEA,kBAAAA,CAHb,SAAA;AAAA,IAAA,MAAA,EAAA,CAAA,mBAAA,GAEOA,MAAM,CAFb,UAAA,MAAA,IAAA,IAAA,mBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAEOA,mBAAAA,CAAmB9B;AAF1B,GAAA,EAAA,aAKE,KAAA,CAAA,aAAA,CAAA,uBAAA,EAAA;AAEE,IAAA,SAAS,EAAA,CAAA,eAAA,GAAE8B,MAAM,CAAR,OAAA,MAAA,IAAA,IAAA,eAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAEA,eAAAA,CAFb,SAAA;AAGE,IAAA,KAAK,EAAET,WAAW,CAAXA,CAAW,CAAXA,CAHT,IAAA;AAIE,IAAA,WAAW,EAJb,WAAA;AAKE,IAAA,QAAQ,EALV,eAAA;AAAA,IAAA,MAAA,EAAA,CAAA,gBAAA,GACOS,MAAM,CADb,OAAA,MAAA,IAAA,IAAA,gBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GACOA,gBAAAA,CAAgB9B;AADvB,GAAA,CALF,CApDJ,CADF,CAPF,EADF,QACE,CADF;AA8FD,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCjKYmD,kBAAkB,GAAG,CAAC;AAAA,EAAA,WAAA;AAEjC,KAAGvD;AAF8B,CAAD,KAGH;AAC7B,QAAMmB,MAAM,GAAGqC,iBAAf,EAAA;AAEA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA,QAAA,CAAA;AACE,IAAA,WAAW,EAAE,MAAA,KAAA,IAAiB;AAC5B,UAAI,CAAJ,MAAA,EAAa;AAEbC,MAAAA,KAAK,CAALA,cAAAA;AAEA,UAAA,GAAA;;AACA,UAAA,WAAA,EAAiB;AACfC,QAAAA,GAAG,GAAG,MAAMC,WAAZD,EAAAA;AADF,OAAA,MAEO;AACLA,QAAAA,GAAG,GAAGE,MAAM,CAANA,MAAAA,CAANF,6BAAME,CAANF;AACD;;AACD,UAAI,CAAJ,GAAA,EAAU;AAEVG,MAAAA,WAAW,CAAA,MAAA,EAAXA,GAAW,CAAXA;AACD;AAfH,GAAA,EADF,KACE,CAAA,CADF;AAoBD,C","sourcesContent":["import { createStyles } from '@udecode/plate-styled-components';\nimport { css } from 'styled-components';\nimport tw from 'twin.macro';\nimport { ImageElementStyleProps } from './ImageElement.types';\n\nexport const getImageElementStyles = (props: ImageElementStyleProps) => {\n  const {\n    focused,\n    selected,\n    align,\n    caption = {\n      align: 'center',\n    },\n  } = props;\n\n  const handle = [\n    tw`flex flex-col justify-center absolute select-none`,\n    tw`w-6 h-full top-0 z-10`,\n    css`\n      ::after {\n        ${tw`opacity-0`};\n        ${focused && selected && tw`opacity-100`};\n        ${tw`group-hover:opacity-100`};\n        ${tw`flex`};\n        ${tw`bg-gray-400`};\n\n        content: ' ';\n        width: 3px;\n        height: 64px;\n        border-radius: 6px;\n      }\n\n      :hover,\n      :focus,\n      :active {\n        ::after {\n          ${tw`bg-blue-500`};\n        }\n      }\n    `,\n  ];\n\n  return createStyles(\n    { prefixClassNames: 'ImageElement', ...props },\n    {\n      root: [tw`py-2.5`],\n      resizable: [\n        align === 'center' && tw`mx-auto`,\n        align === 'right' && tw`ml-auto`,\n      ],\n      figure: [tw`m-0 relative`],\n      img: [\n        tw`block max-w-full px-0 cursor-pointer w-full`,\n        tw`borderRadius[3px] object-cover`,\n        focused && selected && tw`boxShadow[0 0 0 1px rgb(59,130,249)]`,\n      ],\n      figcaption: [\n        align === 'center' && tw`mx-auto`,\n        align === 'right' && tw`ml-auto`,\n      ],\n      caption: [\n        tw`w-full border-none focus:outline-none mt-2 p-0 resize-none`,\n        caption?.align === 'center' && tw`text-center`,\n        caption?.align === 'right' && tw`text-right`,\n        css`\n          font: inherit;\n          color: inherit;\n          background-color: inherit;\n\n          :focus {\n            ::placeholder {\n              opacity: 0;\n            }\n          }\n        `,\n      ],\n      handleLeft: [...handle, tw`-left-3 -ml-3 pl-3`],\n      handleRight: [...handle, tw`items-end -right-3 -mr-3 pr-3`],\n    }\n  );\n};\n","import React from 'react';\nimport { CSSProp } from 'styled-components';\n\nexport interface ImageHandleProps\n  extends React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  > {\n  css?: CSSProp;\n  className?: string;\n}\n\nexport const ImageHandle = (props: ImageHandleProps) => <div {...props} />;\n","import React, {\n  ChangeEventHandler,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { setNodes } from '@udecode/plate-core';\nimport { getRootProps } from '@udecode/plate-styled-components';\nimport { Resizable } from 're-resizable';\nimport { Node, Transforms } from 'slate';\nimport { ReactEditor, useFocused, useSelected } from 'slate-react';\nimport { getImageElementStyles } from './ImageElement.styles';\nimport { ImageElementProps } from './ImageElement.types';\nimport { ImageHandle } from './ImageHandle';\n\nexport const ImageElement = (props: ImageElementProps) => {\n  const {\n    attributes,\n    children,\n    element,\n    nodeProps,\n    caption = {},\n    resizableProps = {\n      minWidth: 92,\n    },\n    align = 'center',\n    draggable,\n    editor,\n  } = props;\n\n  const rootProps = getRootProps(props);\n\n  const { placeholder = 'Write a caption...' } = caption;\n\n  const {\n    url,\n    width: nodeWidth = '100%',\n    caption: nodeCaption = [{ children: [{ text: '' }] }],\n  } = element;\n  const focused = useFocused();\n  const selected = useSelected();\n  const [width, setWidth] = useState(nodeWidth);\n\n  // const [captionId] = useState(nanoid());\n\n  useEffect(() => {\n    setWidth(nodeWidth);\n  }, [nodeWidth]);\n\n  const styles = getImageElementStyles({ ...props, align, focused, selected });\n\n  const setNodeWidth = useCallback(\n    (w: number) => {\n      const path = ReactEditor.findPath(editor, element);\n\n      if (w === nodeWidth) {\n        // Focus the node if not resized\n        Transforms.select(editor, path);\n      } else {\n        setNodes(editor, { width: w }, { at: path });\n      }\n    },\n    [editor, element, nodeWidth]\n  );\n\n  const onChangeCaption: ChangeEventHandler<HTMLTextAreaElement> = useCallback(\n    (e) => {\n      const path = ReactEditor.findPath(editor as ReactEditor, element);\n      setNodes(editor, { caption: [{ text: e.target.value }] }, { at: path });\n    },\n    [editor, element]\n  );\n\n  const captionString = useMemo(() => {\n    return Node.string(nodeCaption[0]) || '';\n  }, [nodeCaption]);\n\n  return (\n    <div\n      {...attributes}\n      css={styles.root.css}\n      className={styles.root.className}\n      {...rootProps}\n      {...nodeProps}\n    >\n      <div contentEditable={false}>\n        <figure\n          css={styles.figure?.css}\n          className={`group ${styles.figure?.className}`}\n        >\n          <Resizable\n            // @ts-ignore\n            css={styles.resizable?.css}\n            className={styles.resizable?.className}\n            size={{ width, height: '100%' }}\n            maxWidth=\"100%\"\n            lockAspectRatio\n            resizeRatio={align === 'center' ? 2 : 1}\n            enable={{\n              left: ['center', 'left'].includes(align),\n              right: ['center', 'right'].includes(align),\n            }}\n            handleComponent={{\n              left: (\n                <ImageHandle\n                  css={[styles.handleLeft?.css]}\n                  className={styles.handleLeft?.className}\n                />\n              ),\n              right: (\n                <ImageHandle\n                  css={styles.handleRight?.css}\n                  className={styles.handleRight?.className}\n                />\n              ),\n            }}\n            handleStyles={{\n              left: { left: 0 },\n              right: { right: 0 },\n            }}\n            onResize={(e, direction, ref) => {\n              setWidth(ref.offsetWidth);\n            }}\n            onResizeStop={(e, direction, ref) => setNodeWidth(ref.offsetWidth)}\n            {...resizableProps}\n          >\n            <img\n              data-testid=\"ImageElementImage\"\n              css={styles.img?.css}\n              className={styles.img?.className}\n              src={url}\n              alt={captionString}\n              draggable={draggable}\n              {...nodeProps}\n            />\n          </Resizable>\n\n          {!caption.disabled && (captionString.length || selected) && (\n            <figcaption\n              style={{ width }}\n              css={styles.figcaption?.css}\n              className={styles.figcaption?.className}\n            >\n              <TextareaAutosize\n                css={styles.caption?.css}\n                className={styles.caption?.className}\n                value={nodeCaption[0].text}\n                placeholder={placeholder}\n                onChange={onChangeCaption}\n              />\n\n              {/* <div css={styles.caption?.css}> */}\n              {/*  <Plate */}\n              {/*    id={captionId} */}\n              {/*    plugins={plugins} */}\n              {/*    initialValue={nodeCaption} */}\n              {/*    value={nodeCaption} */}\n              {/*    editableProps={{ */}\n              {/*      placeholder, */}\n              {/*      className: styles.caption?.className, */}\n              {/*    }} */}\n              {/*    onChange={onChangeCaption} */}\n              {/*  /> */}\n              {/* </div> */}\n            </figcaption>\n          )}\n        </figure>\n      </div>\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\nimport { usePlateEditorRef } from '@udecode/plate-core';\nimport { insertImage } from '@udecode/plate-image';\nimport { ToolbarButton, ToolbarButtonProps } from '@udecode/plate-toolbar';\n\nexport interface ImageToolbarButtonProps extends ToolbarButtonProps {\n  /**\n   * Default onMouseDown is getting the image url by calling this promise before inserting the image.\n   */\n  getImageUrl?: () => Promise<string>;\n}\n\nexport const ImageToolbarButton = ({\n  getImageUrl,\n  ...props\n}: ImageToolbarButtonProps) => {\n  const editor = usePlateEditorRef()!;\n\n  return (\n    <ToolbarButton\n      onMouseDown={async (event) => {\n        if (!editor) return;\n\n        event.preventDefault();\n\n        let url;\n        if (getImageUrl) {\n          url = await getImageUrl();\n        } else {\n          url = window.prompt('Enter the URL of the image:');\n        }\n        if (!url) return;\n\n        insertImage(editor, url);\n      }}\n      {...props}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}