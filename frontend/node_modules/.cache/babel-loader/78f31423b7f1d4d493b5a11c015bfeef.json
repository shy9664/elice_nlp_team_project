{"ast":null,"code":"import { createPluginFactory } from '@udecode/plate-core';\nconst MARK_BG_COLOR = 'backgroundColor';\nconst createFontBackgroundColorPlugin = createPluginFactory({\n  key: MARK_BG_COLOR,\n  inject: {\n    props: {\n      nodeKey: MARK_BG_COLOR\n    }\n  },\n  then: (editor, {\n    type\n  }) => ({\n    deserializeHtml: {\n      isLeaf: true,\n      getNode: element => ({\n        [type]: element.style.backgroundColor\n      }),\n      validStyle: {\n        backgroundColor: '*'\n      }\n    }\n  })\n});\nconst MARK_COLOR = 'color';\nconst createFontColorPlugin = createPluginFactory({\n  key: MARK_COLOR,\n  inject: {\n    props: {\n      nodeKey: MARK_COLOR,\n      defaultNodeValue: 'black'\n    }\n  },\n  then: (editor, {\n    type\n  }) => ({\n    deserializeHtml: {\n      isLeaf: true,\n\n      getNode(element) {\n        if (element.style.color) {\n          return {\n            [type]: element.style.color\n          };\n        }\n      },\n\n      validStyle: {\n        color: '*'\n      }\n    }\n  })\n});\nconst MARK_FONT_FAMILY = 'fontFamily';\nconst createFontFamilyPlugin = createPluginFactory({\n  key: MARK_FONT_FAMILY,\n  inject: {\n    props: {\n      nodeKey: MARK_FONT_FAMILY\n    }\n  },\n  then: (editor, {\n    type\n  }) => ({\n    deserializeHtml: {\n      isLeaf: true,\n      getNode: element => ({\n        [type]: element.style.fontFamily\n      }),\n      validStyle: {\n        fontFamily: '*'\n      }\n    }\n  })\n});\nconst MARK_FONT_SIZE = 'fontSize';\nconst createFontSizePlugin = createPluginFactory({\n  key: MARK_FONT_SIZE,\n  inject: {\n    props: {\n      nodeKey: MARK_FONT_SIZE\n    }\n  },\n  then: (editor, {\n    type\n  }) => ({\n    deserializeHtml: {\n      isLeaf: true,\n      getNode: element => ({\n        [type]: element.style.fontSize\n      }),\n      validStyle: {\n        fontSize: '*'\n      }\n    }\n  })\n});\nconst MARK_FONT_WEIGHT = 'fontWeight';\nconst createFontWeightPlugin = createPluginFactory({\n  key: MARK_FONT_WEIGHT,\n  inject: {\n    props: {\n      nodeKey: MARK_FONT_WEIGHT\n    }\n  },\n  then: (editor, {\n    type\n  }) => ({\n    deserializeHtml: {\n      isLeaf: true,\n      getNode: element => ({\n        [type]: element.style.fontWeight\n      }),\n      validStyle: {\n        fontWeight: '*'\n      }\n    }\n  })\n});\nexport { MARK_BG_COLOR, MARK_COLOR, MARK_FONT_FAMILY, MARK_FONT_SIZE, MARK_FONT_WEIGHT, createFontBackgroundColorPlugin, createFontColorPlugin, createFontFamilyPlugin, createFontSizePlugin, createFontWeightPlugin };","map":{"version":3,"sources":["../src/createFontBackgroundColorPlugin.ts","../src/createFontColorPlugin.ts","../src/createFontFamilyPlugin.ts","../src/createFontSizePlugin.ts","../src/createFontWeightPlugin.ts"],"names":["MARK_BG_COLOR","createFontBackgroundColorPlugin","createPluginFactory","key","inject","props","nodeKey","then","type","deserializeHtml","isLeaf","getNode","element","backgroundColor","validStyle","MARK_COLOR","createFontColorPlugin","defaultNodeValue","color","MARK_FONT_FAMILY","createFontFamilyPlugin","fontFamily","MARK_FONT_SIZE","createFontSizePlugin","fontSize","MARK_FONT_WEIGHT","createFontWeightPlugin","fontWeight"],"mappings":"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","sourcesContent":["import { createPluginFactory } from '@udecode/plate-core';\n\nexport const MARK_BG_COLOR = 'backgroundColor';\n\nexport const createFontBackgroundColorPlugin = createPluginFactory({\n  key: MARK_BG_COLOR,\n  inject: {\n    props: {\n      nodeKey: MARK_BG_COLOR,\n    },\n  },\n  then: (editor, { type }) => ({\n    deserializeHtml: {\n      isLeaf: true,\n      getNode: (element) => ({ [type]: element.style.backgroundColor }),\n      validStyle: {\n        backgroundColor: '*',\n      },\n    },\n  }),\n});\n","import { createPluginFactory } from '@udecode/plate-core';\n\nexport const MARK_COLOR = 'color';\n\nexport const createFontColorPlugin = createPluginFactory({\n  key: MARK_COLOR,\n  inject: {\n    props: {\n      nodeKey: MARK_COLOR,\n      defaultNodeValue: 'black',\n    },\n  },\n  then: (editor, { type }) => ({\n    deserializeHtml: {\n      isLeaf: true,\n      getNode(element) {\n        if (element.style.color) {\n          return { [type]: element.style.color };\n        }\n      },\n      validStyle: {\n        color: '*',\n      },\n    },\n  }),\n});\n","import { createPluginFactory } from '@udecode/plate-core';\n\nexport const MARK_FONT_FAMILY = 'fontFamily';\n\nexport const createFontFamilyPlugin = createPluginFactory({\n  key: MARK_FONT_FAMILY,\n  inject: {\n    props: {\n      nodeKey: MARK_FONT_FAMILY,\n    },\n  },\n  then: (editor, { type }) => ({\n    deserializeHtml: {\n      isLeaf: true,\n      getNode: (element) => ({ [type]: element.style.fontFamily }),\n      validStyle: {\n        fontFamily: '*',\n      },\n    },\n  }),\n});\n","import { createPluginFactory } from '@udecode/plate-core';\n\nexport const MARK_FONT_SIZE = 'fontSize';\n\nexport const createFontSizePlugin = createPluginFactory({\n  key: MARK_FONT_SIZE,\n  inject: {\n    props: {\n      nodeKey: MARK_FONT_SIZE,\n    },\n  },\n  then: (editor, { type }) => ({\n    deserializeHtml: {\n      isLeaf: true,\n      getNode: (element) => ({ [type]: element.style.fontSize }),\n      validStyle: {\n        fontSize: '*',\n      },\n    },\n  }),\n});\n","import { createPluginFactory } from '@udecode/plate-core';\n\nexport const MARK_FONT_WEIGHT = 'fontWeight';\n\nexport const createFontWeightPlugin = createPluginFactory({\n  key: MARK_FONT_WEIGHT,\n  inject: {\n    props: {\n      nodeKey: MARK_FONT_WEIGHT,\n    },\n  },\n  then: (editor, { type }) => ({\n    deserializeHtml: {\n      isLeaf: true,\n      getNode: (element) => ({ [type]: element.style.fontWeight }),\n      validStyle: {\n        fontWeight: '*',\n      },\n    },\n  }),\n});\n"]},"metadata":{},"sourceType":"module"}