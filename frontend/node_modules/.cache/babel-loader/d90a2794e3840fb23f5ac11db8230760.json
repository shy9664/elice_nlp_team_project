{"ast":null,"code":"import axios from \"axios\";\nimport getUrl from \"./getUrl\";\n/**\n * 글 작성\n *\n * @param writeData  {{text: string, date: number}}  콘텐츠 데이터\n * @returns\n */\n\nexport const createArticle = async writeData => {\n  const url = getUrl(`/article`);\n\n  try {\n    console.log(writeData);\n    const response = await axios.post(url, writeData);\n    return response.data;\n  } catch (e) {\n    console.log(e);\n  }\n};\n/**\n * 글 수정 (백엔드 오류나는 것 같은데 datetype 이 integer..가 맞나요)\n *\n * @param {string} date\n * @param {string} writeData\n * @returns\n */\n\nexport const updateArticle = async (date, writeData) => {\n  const url = getUrl(`/article/${date}`);\n\n  try {\n    const response = await axios.patch(url, {\n      text: writeData\n    });\n    return response.data;\n  } catch (e) {\n    console.log(e);\n  }\n};\n/**\n * 글 삭제\n *\n * @param {string} date\n * @returns\n */\n\nexport const deleteArticle = async date => {\n  const url = getUrl(`/article/${date}`);\n\n  try {\n    const response = await axios.delete(url);\n    return response.data;\n  } catch (e) {\n    console.log(e);\n  }\n};\n/**\n * 글 읽기\n *\n * @param {string} date\n * @returns\n */\n\nexport const readArticle = async date => {\n  const url = getUrl(`/article/${date}`);\n\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport const getArticle = async date => {\n  const url = `/article/${date}`;\n  let result;\n  await axios.get(url).then(function (response) {\n    result = response.data;\n    console.log(\"일기 날짜로 조회 성공 => \", result);\n  }).catch(function (error) {\n    console.log(\"일기 날짜로 조회 실패 => \", error);\n  });\n  return result;\n};\nexport const getMyArticleList = async () => {\n  const url = `/article/my-list`;\n  let result;\n  await axios.get(url).then(function (response) {\n    result = response.data;\n    console.log(\"내 일기 조회 성공 => \", result);\n  }).catch(function (error) {\n    console.log(\"내 일기 조회 실패 => \", error);\n  });\n  return result;\n};","map":{"version":3,"sources":["/Users/hyun/Desktop/vmvmvmvm/frontend/src/apis/article.js"],"names":["axios","getUrl","createArticle","writeData","url","console","log","response","post","data","e","updateArticle","date","patch","text","deleteArticle","delete","readArticle","get","getArticle","result","then","catch","error","getMyArticleList"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport getUrl from \"./getUrl\";\n\n/**\n * 글 작성\n *\n * @param writeData  {{text: string, date: number}}  콘텐츠 데이터\n * @returns\n */\nexport const createArticle = async (writeData) => {\n    const url = getUrl(`/article`);\n    try {\n        console.log(writeData);\n        const response = await axios.post(url, writeData);\n        return response.data;\n    } catch (e) {\n        console.log(e);\n    }\n};\n\n/**\n * 글 수정 (백엔드 오류나는 것 같은데 datetype 이 integer..가 맞나요)\n *\n * @param {string} date\n * @param {string} writeData\n * @returns\n */\nexport const updateArticle = async (date, writeData) => {\n    const url = getUrl(`/article/${date}`);\n    try {\n        const response = await axios.patch(url, { text: writeData });\n        return response.data;\n    } catch (e) {\n        console.log(e);\n    }\n};\n\n/**\n * 글 삭제\n *\n * @param {string} date\n * @returns\n */\nexport const deleteArticle = async (date) => {\n    const url = getUrl(`/article/${date}`);\n    try {\n        const response = await axios.delete(url);\n        return response.data;\n    } catch (e) {\n        console.log(e);\n    }\n};\n\n/**\n * 글 읽기\n *\n * @param {string} date\n * @returns\n */\nexport const readArticle = async (date) => {\n    const url = getUrl(`/article/${date}`);\n    try {\n        const response = await axios.get(url);\n        return response.data;\n    } catch (e) {\n        console.log(e);\n    }\n};\n\nexport const getArticle = async (date) => {\n    const url = `/article/${date}`;\n    let result;\n\n    await axios\n        .get(url)\n        .then(function (response) {\n            result = response.data;\n            console.log(\"일기 날짜로 조회 성공 => \", result);\n        })\n        .catch(function (error) {\n            console.log(\"일기 날짜로 조회 실패 => \", error);\n        });\n\n    return result;\n};\n\nexport const getMyArticleList = async () => {\n    const url = `/article/my-list`;\n    let result;\n\n    await axios\n        .get(url)\n        .then(function (response) {\n            result = response.data;\n            console.log(\"내 일기 조회 성공 => \", result);\n        })\n        .catch(function (error) {\n            console.log(\"내 일기 조회 실패 => \", error);\n        });\n\n    return result;\n};\n"]},"metadata":{},"sourceType":"module"}