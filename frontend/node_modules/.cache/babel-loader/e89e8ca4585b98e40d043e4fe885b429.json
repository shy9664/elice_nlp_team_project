{"ast":null,"code":"import { createStore } from '@udecode/zustood';\nimport { escapeRegExp, getText, isCollapsed, createPluginFactory, useEditorState, usePlateEventId, isDefined } from '@udecode/plate-core';\nimport { Editor, Range } from 'slate';\nimport { createStyles, PortalBody } from '@udecode/plate-styled-components';\nimport _styled, { css } from 'styled-components';\nimport React, { useMemo, useEffect, useCallback } from 'react';\nimport { getRangeBoundingClientRect, virtualReference, usePopperPosition } from '@udecode/plate-popper';\nimport { useCombobox } from 'downshift';\n\nconst createComboboxStore = state => createStore(`combobox-${state.id}`)(state);\n\nconst comboboxStore = createStore('combobox')({\n  activeId: null,\n  byId: {},\n  highlightedIndex: 0,\n  items: [],\n  filteredItems: [],\n  targetRange: null,\n  text: null\n}).extendActions((set, get) => ({\n  setComboboxById: state => {\n    if (get.byId()[state.id]) return;\n    set.state(draft => {\n      draft.byId[state.id] = createComboboxStore(state);\n    });\n  },\n  open: state => {\n    set.mergeState(state);\n  },\n  reset: () => {\n    set.state(draft => {\n      draft.activeId = null;\n      draft.highlightedIndex = 0;\n      draft.items = [];\n      draft.text = null;\n      draft.targetRange = null;\n    });\n  }\n})).extendSelectors(state => ({\n  isOpen: () => !!state.activeId\n}));\n\nconst getComboboxStoreById = id => id ? comboboxStore.get.byId()[id] : null;\n\nconst useActiveComboboxStore = () => {\n  const activeId = comboboxStore.use.activeId();\n  const comboboxes = comboboxStore.use.byId();\n  return activeId ? comboboxes[activeId] : null;\n};\n/**\r\n * Get text and range from trigger to cursor.\r\n * Starts with trigger and ends with non-whitespace character.\r\n */\n\n\nconst getTextFromTrigger = (editor, {\n  at,\n  trigger,\n  searchPattern = `\\\\S+`\n}) => {\n  const escapedTrigger = escapeRegExp(trigger);\n  const triggerRegex = new RegExp(`(?:^|\\\\s)${escapedTrigger}`);\n  let start = at;\n  let end;\n\n  while (true) {\n    end = start;\n    if (!start) break;\n    start = Editor.before(editor, start);\n    const charRange = start && Editor.range(editor, start, end);\n    const charText = getText(editor, charRange);\n\n    if (!charText.match(searchPattern)) {\n      start = end;\n      break;\n    }\n  } // Range from start to cursor\n\n\n  const range = start && Editor.range(editor, start, at);\n  const text = getText(editor, range);\n  if (!range || !text.match(triggerRegex)) return;\n  return {\n    range,\n    textAfterTrigger: text.substring(1)\n  };\n}; // export const matchesTriggerAndPattern = (\n//   editor: TEditor,\n//   { at, trigger, pattern }: { at: Point; trigger: string; pattern: string }\n// ) => {\n//   // Point at the start of line\n//   const lineStart = Editor.before(editor, at, { unit: 'line' });\n//\n//   // Range from before to start\n//   const beforeRange = lineStart && Editor.range(editor, lineStart, at);\n//\n//   // Before text\n//   const beforeText = getText(editor, beforeRange);\n//\n//   // Starts with char and ends with word characters\n//   const escapedTrigger = escapeRegExp(trigger);\n//\n//   const beforeRegex = new RegExp(`(?:^|\\\\s)${escapedTrigger}(${pattern})$`);\n//\n//   // Match regex on before text\n//   const match = !!beforeText && beforeText.match(beforeRegex);\n//\n//   // Point at the start of mention\n//   const mentionStart = match\n//     ? Editor.before(editor, at, {\n//         unit: 'character',\n//         distance: match[1].length + trigger.length,\n//       })\n//     : null;\n//\n//   // Range from mention to start\n//   const mentionRange = mentionStart && Editor.range(editor, mentionStart, at);\n//\n//   return {\n//     range: mentionRange,\n//     match,\n//   };\n// };\n\n/**\r\n * For each combobox state (byId):\r\n * - if the selection is collapsed\r\n * - if the cursor follows the trigger\r\n * - if there is text without whitespaces after the trigger\r\n * - open the combobox: set id, search, targetRange in the store\r\n * Close the combobox if needed\r\n */\n\n\nconst onChangeCombobox = editor => () => {\n  const byId = comboboxStore.get.byId();\n  const activeId = comboboxStore.get.activeId();\n  let shouldClose = true;\n\n  for (const store of Object.values(byId)) {\n    var _store$get$controlled, _store$get, _store$get$searchPatt, _store$get2;\n\n    const id = store.get.id();\n    const controlled = (_store$get$controlled = (_store$get = store.get).controlled) === null || _store$get$controlled === void 0 ? void 0 : _store$get$controlled.call(_store$get);\n\n    if (controlled) {\n      // do not close controlled comboboxes\n      if (activeId === id) {\n        shouldClose = false;\n        break;\n      } else {\n        // do not open controlled comboboxes\n        continue;\n      }\n    }\n\n    const {\n      selection\n    } = editor;\n\n    if (!selection || !isCollapsed(selection)) {\n      continue;\n    }\n\n    const trigger = store.get.trigger();\n    const searchPattern = (_store$get$searchPatt = (_store$get2 = store.get).searchPattern) === null || _store$get$searchPatt === void 0 ? void 0 : _store$get$searchPatt.call(_store$get2);\n    const isCursorAfterTrigger = getTextFromTrigger(editor, {\n      at: Range.start(selection),\n      trigger,\n      searchPattern\n    });\n\n    if (!isCursorAfterTrigger) {\n      continue;\n    }\n\n    const {\n      range,\n      textAfterTrigger\n    } = isCursorAfterTrigger;\n    comboboxStore.set.open({\n      activeId: id,\n      text: textAfterTrigger,\n      targetRange: range\n    });\n    shouldClose = false;\n    break;\n  }\n\n  if (shouldClose && comboboxStore.get.isOpen()) {\n    comboboxStore.set.reset();\n  }\n};\n/**\r\n * Returns the next index in the list of an item that is not disabled.\r\n *\r\n * @param {number} moveAmount Number of positions to move. Negative to move backwards, positive forwards.\r\n * @param {number} baseIndex The initial position to move from.\r\n * @param {number} itemCount The total number of items.\r\n * @param {Function} getItemNodeFromIndex Used to check if item is disabled.\r\n * @param {boolean} circular Specify if navigation is circular. Default is true.\r\n * @returns {number} The new index. Returns baseIndex if item is not disabled. Returns next non-disabled item otherwise. If no non-disabled found it will return -1.\r\n */\n\n\nconst getNextNonDisabledIndex = (moveAmount, baseIndex, itemCount, getItemNodeFromIndex, circular) => {\n  const currentElementNode = getItemNodeFromIndex(baseIndex);\n\n  if (!currentElementNode || !currentElementNode.hasAttribute('disabled')) {\n    return baseIndex;\n  }\n\n  if (moveAmount > 0) {\n    for (let index = baseIndex + 1; index < itemCount; index++) {\n      if (!getItemNodeFromIndex(index).hasAttribute('disabled')) {\n        return index;\n      }\n    }\n  } else {\n    for (let index = baseIndex - 1; index >= 0; index--) {\n      if (!getItemNodeFromIndex(index).hasAttribute('disabled')) {\n        return index;\n      }\n    }\n  }\n\n  if (circular) {\n    return moveAmount > 0 ? getNextNonDisabledIndex(1, 0, itemCount, getItemNodeFromIndex, false) : getNextNonDisabledIndex(-1, itemCount - 1, itemCount, getItemNodeFromIndex, false);\n  }\n\n  return -1;\n};\n/**\r\n * Returns the new index in the list, in a circular way. If next value is out of bonds from the total,\r\n * it will wrap to either 0 or itemCount - 1.\r\n *\r\n * @param {number} moveAmount Number of positions to move. Negative to move backwards, positive forwards.\r\n * @param {number} baseIndex The initial position to move from.\r\n * @param {number} itemCount The total number of items.\r\n * @param {Function} getItemNodeFromIndex Used to check if item is disabled.\r\n * @param {boolean} circular Specify if navigation is circular. Default is true.\r\n * @returns {number} The new index after the move.\r\n */\n\n\nconst getNextWrappingIndex = (moveAmount, baseIndex, itemCount, getItemNodeFromIndex, circular = true) => {\n  if (itemCount === 0) {\n    return -1;\n  }\n\n  const itemsLastIndex = itemCount - 1; // noinspection SuspiciousTypeOfGuard\n\n  if (typeof baseIndex !== 'number' || baseIndex < 0 || baseIndex >= itemCount) {\n    baseIndex = moveAmount > 0 ? -1 : itemsLastIndex + 1;\n  }\n\n  let newIndex = baseIndex + moveAmount;\n\n  if (newIndex < 0) {\n    newIndex = circular ? itemsLastIndex : 0;\n  } else if (newIndex > itemsLastIndex) {\n    newIndex = circular ? 0 : itemsLastIndex;\n  }\n\n  const nonDisabledNewIndex = getNextNonDisabledIndex(moveAmount, newIndex, itemCount, getItemNodeFromIndex, circular);\n\n  if (nonDisabledNewIndex === -1) {\n    return baseIndex >= itemCount ? -1 : baseIndex;\n  }\n\n  return nonDisabledNewIndex;\n};\n/**\r\n * If the combobox is open, handle:\r\n * - down (next item)\r\n * - up (previous item)\r\n * - escape (reset combobox)\r\n * - tab, enter (select item)\r\n */\n\n\nconst onKeyDownCombobox = editor => event => {\n  const {\n    highlightedIndex,\n    filteredItems,\n    activeId\n  } = comboboxStore.get.state();\n  const isOpen = comboboxStore.get.isOpen();\n  if (!isOpen) return;\n  const store = getComboboxStoreById(activeId);\n  if (!store) return;\n  const onSelectItem = store.get.onSelectItem();\n\n  if (event.key === 'ArrowDown') {\n    event.preventDefault();\n    const newIndex = getNextWrappingIndex(1, highlightedIndex, filteredItems.length, () => {}, true);\n    comboboxStore.set.highlightedIndex(newIndex);\n    return;\n  }\n\n  if (event.key === 'ArrowUp') {\n    event.preventDefault();\n    const newIndex = getNextWrappingIndex(-1, highlightedIndex, filteredItems.length, () => {}, true);\n    comboboxStore.set.highlightedIndex(newIndex);\n    return;\n  }\n\n  if (event.key === 'Escape') {\n    event.preventDefault();\n    comboboxStore.set.reset();\n    return;\n  }\n\n  if (['Tab', 'Enter'].includes(event.key)) {\n    event.preventDefault();\n\n    if (filteredItems[highlightedIndex]) {\n      onSelectItem === null || onSelectItem === void 0 ? void 0 : onSelectItem(editor, filteredItems[highlightedIndex]);\n    }\n  }\n};\n\nconst KEY_COMBOBOX = 'combobox';\nconst createComboboxPlugin = createPluginFactory({\n  key: KEY_COMBOBOX,\n  handlers: {\n    onChange: onChangeCombobox,\n    onKeyDown: onKeyDownCombobox\n  }\n});\n\nconst getComboboxStyles = props => {\n  const item = [{\n    \"display\": \"flex\",\n    \"alignItems\": \"center\",\n    \"paddingLeft\": \"0.5rem\",\n    \"paddingRight\": \"0.5rem\",\n    \"cursor\": \"pointer\"\n  }, css([\"font-size:14px;border-radius:0;min-height:36px;user-select:none;color:rgb(32,31,30);\"])];\n  return createStyles({\n    prefixClassNames: 'Combobox',\n    ...props\n  }, [{\n    root: [{\n      \"--tw-bg-opacity\": \"1\",\n      \"backgroundColor\": \"rgba(255, 255, 255, var(--tw-bg-opacity))\",\n      \"margin\": \"0px\",\n      \"padding\": \"0px\",\n      \"overflow\": \"scroll\"\n    }, css([\"width:300px;max-height:288px;border-radius:0 0 2px 2px;box-shadow:rgba(0,0,0,0.133) 0 3.2px 7.2px 0,rgba(0,0,0,0.11) 0 0.6px 1.8px 0;z-index:500;\"])],\n    item: [...item, css([\"background:transparent;:hover{background:rgb(243,242,241);}\"])],\n    highlightedItem: [...item, css([\"background:rgb(237,235,233);:hover{background:rgb(237,235,233);}\"])]\n  }]);\n};\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nconst useComboboxControls = () => {\n  const isOpen = comboboxStore.use.isOpen();\n  const highlightedIndex = comboboxStore.use.highlightedIndex();\n  const filteredItems = comboboxStore.use.filteredItems();\n  const {\n    closeMenu,\n    getMenuProps,\n    getComboboxProps,\n    getInputProps,\n    getItemProps\n  } = useCombobox({\n    isOpen,\n    highlightedIndex,\n    items: filteredItems,\n    circularNavigation: true\n  });\n  getMenuProps({}, {\n    suppressRefError: true\n  });\n  getComboboxProps({}, {\n    suppressRefError: true\n  });\n  getInputProps({}, {\n    suppressRefError: true\n  });\n  return useMemo(() => ({\n    closeMenu,\n    getMenuProps,\n    getItemProps\n  }), [closeMenu, getItemProps, getMenuProps]);\n};\n\nconst ComboboxContent = props => {\n  var _comboboxStore$use$po, _comboboxStore$use, _comboboxStore$use$po2, _comboboxStore$use2, _activeComboboxStore$, _activeComboboxStore$2, _activeComboboxStore$3, _activeComboboxStore$4, _activeComboboxStore$5;\n\n  const {\n    component: Component,\n    items,\n    onRenderItem\n  } = props;\n  const targetRange = comboboxStore.use.targetRange();\n  const filteredItems = comboboxStore.use.filteredItems();\n  const highlightedIndex = comboboxStore.use.highlightedIndex();\n  const popperContainer = (_comboboxStore$use$po = (_comboboxStore$use = comboboxStore.use).popperContainer) === null || _comboboxStore$use$po === void 0 ? void 0 : _comboboxStore$use$po.call(_comboboxStore$use);\n  const popperOptions = (_comboboxStore$use$po2 = (_comboboxStore$use2 = comboboxStore.use).popperOptions) === null || _comboboxStore$use$po2 === void 0 ? void 0 : _comboboxStore$use$po2.call(_comboboxStore$use2);\n  const editor = useEditorState();\n  const combobox = useComboboxControls();\n  const activeComboboxStore = useActiveComboboxStore();\n  const text = comboboxStore.use.text();\n  const storeItems = comboboxStore.use.items();\n  const filter = (_activeComboboxStore$ = (_activeComboboxStore$2 = activeComboboxStore.use).filter) === null || _activeComboboxStore$ === void 0 ? void 0 : _activeComboboxStore$.call(_activeComboboxStore$2);\n  const maxSuggestions = (_activeComboboxStore$3 = (_activeComboboxStore$4 = (_activeComboboxStore$5 = activeComboboxStore.use).maxSuggestions) === null || _activeComboboxStore$4 === void 0 ? void 0 : _activeComboboxStore$4.call(_activeComboboxStore$5)) !== null && _activeComboboxStore$3 !== void 0 ? _activeComboboxStore$3 : storeItems.length;\n  const popperRef = React.useRef(null); // Update items\n\n  useEffect(() => {\n    items && comboboxStore.set.items(items);\n  }, [items]); // Filter items\n\n  useEffect(() => {\n    if (!isDefined(text)) return;\n\n    if (text.length === 0) {\n      return comboboxStore.set.filteredItems(storeItems.slice(0, maxSuggestions));\n    }\n\n    const _filteredItems = storeItems.filter(filter ? filter(text) : value => value.text.toLowerCase().startsWith(text.toLowerCase())).slice(0, maxSuggestions);\n\n    comboboxStore.set.filteredItems(_filteredItems);\n  }, [filter, storeItems, maxSuggestions, text]); // Get target range rect\n\n  const getBoundingClientRect = useCallback(() => {\n    var _getRangeBoundingClie;\n\n    return (_getRangeBoundingClie = getRangeBoundingClientRect(editor, targetRange)) !== null && _getRangeBoundingClie !== void 0 ? _getRangeBoundingClie : virtualReference;\n  }, [editor, targetRange]); // Update popper position\n\n  const {\n    styles: popperStyles,\n    attributes\n  } = usePopperPosition({\n    popperElement: popperRef.current,\n    popperContainer,\n    popperOptions,\n    placement: 'bottom-start',\n    getBoundingClientRect,\n    offset: [0, 4]\n  });\n  const menuProps = combobox ? combobox.getMenuProps({}, {\n    suppressRefError: true\n  }) : {\n    ref: null\n  };\n  const {\n    root,\n    item: styleItem,\n    highlightedItem\n  } = getComboboxStyles(props);\n  return /*#__PURE__*/React.createElement(PortalBody, null, /*#__PURE__*/React.createElement(_StyledUl, _extends({}, menuProps, {\n    ref: popperRef,\n    style: popperStyles.popper,\n    className: root.className\n  }, attributes.popper, {\n    $_css: root.css\n  }), Component ? Component({\n    store: activeComboboxStore\n  }) : null, filteredItems.map((item, index) => {\n    const Item = onRenderItem ? onRenderItem({\n      item: item\n    }) : item.text;\n    const highlighted = index === highlightedIndex;\n    return /*#__PURE__*/React.createElement(_StyledDiv, _extends({\n      key: item.key,\n      className: !highlighted ? styleItem === null || styleItem === void 0 ? void 0 : styleItem.className : highlightedItem === null || highlightedItem === void 0 ? void 0 : highlightedItem.css\n    }, combobox.getItemProps({\n      item,\n      index\n    }), {\n      onMouseDown: e => {\n        var _getComboboxStoreById;\n\n        e.preventDefault();\n        const onSelectItem = (_getComboboxStoreById = getComboboxStoreById(comboboxStore.get.activeId())) === null || _getComboboxStoreById === void 0 ? void 0 : _getComboboxStoreById.get.onSelectItem();\n        onSelectItem === null || onSelectItem === void 0 ? void 0 : onSelectItem(editor, item);\n      },\n      $_css2: !highlighted ? styleItem === null || styleItem === void 0 ? void 0 : styleItem.css : highlightedItem === null || highlightedItem === void 0 ? void 0 : highlightedItem.css\n    }), Item);\n  })));\n};\n/**\r\n * Register the combobox id, trigger, onSelectItem\r\n * Renders the combobox if active.\r\n */\n\n\nconst Combobox = ({\n  id,\n  trigger,\n  searchPattern,\n  onSelectItem,\n  controlled,\n  ...props\n}) => {\n  const editor = useEditorState();\n  const focusedEditorId = usePlateEventId('focus');\n  const combobox = useComboboxControls();\n  const activeId = comboboxStore.use.activeId();\n  useEffect(() => {\n    comboboxStore.set.setComboboxById({\n      id,\n      trigger,\n      searchPattern,\n      controlled,\n      onSelectItem\n    });\n  }, [id, trigger, searchPattern, controlled, onSelectItem]);\n\n  if (!combobox || !editor.selection || focusedEditorId !== editor.id || activeId !== id) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ComboboxContent, props);\n};\n\nvar _StyledUl = _styled(\"ul\").withConfig({\n  displayName: \"Combobox___StyledUl\",\n  componentId: \"sc-1opa621-0\"\n})([\"\", \"\"], p => p.$_css);\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"Combobox___StyledDiv\",\n  componentId: \"sc-1opa621-1\"\n})([\"\", \"\"], p => p.$_css2);\n\nexport { Combobox, KEY_COMBOBOX, comboboxStore, createComboboxPlugin, getComboboxStoreById, getComboboxStyles, getNextNonDisabledIndex, getNextWrappingIndex, getTextFromTrigger, onChangeCombobox, onKeyDownCombobox, useActiveComboboxStore, useComboboxControls };","map":{"version":3,"sources":["../src/combobox.store.ts","../src/utils/getTextFromTrigger.ts","../src/onChangeCombobox.ts","../src/utils/getNextNonDisabledIndex.ts","../src/utils/getNextWrappingIndex.ts","../src/onKeyDownCombobox.ts","../src/createComboboxPlugin.ts","../src/components/Combobox.styles.ts","../src/hooks/useComboboxControls.ts","../src/components/Combobox.tsx"],"names":["createComboboxStore","state","createStore","id","comboboxStore","activeId","byId","highlightedIndex","items","filteredItems","targetRange","text","setComboboxById","get","set","draft","open","reset","isOpen","getComboboxStoreById","useActiveComboboxStore","comboboxes","getTextFromTrigger","searchPattern","escapedTrigger","escapeRegExp","triggerRegex","start","end","Editor","charRange","charText","getText","range","textAfterTrigger","onChangeCombobox","editor","shouldClose","Object","store","controlled","selection","isCollapsed","trigger","isCursorAfterTrigger","at","Range","getNextNonDisabledIndex","currentElementNode","getItemNodeFromIndex","moveAmount","index","baseIndex","itemCount","getNextWrappingIndex","circular","itemsLastIndex","newIndex","nonDisabledNewIndex","onKeyDownCombobox","event","onSelectItem","KEY_COMBOBOX","createComboboxPlugin","createPluginFactory","key","handlers","onChange","onKeyDown","getComboboxStyles","props","item","css","createStyles","prefixClassNames","root","highlightedItem","useComboboxControls","getItemProps","useCombobox","circularNavigation","getMenuProps","suppressRefError","getComboboxProps","getInputProps","useMemo","ComboboxContent","component","onRenderItem","popperContainer","popperOptions","useEditorState","combobox","activeComboboxStore","storeItems","filter","maxSuggestions","popperRef","React","useEffect","isDefined","_filteredItems","value","getBoundingClientRect","useCallback","getRangeBoundingClientRect","styles","attributes","usePopperPosition","popperElement","placement","offset","menuProps","ref","popperStyles","className","Component","Item","highlighted","styleItem","e","Combobox","focusedEditorId","usePlateEventId"],"mappings":"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","sourcesContent":["import { UsePopperOptions } from '@udecode/plate-popper';\nimport { createStore, StateActions, StoreApi } from '@udecode/zustood';\nimport { Range } from 'slate';\nimport { NoData, TComboboxItem } from './components';\nimport { ComboboxOnSelectItem } from './types';\n\nexport type ComboboxStateById<TData = NoData> = {\n  /**\n   * Combobox id.\n   */\n  id: string;\n\n  /**\n   * Items filter function by text.\n   * @default (value) => value.text.toLowerCase().startsWith(search.toLowerCase())\n   */\n  filter?: (search: string) => (item: TComboboxItem<TData>) => boolean;\n\n  /**\n   * Max number of items.\n   * @default items.length\n   */\n  maxSuggestions?: number;\n\n  /**\n   * Trigger that activates the combobox.\n   */\n  trigger: string;\n\n  /**\n   * Regular expression for search, for example to allow whitespace\n   */\n  searchPattern?: string;\n\n  /**\n   * Called when an item is selected.\n   */\n  onSelectItem: ComboboxOnSelectItem<TData> | null;\n\n  /**\n   * Is opening/closing the combobox controlled by the client.\n   */\n  controlled?: boolean;\n};\n\nexport type ComboboxStoreById<TData = NoData> = StoreApi<\n  string,\n  ComboboxStateById<TData>,\n  StateActions<ComboboxStateById<TData>>\n>;\n\nexport type ComboboxState<TData = NoData> = {\n  /**\n   * Active id (combobox id which is opened).\n   */\n  activeId: string | null;\n\n  /**\n   * Object whose keys are combobox ids and values are config stores\n   * (e.g. one for tag, one for mention,...).\n   */\n  byId: Record<string, ComboboxStoreById>;\n\n  /**\n   * Unfiltered items.\n   */\n  items: TComboboxItem<TData>[];\n\n  /**\n   * Filtered items\n   */\n  filteredItems: TComboboxItem<TData>[];\n\n  /**\n   * Highlighted index.\n   */\n  highlightedIndex: number;\n\n  /**\n   * Parent element of the popper element (the one that has the scroll).\n   * @default document\n   */\n  popperContainer?: Document | HTMLElement;\n\n  /**\n   * Overrides `usePopper` options.\n   */\n  popperOptions?: UsePopperOptions;\n\n  /**\n   * Range from the trigger to the cursor.\n   */\n  targetRange: Range | null;\n\n  /**\n   * Text after the trigger.\n   */\n  text: string | null;\n};\n\nconst createComboboxStore = (state: ComboboxStateById) =>\n  createStore(`combobox-${state.id}`)(state);\n\nexport const comboboxStore = createStore('combobox')<ComboboxState>({\n  activeId: null,\n  byId: {},\n  highlightedIndex: 0,\n  items: [],\n  filteredItems: [],\n  targetRange: null,\n  text: null,\n})\n  .extendActions((set, get) => ({\n    setComboboxById: <TData = NoData>(state: ComboboxStateById<TData>) => {\n      if (get.byId()[state.id]) return;\n\n      set.state((draft) => {\n        draft.byId[state.id] = createComboboxStore(\n          (state as unknown) as ComboboxStateById\n        );\n      });\n    },\n    open: (state: Pick<ComboboxState, 'activeId' | 'targetRange' | 'text'>) => {\n      set.mergeState(state);\n    },\n    reset: () => {\n      set.state((draft) => {\n        draft.activeId = null;\n        draft.highlightedIndex = 0;\n        draft.items = [];\n        draft.text = null;\n        draft.targetRange = null;\n      });\n    },\n  }))\n  .extendSelectors((state) => ({\n    isOpen: () => !!state.activeId,\n  }));\n\nexport const getComboboxStoreById = (id: string | null) =>\n  id ? comboboxStore.get.byId()[id] : null;\n\nexport const useActiveComboboxStore = () => {\n  const activeId = comboboxStore.use.activeId();\n  const comboboxes = comboboxStore.use.byId();\n\n  return activeId ? comboboxes[activeId] : null;\n};\n","import { escapeRegExp, getText } from '@udecode/plate-core';\nimport { Editor, Point } from 'slate';\n\n/**\n * Get text and range from trigger to cursor.\n * Starts with trigger and ends with non-whitespace character.\n */\nexport const getTextFromTrigger = (\n  editor: Editor,\n  {\n    at,\n    trigger,\n    searchPattern = `\\\\S+`,\n  }: { at: Point; trigger: string; searchPattern?: string }\n) => {\n  const escapedTrigger = escapeRegExp(trigger);\n  const triggerRegex = new RegExp(`(?:^|\\\\s)${escapedTrigger}`);\n\n  let start: Point | undefined = at;\n  let end: Point | undefined;\n\n  while (true) {\n    end = start;\n\n    if (!start) break;\n\n    start = Editor.before(editor, start);\n    const charRange = start && Editor.range(editor, start, end);\n    const charText = getText(editor, charRange);\n\n    if (!charText.match(searchPattern)) {\n      start = end;\n      break;\n    }\n  }\n\n  // Range from start to cursor\n  const range = start && Editor.range(editor, start, at);\n  const text = getText(editor, range);\n\n  if (!range || !text.match(triggerRegex)) return;\n\n  return {\n    range,\n    textAfterTrigger: text.substring(1),\n  };\n};\n\n// export const matchesTriggerAndPattern = (\n//   editor: TEditor,\n//   { at, trigger, pattern }: { at: Point; trigger: string; pattern: string }\n// ) => {\n//   // Point at the start of line\n//   const lineStart = Editor.before(editor, at, { unit: 'line' });\n//\n//   // Range from before to start\n//   const beforeRange = lineStart && Editor.range(editor, lineStart, at);\n//\n//   // Before text\n//   const beforeText = getText(editor, beforeRange);\n//\n//   // Starts with char and ends with word characters\n//   const escapedTrigger = escapeRegExp(trigger);\n//\n//   const beforeRegex = new RegExp(`(?:^|\\\\s)${escapedTrigger}(${pattern})$`);\n//\n//   // Match regex on before text\n//   const match = !!beforeText && beforeText.match(beforeRegex);\n//\n//   // Point at the start of mention\n//   const mentionStart = match\n//     ? Editor.before(editor, at, {\n//         unit: 'character',\n//         distance: match[1].length + trigger.length,\n//       })\n//     : null;\n//\n//   // Range from mention to start\n//   const mentionRange = mentionStart && Editor.range(editor, mentionStart, at);\n//\n//   return {\n//     range: mentionRange,\n//     match,\n//   };\n// };\n","import { isCollapsed, OnChange } from '@udecode/plate-core';\nimport { Range } from 'slate';\nimport { getTextFromTrigger } from './utils/getTextFromTrigger';\nimport { comboboxStore } from './combobox.store';\n\n/**\n * For each combobox state (byId):\n * - if the selection is collapsed\n * - if the cursor follows the trigger\n * - if there is text without whitespaces after the trigger\n * - open the combobox: set id, search, targetRange in the store\n * Close the combobox if needed\n */\nexport const onChangeCombobox: OnChange = (editor) => () => {\n  const byId = comboboxStore.get.byId();\n  const activeId = comboboxStore.get.activeId();\n\n  let shouldClose = true;\n\n  for (const store of Object.values(byId)) {\n    const id = store.get.id();\n    const controlled = store.get.controlled?.();\n\n    if (controlled) {\n      // do not close controlled comboboxes\n      if (activeId === id) {\n        shouldClose = false;\n        break;\n      } else {\n        // do not open controlled comboboxes\n        continue;\n      }\n    }\n\n    const { selection } = editor;\n    if (!selection || !isCollapsed(selection)) {\n      continue;\n    }\n\n    const trigger = store.get.trigger();\n    const searchPattern = store.get.searchPattern?.();\n\n    const isCursorAfterTrigger = getTextFromTrigger(editor, {\n      at: Range.start(selection),\n      trigger,\n      searchPattern,\n    });\n    if (!isCursorAfterTrigger) {\n      continue;\n    }\n\n    const { range, textAfterTrigger } = isCursorAfterTrigger;\n\n    comboboxStore.set.open({\n      activeId: id,\n      text: textAfterTrigger,\n      targetRange: range,\n    });\n\n    shouldClose = false;\n    break;\n  }\n\n  if (shouldClose && comboboxStore.get.isOpen()) {\n    comboboxStore.set.reset();\n  }\n};\n","/**\n * Returns the next index in the list of an item that is not disabled.\n *\n * @param {number} moveAmount Number of positions to move. Negative to move backwards, positive forwards.\n * @param {number} baseIndex The initial position to move from.\n * @param {number} itemCount The total number of items.\n * @param {Function} getItemNodeFromIndex Used to check if item is disabled.\n * @param {boolean} circular Specify if navigation is circular. Default is true.\n * @returns {number} The new index. Returns baseIndex if item is not disabled. Returns next non-disabled item otherwise. If no non-disabled found it will return -1.\n */\nexport const getNextNonDisabledIndex = (\n  moveAmount: number,\n  baseIndex: number,\n  itemCount: number,\n  getItemNodeFromIndex: any,\n  circular: boolean\n): number => {\n  const currentElementNode = getItemNodeFromIndex(baseIndex);\n  if (!currentElementNode || !currentElementNode.hasAttribute('disabled')) {\n    return baseIndex;\n  }\n\n  if (moveAmount > 0) {\n    for (let index = baseIndex + 1; index < itemCount; index++) {\n      if (!getItemNodeFromIndex(index).hasAttribute('disabled')) {\n        return index;\n      }\n    }\n  } else {\n    for (let index = baseIndex - 1; index >= 0; index--) {\n      if (!getItemNodeFromIndex(index).hasAttribute('disabled')) {\n        return index;\n      }\n    }\n  }\n\n  if (circular) {\n    return moveAmount > 0\n      ? getNextNonDisabledIndex(1, 0, itemCount, getItemNodeFromIndex, false)\n      : getNextNonDisabledIndex(\n          -1,\n          itemCount - 1,\n          itemCount,\n          getItemNodeFromIndex,\n          false\n        );\n  }\n\n  return -1;\n};\n","import { getNextNonDisabledIndex } from './getNextNonDisabledIndex';\n\n/**\n * Returns the new index in the list, in a circular way. If next value is out of bonds from the total,\n * it will wrap to either 0 or itemCount - 1.\n *\n * @param {number} moveAmount Number of positions to move. Negative to move backwards, positive forwards.\n * @param {number} baseIndex The initial position to move from.\n * @param {number} itemCount The total number of items.\n * @param {Function} getItemNodeFromIndex Used to check if item is disabled.\n * @param {boolean} circular Specify if navigation is circular. Default is true.\n * @returns {number} The new index after the move.\n */\nexport const getNextWrappingIndex = (\n  moveAmount: number,\n  baseIndex: number,\n  itemCount: number,\n  getItemNodeFromIndex: any,\n  circular = true\n) => {\n  if (itemCount === 0) {\n    return -1;\n  }\n\n  const itemsLastIndex = itemCount - 1;\n\n  // noinspection SuspiciousTypeOfGuard\n  if (\n    typeof baseIndex !== 'number' ||\n    baseIndex < 0 ||\n    baseIndex >= itemCount\n  ) {\n    baseIndex = moveAmount > 0 ? -1 : itemsLastIndex + 1;\n  }\n\n  let newIndex = baseIndex + moveAmount;\n\n  if (newIndex < 0) {\n    newIndex = circular ? itemsLastIndex : 0;\n  } else if (newIndex > itemsLastIndex) {\n    newIndex = circular ? 0 : itemsLastIndex;\n  }\n\n  const nonDisabledNewIndex = getNextNonDisabledIndex(\n    moveAmount,\n    newIndex,\n    itemCount,\n    getItemNodeFromIndex,\n    circular\n  );\n\n  if (nonDisabledNewIndex === -1) {\n    return baseIndex >= itemCount ? -1 : baseIndex;\n  }\n\n  return nonDisabledNewIndex;\n};\n","import { KeyboardHandler } from '@udecode/plate-core';\nimport { getNextWrappingIndex } from './utils/getNextWrappingIndex';\nimport { comboboxStore, getComboboxStoreById } from './combobox.store';\n\n/**\n * If the combobox is open, handle:\n * - down (next item)\n * - up (previous item)\n * - escape (reset combobox)\n * - tab, enter (select item)\n */\nexport const onKeyDownCombobox: KeyboardHandler = (editor) => (event) => {\n  const {\n    highlightedIndex,\n    filteredItems,\n    activeId,\n  } = comboboxStore.get.state();\n  const isOpen = comboboxStore.get.isOpen();\n\n  if (!isOpen) return;\n\n  const store = getComboboxStoreById(activeId);\n  if (!store) return;\n\n  const onSelectItem = store.get.onSelectItem();\n\n  if (event.key === 'ArrowDown') {\n    event.preventDefault();\n\n    const newIndex = getNextWrappingIndex(\n      1,\n      highlightedIndex,\n      filteredItems.length,\n      () => {},\n      true\n    );\n    comboboxStore.set.highlightedIndex(newIndex);\n    return;\n  }\n  if (event.key === 'ArrowUp') {\n    event.preventDefault();\n\n    const newIndex = getNextWrappingIndex(\n      -1,\n      highlightedIndex,\n      filteredItems.length,\n      () => {},\n      true\n    );\n    comboboxStore.set.highlightedIndex(newIndex);\n    return;\n  }\n  if (event.key === 'Escape') {\n    event.preventDefault();\n    comboboxStore.set.reset();\n    return;\n  }\n\n  if (['Tab', 'Enter'].includes(event.key)) {\n    event.preventDefault();\n    if (filteredItems[highlightedIndex]) {\n      onSelectItem?.(editor, filteredItems[highlightedIndex]);\n    }\n  }\n};\n","import { createPluginFactory } from '@udecode/plate-core';\nimport { onChangeCombobox } from './onChangeCombobox';\nimport { onKeyDownCombobox } from './onKeyDownCombobox';\n\nexport const KEY_COMBOBOX = 'combobox';\n\nexport const createComboboxPlugin = createPluginFactory({\n  key: KEY_COMBOBOX,\n  handlers: {\n    onChange: onChangeCombobox,\n    onKeyDown: onKeyDownCombobox,\n  },\n});\n","import { createStyles } from '@udecode/plate-styled-components';\nimport { css } from 'styled-components';\nimport tw from 'twin.macro';\nimport { ComboboxStyleProps, Data } from './Combobox.types';\n\nexport const getComboboxStyles = <TData extends Data>(\n  props: ComboboxStyleProps<TData>\n) => {\n  const item = [\n    tw`flex items-center px-2 cursor-pointer`,\n    css`\n      font-size: 14px;\n      border-radius: 0;\n      min-height: 36px;\n      user-select: none;\n      color: rgb(32, 31, 30);\n    `,\n  ];\n\n  return createStyles({ prefixClassNames: 'Combobox', ...props }, [\n    {\n      root: [\n        tw`bg-white m-0 p-0 overflow-scroll`,\n        css`\n          width: 300px;\n          max-height: 288px;\n          border-radius: 0 0 2px 2px;\n          box-shadow: rgba(0, 0, 0, 0.133) 0 3.2px 7.2px 0,\n            rgba(0, 0, 0, 0.11) 0 0.6px 1.8px 0;\n\n          z-index: 500;\n        `,\n      ],\n      item: [\n        ...item,\n        css`\n          background: transparent;\n\n          :hover {\n            background: rgb(243, 242, 241);\n          }\n        `,\n      ],\n      highlightedItem: [\n        ...item,\n        css`\n          background: rgb(237, 235, 233);\n\n          :hover {\n            background: rgb(237, 235, 233);\n          }\n        `,\n      ],\n    },\n  ]);\n};\n","import { useMemo } from 'react';\nimport { useCombobox } from 'downshift';\nimport { comboboxStore } from '../combobox.store';\n\nexport const useComboboxControls = () => {\n  const isOpen = comboboxStore.use.isOpen();\n  const highlightedIndex = comboboxStore.use.highlightedIndex();\n  const filteredItems = comboboxStore.use.filteredItems();\n\n  const {\n    closeMenu,\n    getMenuProps,\n    getComboboxProps,\n    getInputProps,\n    getItemProps,\n  } = useCombobox({\n    isOpen,\n    highlightedIndex,\n    items: filteredItems,\n    circularNavigation: true,\n  });\n  getMenuProps({}, { suppressRefError: true });\n  getComboboxProps({}, { suppressRefError: true });\n  getInputProps({}, { suppressRefError: true });\n\n  return useMemo(\n    () => ({\n      closeMenu,\n      getMenuProps,\n      getItemProps,\n    }),\n    [closeMenu, getItemProps, getMenuProps]\n  );\n};\n","import React, { useCallback, useEffect } from 'react';\nimport {\n  isDefined,\n  useEditorState,\n  usePlateEventId,\n} from '@udecode/plate-core';\nimport {\n  getRangeBoundingClientRect,\n  usePopperPosition,\n  virtualReference,\n} from '@udecode/plate-popper';\nimport { PortalBody } from '@udecode/plate-styled-components';\nimport {\n  comboboxStore,\n  getComboboxStoreById,\n  useActiveComboboxStore,\n} from '../combobox.store';\nimport { useComboboxControls } from '../hooks';\nimport { getComboboxStyles } from './Combobox.styles';\nimport { ComboboxProps, Data, NoData, TComboboxItem } from './Combobox.types';\n\nconst ComboboxContent = <TData extends Data = NoData>(\n  props: Pick<ComboboxProps<TData>, 'component' | 'items' | 'onRenderItem'>\n) => {\n  const { component: Component, items, onRenderItem } = props;\n\n  const targetRange = comboboxStore.use.targetRange();\n  const filteredItems = comboboxStore.use.filteredItems();\n  const highlightedIndex = comboboxStore.use.highlightedIndex();\n  const popperContainer = comboboxStore.use.popperContainer?.();\n  const popperOptions = comboboxStore.use.popperOptions?.();\n  const editor = useEditorState();\n  const combobox = useComboboxControls();\n  const activeComboboxStore = useActiveComboboxStore()!;\n  const text = comboboxStore.use.text();\n  const storeItems = comboboxStore.use.items();\n  const filter = activeComboboxStore.use.filter?.();\n  const maxSuggestions =\n    activeComboboxStore.use.maxSuggestions?.() ?? storeItems.length;\n\n  const popperRef = React.useRef<any>(null);\n\n  // Update items\n  useEffect(() => {\n    items && comboboxStore.set.items(items);\n  }, [items]);\n\n  // Filter items\n  useEffect(() => {\n    if (!isDefined(text)) return;\n\n    if (text.length === 0) {\n      return comboboxStore.set.filteredItems(\n        storeItems.slice(0, maxSuggestions)\n      );\n    }\n\n    const _filteredItems = storeItems\n      .filter(\n        filter\n          ? filter(text)\n          : (value) => value.text.toLowerCase().startsWith(text.toLowerCase())\n      )\n      .slice(0, maxSuggestions);\n\n    comboboxStore.set.filteredItems(_filteredItems);\n  }, [filter, storeItems, maxSuggestions, text]);\n\n  // Get target range rect\n  const getBoundingClientRect = useCallback(\n    () => getRangeBoundingClientRect(editor, targetRange) ?? virtualReference,\n    [editor, targetRange]\n  );\n\n  // Update popper position\n  const { styles: popperStyles, attributes } = usePopperPosition({\n    popperElement: popperRef.current,\n    popperContainer,\n    popperOptions,\n    placement: 'bottom-start',\n    getBoundingClientRect,\n    offset: [0, 4],\n  });\n\n  const menuProps = combobox\n    ? combobox.getMenuProps({}, { suppressRefError: true })\n    : { ref: null };\n\n  const { root, item: styleItem, highlightedItem } = getComboboxStyles(\n    props as any\n  );\n\n  return (\n    <PortalBody>\n      <ul\n        {...menuProps}\n        ref={popperRef}\n        style={popperStyles.popper}\n        css={root.css}\n        className={root.className}\n        {...attributes.popper}\n      >\n        {Component ? Component({ store: activeComboboxStore }) : null}\n\n        {filteredItems.map((item, index) => {\n          const Item = onRenderItem\n            ? onRenderItem({ item: item as TComboboxItem<TData> })\n            : item.text;\n\n          const highlighted = index === highlightedIndex;\n\n          return (\n            <div\n              key={item.key}\n              css={!highlighted ? styleItem?.css : highlightedItem?.css}\n              className={\n                !highlighted ? styleItem?.className : highlightedItem?.css\n              }\n              {...combobox.getItemProps({\n                item,\n                index,\n              })}\n              onMouseDown={(e) => {\n                e.preventDefault();\n\n                const onSelectItem = getComboboxStoreById(\n                  comboboxStore.get.activeId()\n                )?.get.onSelectItem();\n                onSelectItem?.(editor, item);\n              }}\n            >\n              {Item}\n            </div>\n          );\n        })}\n      </ul>\n    </PortalBody>\n  );\n};\n\n/**\n * Register the combobox id, trigger, onSelectItem\n * Renders the combobox if active.\n */\nexport const Combobox = <TData extends Data = NoData>({\n  id,\n  trigger,\n  searchPattern,\n  onSelectItem,\n  controlled,\n  ...props\n}: ComboboxProps<TData>) => {\n  const editor = useEditorState();\n  const focusedEditorId = usePlateEventId('focus');\n  const combobox = useComboboxControls();\n  const activeId = comboboxStore.use.activeId();\n\n  useEffect(() => {\n    comboboxStore.set.setComboboxById({\n      id,\n      trigger,\n      searchPattern,\n      controlled,\n      onSelectItem,\n    });\n  }, [id, trigger, searchPattern, controlled, onSelectItem]);\n\n  if (\n    !combobox ||\n    !editor.selection ||\n    focusedEditorId !== editor.id ||\n    activeId !== id\n  ) {\n    return null;\n  }\n\n  return <ComboboxContent {...props} />;\n};\n"]},"metadata":{},"sourceType":"module"}