{"ast":null,"code":"import { atom, useAtom, Provider } from 'jotai';\nimport { createStyles, getRootProps } from '@udecode/plate-styled-components';\nimport _styled, { css } from 'styled-components';\nimport React, { useMemo } from 'react';\nimport { ELEMENT_TABLE, getTableColumnIndex, setTableColSize, getTableColumnCount } from '@udecode/plate-table';\nimport { Resizable } from 're-resizable';\nimport { ReactEditor } from 'slate-react';\nimport { withProviders, usePlateEditorState, getPluginType, someNode, getPreventDefaultHandler } from '@udecode/plate-core';\nimport { RemoveNodeButton } from '@udecode/plate-ui-button';\nimport { Popover } from '@udecode/plate-ui-popover';\nimport { ToolbarButton } from '@udecode/plate-toolbar';\nconst hoveredColIndexAtom = atom(null);\nconst resizingColAtom = atom(null);\n\nconst getTableCellElementStyles = props => {\n  const {\n    hovered,\n    hideBorder\n  } = props;\n  return createStyles({\n    prefixClassNames: 'TableCellElement',\n    ...props\n  }, {\n    root: [{\n      \"position\": \"relative\",\n      \"padding\": \"0px\",\n      \"overflow\": \"visible\",\n      \"--tw-bg-opacity\": \"1\",\n      \"backgroundColor\": \"rgba(255, 255, 255, var(--tw-bg-opacity))\"\n    }, hideBorder ? {\n      \"borderStyle\": \"none\"\n    } : {\n      \"borderWidth\": \"1px\",\n      \"--tw-border-opacity\": \"1\",\n      \"borderColor\": \"rgba(209, 213, 219, var(--tw-border-opacity))\"\n    }, css([\"min-width:48px;\"])],\n    content: {\n      \"position\": \"relative\",\n      \"paddingLeft\": \"0.75rem\",\n      \"paddingRight\": \"0.75rem\",\n      \"paddingTop\": \"0.5rem\",\n      \"paddingBottom\": \"0.5rem\",\n      \"zIndex\": \"10\"\n    },\n    resizableWrapper: [{\n      \"position\": \"absolute\",\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"top\": \"0px\"\n    }],\n    handle: [{\n      \"position\": \"absolute\"\n    }, hovered && {\n      \"--tw-bg-opacity\": \"1\",\n      \"backgroundColor\": \"rgba(59, 130, 246, var(--tw-bg-opacity))\"\n    }, css([\"top:-12px;right:-2px;width:4px;height:calc(100% + 12px);z-index:10;\"])]\n  });\n};\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction toVal(mix) {\n  var k,\n      y,\n      str = '';\n\n  if (typeof mix === 'string' || typeof mix === 'number') {\n    str += mix;\n  } else if (typeof mix === 'object') {\n    if (Array.isArray(mix)) {\n      for (k = 0; k < mix.length; k++) {\n        if (mix[k]) {\n          if (y = toVal(mix[k])) {\n            str && (str += ' ');\n            str += y;\n          }\n        }\n      }\n    } else {\n      for (k in mix) {\n        if (mix[k]) {\n          str && (str += ' ');\n          str += k;\n        }\n      }\n    }\n  }\n\n  return str;\n}\n\nfunction clsx() {\n  var i = 0,\n      tmp,\n      x,\n      str = '';\n\n  while (i < arguments.length) {\n    if (tmp = arguments[i++]) {\n      if (x = toVal(tmp)) {\n        str && (str += ' ');\n        str += x;\n      }\n    }\n  }\n\n  return str;\n}\n\nconst TableCellElement = props => {\n  const {\n    attributes,\n    children,\n    nodeProps,\n    element,\n    resizableProps,\n    editor\n  } = props;\n  const rootProps = getRootProps(props);\n  const [hoveredColIndex, setHoveredColIndex] = useAtom(hoveredColIndexAtom, ELEMENT_TABLE);\n  const [, setResizingCol] = useAtom(resizingColAtom, ELEMENT_TABLE);\n  const colIndex = useMemo(() => getTableColumnIndex(editor, {\n    node: element\n  }), [editor, element]);\n  const {\n    root,\n    content,\n    resizableWrapper,\n    resizable,\n    handle\n  } = getTableCellElementStyles({ ...props,\n    hovered: hoveredColIndex === colIndex\n  });\n\n  const onResize = (e, direction, ref) => {\n    setResizingCol({\n      index: colIndex,\n      width: ref.offsetWidth\n    });\n  };\n\n  const onResizeStop = (e, direction, ref) => {\n    setTableColSize(editor, {\n      colIndex,\n      width: ref.offsetWidth\n    }, {\n      at: ReactEditor.findPath(editor, element)\n    });\n    setResizingCol(null);\n  };\n\n  return /*#__PURE__*/React.createElement(_StyledTd, _extends({}, attributes, {\n    className: root.className\n  }, rootProps, nodeProps, {\n    $_css: root.css\n  }), /*#__PURE__*/React.createElement(_StyledDiv, {\n    className: content === null || content === void 0 ? void 0 : content.className,\n    $_css2: content === null || content === void 0 ? void 0 : content.css\n  }, children), /*#__PURE__*/React.createElement(_StyledDiv2, {\n    className: clsx(resizableWrapper === null || resizableWrapper === void 0 ? void 0 : resizableWrapper.className, 'group'),\n    contentEditable: false,\n    onMouseOver: () => setHoveredColIndex(colIndex),\n    onFocus: () => setHoveredColIndex(colIndex),\n    onMouseOut: () => setHoveredColIndex(null),\n    onBlur: () => setHoveredColIndex(null),\n    $_css3: resizableWrapper === null || resizableWrapper === void 0 ? void 0 : resizableWrapper.css\n  }, /*#__PURE__*/React.createElement(_StyledResizable, _extends({\n    className: resizable === null || resizable === void 0 ? void 0 : resizable.className,\n    size: {\n      width: '100%',\n      height: '100%'\n    },\n    enable: {\n      right: true\n    },\n    handleStyles: {\n      right: {\n        top: -12,\n        height: 'calc(100% + 12px)',\n        zIndex: 20\n      }\n    },\n    onResize: onResize,\n    onResizeStop: onResizeStop\n  }, resizableProps, {\n    $_css4: resizable === null || resizable === void 0 ? void 0 : resizable.css\n  })), /*#__PURE__*/React.createElement(_StyledDiv3, {\n    className: handle === null || handle === void 0 ? void 0 : handle.className,\n    $_css5: handle === null || handle === void 0 ? void 0 : handle.css\n  })));\n};\n\nvar _StyledTd = _styled(\"td\").withConfig({\n  displayName: \"TableCellElement___StyledTd\",\n  componentId: \"sc-1b15v56-0\"\n})([\"\", \"\"], p => p.$_css);\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"TableCellElement___StyledDiv\",\n  componentId: \"sc-1b15v56-1\"\n})([\"\", \"\"], p => p.$_css2);\n\nvar _StyledDiv2 = _styled(\"div\").withConfig({\n  displayName: \"TableCellElement___StyledDiv2\",\n  componentId: \"sc-1b15v56-2\"\n})([\"\", \"\"], p => p.$_css3);\n\nvar _StyledResizable = _styled(Resizable).withConfig({\n  displayName: \"TableCellElement___StyledResizable\",\n  componentId: \"sc-1b15v56-3\"\n})([\"\", \"\"], p => p.$_css4);\n\nvar _StyledDiv3 = _styled(\"div\").withConfig({\n  displayName: \"TableCellElement___StyledDiv3\",\n  componentId: \"sc-1b15v56-4\"\n})([\"\", \"\"], p => p.$_css5);\n\nconst getTableElementStyles = props => createStyles({\n  prefixClassNames: 'TableElement',\n  ...props\n}, {\n  root: [{\n    \"display\": \"table\",\n    \"width\": \"100%\",\n    \"marginTop\": \"1rem\",\n    \"marginBottom\": \"1rem\",\n    \"marginLeft\": \"0px\",\n    \"marginRight\": \"0px\",\n    \"borderCollapse\": \"collapse\"\n  }],\n  tbody: {\n    \"minWidth\": \"100%\"\n  }\n});\n\nconst useTableColSizes = tableNode => {\n  const [resizingCol] = useAtom(resizingColAtom, ELEMENT_TABLE);\n  const colCount = getTableColumnCount(tableNode);\n  const colSizes = tableNode.colSizes ? [...tableNode.colSizes] : Array(colCount);\n\n  if (resizingCol) {\n    var _resizingCol$index;\n\n    colSizes[(_resizingCol$index = resizingCol.index) !== null && _resizingCol$index !== void 0 ? _resizingCol$index : 0] = resizingCol.width;\n  }\n\n  return colSizes;\n};\n\nconst TablePopover = ({\n  element,\n  popoverProps,\n  children\n}) => /*#__PURE__*/React.createElement(Popover, _extends({\n  content: /*#__PURE__*/React.createElement(RemoveNodeButton, {\n    element: element\n  })\n}, popoverProps), children);\n\nconst TableElementBase = props => {\n  const {\n    attributes,\n    children,\n    nodeProps,\n    element,\n    transformColSizes,\n    onRenderContainer: Popover = TablePopover\n  } = props;\n  const rootProps = getRootProps(props);\n  const {\n    root,\n    tbody\n  } = getTableElementStyles(props);\n  let colSizes = useTableColSizes(element);\n\n  if (transformColSizes) {\n    colSizes = transformColSizes(colSizes);\n  }\n\n  return /*#__PURE__*/React.createElement(Popover, props, /*#__PURE__*/React.createElement(_StyledTable, _extends({}, attributes, {\n    className: root.className\n  }, rootProps, nodeProps, {\n    $_css: root.css\n  }), /*#__PURE__*/React.createElement(\"colgroup\", null, colSizes.map((width, index) => /*#__PURE__*/React.createElement(\"col\", {\n    key: index,\n    style: width ? {\n      width\n    } : undefined\n  }))), /*#__PURE__*/React.createElement(_StyledTbody, {\n    className: tbody === null || tbody === void 0 ? void 0 : tbody.className,\n    $_css2: tbody === null || tbody === void 0 ? void 0 : tbody.css\n  }, children)));\n};\n\nconst TableElement = withProviders([Provider, {\n  scope: ELEMENT_TABLE\n}])(TableElementBase);\n\nvar _StyledTable = _styled(\"table\").withConfig({\n  displayName: \"TableElement___StyledTable\",\n  componentId: \"sc-1g9mdxx-0\"\n})([\"\", \"\"], p => p.$_css);\n\nvar _StyledTbody = _styled(\"tbody\").withConfig({\n  displayName: \"TableElement___StyledTbody\",\n  componentId: \"sc-1g9mdxx-1\"\n})([\"\", \"\"], p => p.$_css2);\n\nconst getTableRowElementStyles = props => createStyles({\n  prefixClassNames: 'TableRowElement',\n  ...props\n}, {\n  root: [props.hideBorder && {\n    \"borderStyle\": \"none\"\n  }]\n});\n\nconst TableRowElement = props => {\n  const {\n    attributes,\n    children,\n    nodeProps\n  } = props;\n  const rootProps = getRootProps(props);\n  const {\n    root\n  } = getTableRowElementStyles(props);\n  return /*#__PURE__*/React.createElement(_StyledTr, _extends({}, attributes, {\n    className: root.className\n  }, rootProps, nodeProps, {\n    $_css: root.css\n  }), children);\n};\n\nvar _StyledTr = _styled(\"tr\").withConfig({\n  displayName: \"TableRowElement___StyledTr\",\n  componentId: \"sc-1c0uf2e-0\"\n})([\"\", \"\"], p => p.$_css);\n\nconst TableToolbarButton = ({\n  transform,\n  header,\n  ...props\n}) => {\n  const editor = usePlateEditorState();\n  const type = getPluginType(editor, ELEMENT_TABLE);\n  return /*#__PURE__*/React.createElement(ToolbarButton, _extends({\n    active: !!(editor !== null && editor !== void 0 && editor.selection) && someNode(editor, {\n      match: {\n        type\n      }\n    }),\n    onMouseDown: !!type && editor ? getPreventDefaultHandler(transform, editor, {\n      header\n    }) : undefined\n  }, props));\n};\n\nexport { TableCellElement, TableElement, TableElementBase, TablePopover, TableRowElement, TableToolbarButton, getTableCellElementStyles, getTableElementStyles, getTableRowElementStyles, hoveredColIndexAtom, resizingColAtom, useTableColSizes };","map":{"version":3,"sources":["../src/table.atoms.ts","../src/TableCellElement/TableCellElement.styles.ts","../../../../node_modules/clsx/dist/clsx.m.js","../src/TableCellElement/TableCellElement.tsx","../src/TableElement/TableElement.styles.ts","../src/hooks/useTableColSizes.ts","../src/TablePopover/TablePopover.tsx","../src/TableElement/TableElement.tsx","../src/TableRowElement/TableRowElement.styles.ts","../src/TableRowElement/TableRowElement.tsx","../src/TableToolbarButton/TableToolbarButton.tsx"],"names":["hoveredColIndexAtom","atom","resizingColAtom","getTableCellElementStyles","props","hideBorder","createStyles","prefixClassNames","root","css","content","resizableWrapper","handle","hovered","TableCellElement","editor","rootProps","getRootProps","useAtom","colIndex","useMemo","getTableColumnIndex","node","element","hoveredColIndex","onResize","setResizingCol","index","width","ref","offsetWidth","onResizeStop","setTableColSize","at","ReactEditor","className","clsx","setHoveredColIndex","resizable","height","right","top","zIndex","getTableElementStyles","tbody","useTableColSizes","tableNode","colCount","getTableColumnCount","colSizes","Array","resizingCol","TablePopover","children","TableElementBase","onRenderContainer","Popover","transformColSizes","undefined","TableElement","scope","ELEMENT_TABLE","getTableRowElementStyles","TableRowElement","nodeProps","TableToolbarButton","usePlateEditorState","type","getPluginType","someNode","match","getPreventDefaultHandler","header"],"mappings":"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","sourcesContent":["import { atom } from 'jotai';\n\nexport const hoveredColIndexAtom = atom<number | null>(null);\n\nexport const resizingColAtom = atom<{ index: number; width: number } | null>(\n  null\n);\n","import { createStyles } from '@udecode/plate-styled-components';\nimport { css } from 'styled-components';\nimport tw from 'twin.macro';\nimport { TableCellElementStyleProps } from './TableCellElement.types';\n\nexport const getTableCellElementStyles = (\n  props: TableCellElementStyleProps\n) => {\n  const { hovered, hideBorder } = props;\n\n  return createStyles(\n    { prefixClassNames: 'TableCellElement', ...props },\n    {\n      root: [\n        tw`relative p-0 overflow-visible bg-white`,\n        hideBorder ? tw`border-none` : tw`border border-gray-300`,\n        css`\n          min-width: 48px;\n        `,\n      ],\n      content: tw`relative px-3 py-2 z-10`,\n      resizableWrapper: [tw`absolute w-full h-full top-0`],\n      handle: [\n        tw`absolute`,\n        hovered && tw`bg-blue-500`,\n        css`\n          top: -12px;\n          right: -2px;\n\n          width: 4px;\n          height: calc(100% + 12px);\n\n          z-index: 10;\n        `,\n      ],\n    }\n  );\n};\n","function toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\nexport default function () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n","import React, { useMemo } from 'react';\nimport { getRootProps } from '@udecode/plate-styled-components';\nimport {\n  ELEMENT_TABLE,\n  getTableColumnIndex,\n  setTableColSize,\n} from '@udecode/plate-table';\nimport clsx from 'clsx';\nimport { useAtom } from 'jotai';\nimport { Resizable, ResizableProps } from 're-resizable';\nimport { ReactEditor } from 'slate-react';\nimport { hoveredColIndexAtom, resizingColAtom } from '../table.atoms';\nimport { getTableCellElementStyles } from './TableCellElement.styles';\nimport { TableCellElementProps } from './TableCellElement.types';\n\nexport const TableCellElement = (props: TableCellElementProps) => {\n  const {\n    attributes,\n    children,\n    nodeProps,\n    element,\n    resizableProps,\n    editor,\n  } = props;\n\n  const rootProps = getRootProps(props);\n\n  const [hoveredColIndex, setHoveredColIndex] = useAtom(\n    hoveredColIndexAtom,\n    ELEMENT_TABLE\n  );\n  const [, setResizingCol] = useAtom(resizingColAtom, ELEMENT_TABLE);\n\n  const colIndex = useMemo(\n    () => getTableColumnIndex(editor, { node: element }),\n    [editor, element]\n  );\n\n  const {\n    root,\n    content,\n    resizableWrapper,\n    resizable,\n    handle,\n  } = getTableCellElementStyles({\n    ...props,\n    hovered: hoveredColIndex === colIndex,\n  });\n\n  const onResize: ResizableProps['onResize'] = (e, direction, ref) => {\n    setResizingCol({\n      index: colIndex,\n      width: ref.offsetWidth,\n    });\n  };\n\n  const onResizeStop: ResizableProps['onResizeStop'] = (e, direction, ref) => {\n    setTableColSize(\n      editor,\n      { colIndex, width: ref.offsetWidth },\n      { at: ReactEditor.findPath(editor, element) }\n    );\n\n    setResizingCol(null);\n  };\n\n  return (\n    <td\n      {...attributes}\n      css={root.css}\n      className={root.className}\n      {...rootProps}\n      {...nodeProps}\n    >\n      <div css={content?.css} className={content?.className}>\n        {children}\n      </div>\n\n      <div\n        css={resizableWrapper?.css}\n        className={clsx(resizableWrapper?.className, 'group')}\n        contentEditable={false}\n        onMouseOver={() => setHoveredColIndex(colIndex)}\n        onFocus={() => setHoveredColIndex(colIndex)}\n        onMouseOut={() => setHoveredColIndex(null)}\n        onBlur={() => setHoveredColIndex(null)}\n      >\n        <Resizable\n          // @ts-ignore\n          css={resizable?.css}\n          className={resizable?.className}\n          size={{ width: '100%', height: '100%' }}\n          enable={{ right: true }}\n          handleStyles={{\n            right: {\n              top: -12,\n              height: 'calc(100% + 12px)',\n              zIndex: 20,\n            },\n          }}\n          onResize={onResize}\n          onResizeStop={onResizeStop}\n          {...resizableProps}\n        />\n\n        <div css={handle?.css} className={handle?.className} />\n      </div>\n    </td>\n  );\n};\n","import { createStyles } from '@udecode/plate-styled-components';\nimport tw from 'twin.macro';\nimport { TableElementStyleProps } from './TableElement.types';\n\nexport const getTableElementStyles = (props: TableElementStyleProps) =>\n  createStyles(\n    { prefixClassNames: 'TableElement', ...props },\n    {\n      root: [tw`table w-full my-4 mx-0 border-collapse`],\n      tbody: tw`min-w-full`,\n    }\n  );\n","import { TElement } from '@udecode/plate-core';\nimport {\n  ELEMENT_TABLE,\n  getTableColumnCount,\n  TableNodeData,\n} from '@udecode/plate-table';\nimport { useAtom } from 'jotai';\nimport { resizingColAtom } from '../table.atoms';\n\nexport const useTableColSizes = (\n  tableNode: TElement<TableNodeData>\n): number[] => {\n  const [resizingCol] = useAtom(resizingColAtom, ELEMENT_TABLE);\n\n  const colCount = getTableColumnCount(tableNode);\n\n  const colSizes = tableNode.colSizes\n    ? [...tableNode.colSizes]\n    : Array(colCount);\n\n  if (resizingCol) {\n    colSizes[resizingCol.index ?? 0] = resizingCol.width;\n  }\n\n  return colSizes;\n};\n","import React from 'react';\nimport { RemoveNodeButton } from '@udecode/plate-ui-button';\nimport { Popover } from '@udecode/plate-ui-popover';\nimport { TableElementProps } from '../TableElement/TableElement.types';\n\nexport const TablePopover = ({\n  element,\n  popoverProps,\n  children,\n}: TableElementProps) => (\n  <Popover content={<RemoveNodeButton element={element} />} {...popoverProps}>\n    {children}\n  </Popover>\n);\n","import React from 'react';\nimport { withProviders } from '@udecode/plate-core';\nimport { getRootProps } from '@udecode/plate-styled-components';\nimport { ELEMENT_TABLE } from '@udecode/plate-table';\nimport { Provider } from 'jotai';\nimport { useTableColSizes } from '../hooks/useTableColSizes';\nimport { TablePopover } from '../TablePopover/TablePopover';\nimport { getTableElementStyles } from './TableElement.styles';\nimport { TableElementProps } from './TableElement.types';\n\nexport const TableElementBase = (props: TableElementProps) => {\n  const {\n    attributes,\n    children,\n    nodeProps,\n    element,\n    transformColSizes,\n    onRenderContainer: Popover = TablePopover,\n  } = props;\n\n  const rootProps = getRootProps(props);\n\n  const { root, tbody } = getTableElementStyles(props);\n\n  let colSizes = useTableColSizes(element);\n\n  if (transformColSizes) {\n    colSizes = transformColSizes(colSizes);\n  }\n\n  return (\n    <Popover {...props}>\n      <table\n        {...attributes}\n        css={root.css}\n        className={root.className}\n        {...rootProps}\n        {...nodeProps}\n      >\n        <colgroup>\n          {colSizes.map((width, index) => (\n            <col key={index} style={width ? { width } : undefined} />\n          ))}\n        </colgroup>\n        <tbody css={tbody?.css} className={tbody?.className}>\n          {children}\n        </tbody>\n      </table>\n    </Popover>\n  );\n};\n\nexport const TableElement = withProviders([Provider, { scope: ELEMENT_TABLE }])(\n  TableElementBase\n);\n","import { createStyles } from '@udecode/plate-styled-components';\nimport tw from 'twin.macro';\nimport { TableRowElementStyleProps } from './TableRowElement.types';\n\nexport const getTableRowElementStyles = (props: TableRowElementStyleProps) =>\n  createStyles(\n    { prefixClassNames: 'TableRowElement', ...props },\n    {\n      root: [props.hideBorder && tw`border-none`],\n    }\n  );\n","import React from 'react';\nimport { getRootProps } from '@udecode/plate-styled-components';\nimport { getTableRowElementStyles } from './TableRowElement.styles';\nimport { TableRowElementProps } from './TableRowElement.types';\n\nexport const TableRowElement = (props: TableRowElementProps) => {\n  const { attributes, children, nodeProps } = props;\n\n  const rootProps = getRootProps(props);\n  const { root } = getTableRowElementStyles(props);\n\n  return (\n    <tr\n      {...attributes}\n      css={root.css}\n      className={root.className}\n      {...rootProps}\n      {...nodeProps}\n    >\n      {children}\n    </tr>\n  );\n};\n","import React from 'react';\nimport {\n  getPluginType,\n  getPreventDefaultHandler,\n  someNode,\n  usePlateEditorState,\n} from '@udecode/plate-core';\nimport { ELEMENT_TABLE } from '@udecode/plate-table';\nimport { ToolbarButton } from '@udecode/plate-toolbar';\nimport { TableToolbarButtonProps } from './TableToolbarButton.types';\n\nexport const TableToolbarButton = ({\n  transform,\n  header,\n  ...props\n}: TableToolbarButtonProps) => {\n  const editor = usePlateEditorState()!;\n  const type = getPluginType(editor, ELEMENT_TABLE);\n\n  return (\n    <ToolbarButton\n      active={\n        !!editor?.selection &&\n        someNode(editor, {\n          match: { type },\n        })\n      }\n      onMouseDown={\n        !!type && editor\n          ? getPreventDefaultHandler(transform, editor, { header })\n          : undefined\n      }\n      {...props}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}