{"ast":null,"code":"'use strict';\n\nvar asciiAlpha = require('../character/ascii-alpha.js');\n\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js');\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js');\n\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js');\n\nvar markdownSpace = require('../character/markdown-space.js');\n\nvar factorySpace = require('./factory-space.js');\n\nvar htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n};\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  var self = this;\n  var marker;\n  var buffer;\n  var index;\n  var returnState;\n  return start;\n\n  function start(code) {\n    effects.enter('htmlText');\n    effects.enter('htmlTextData');\n    effects.consume(code);\n    return open;\n  }\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n\n    if (code === 47) {\n      effects.consume(code);\n      return tagCloseStart;\n    }\n\n    if (code === 63) {\n      effects.consume(code);\n      return instruction;\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n\n    return nok(code);\n  }\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentOpen;\n    }\n\n    if (code === 91) {\n      effects.consume(code);\n      buffer = 'CDATA[';\n      index = 0;\n      return cdataOpen;\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return declaration;\n    }\n\n    return nok(code);\n  }\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentStart;\n    }\n\n    return nok(code);\n  }\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code);\n    }\n\n    if (code === 45) {\n      effects.consume(code);\n      return commentStartDash;\n    }\n\n    return comment(code);\n  }\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code);\n    }\n\n    return comment(code);\n  }\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code);\n    }\n\n    if (code === 45) {\n      effects.consume(code);\n      return commentClose;\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment;\n      return atLineEnding(code);\n    }\n\n    effects.consume(code);\n    return comment;\n  }\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return end;\n    }\n\n    return comment(code);\n  }\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code);\n      return index === buffer.length ? cdata : cdataOpen;\n    }\n\n    return nok(code);\n  }\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code);\n    }\n\n    if (code === 93) {\n      effects.consume(code);\n      return cdataClose;\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata;\n      return atLineEnding(code);\n    }\n\n    effects.consume(code);\n    return cdata;\n  }\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n\n    return cdata(code);\n  }\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code);\n    }\n\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n\n    return cdata(code);\n  }\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code);\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration;\n      return atLineEnding(code);\n    }\n\n    effects.consume(code);\n    return declaration;\n  }\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code);\n    }\n\n    if (code === 63) {\n      effects.consume(code);\n      return instructionClose;\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction;\n      return atLineEnding(code);\n    }\n\n    effects.consume(code);\n    return instruction;\n  }\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code);\n  }\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n\n    return nok(code);\n  }\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n\n    return tagCloseBetween(code);\n  }\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween;\n      return atLineEnding(code);\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagCloseBetween;\n    }\n\n    return end(code);\n  }\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n\n    return nok(code);\n  }\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return end;\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween;\n      return atLineEnding(code);\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenBetween;\n    }\n\n    return end(code);\n  }\n\n  function tagOpenAttributeName(code) {\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n\n    return tagOpenAttributeNameAfter(code);\n  }\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter;\n      return atLineEnding(code);\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeNameAfter;\n    }\n\n    return tagOpenBetween(code);\n  }\n\n  function tagOpenAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      marker = code;\n      return tagOpenAttributeValueQuoted;\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore;\n      return atLineEnding(code);\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n\n    effects.consume(code);\n    marker = undefined;\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return tagOpenAttributeValueQuotedAfter;\n    }\n\n    if (code === null) {\n      return nok(code);\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted;\n      return atLineEnding(code);\n    }\n\n    effects.consume(code);\n    return tagOpenAttributeValueQuoted;\n  }\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n\n    return nok(code);\n  }\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 96) {\n      return nok(code);\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData');\n    effects.enter('lineEnding');\n    effects.consume(code);\n    effects.exit('lineEnding');\n    return factorySpace(effects, afterPrefix, 'linePrefix', self.parser.constructs.disable.null.indexOf('codeIndented') > -1 ? undefined : 4);\n  }\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData');\n    return returnState(code);\n  }\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code);\n      effects.exit('htmlTextData');\n      effects.exit('htmlText');\n      return ok;\n    }\n\n    return nok(code);\n  }\n}\n\nmodule.exports = htmlText;","map":{"version":3,"sources":["C:/Users/ghdus/OneDrive/바탕 화면/team-project/nlp-project-team2/frontend/node_modules/micromark/dist/tokenize/html-text.js"],"names":["asciiAlpha","require","asciiAlphanumeric","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","factorySpace","htmlText","name","tokenize","tokenizeHtmlText","effects","ok","nok","self","marker","buffer","index","returnState","start","code","enter","consume","open","declarationOpen","tagCloseStart","instruction","tagOpen","commentOpen","cdataOpen","declaration","commentStart","commentStartDash","comment","commentClose","atLineEnding","end","charCodeAt","length","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","undefined","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","exit","afterPrefix","parser","constructs","disable","null","indexOf","module","exports"],"mappings":"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","sourcesContent":["'use strict'\r\n\r\nvar asciiAlpha = require('../character/ascii-alpha.js')\r\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\r\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\r\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\r\nvar markdownSpace = require('../character/markdown-space.js')\r\nvar factorySpace = require('./factory-space.js')\r\n\r\nvar htmlText = {\r\n  name: 'htmlText',\r\n  tokenize: tokenizeHtmlText\r\n}\r\n\r\nfunction tokenizeHtmlText(effects, ok, nok) {\r\n  var self = this\r\n  var marker\r\n  var buffer\r\n  var index\r\n  var returnState\r\n  return start\r\n\r\n  function start(code) {\r\n    effects.enter('htmlText')\r\n    effects.enter('htmlTextData')\r\n    effects.consume(code)\r\n    return open\r\n  }\r\n\r\n  function open(code) {\r\n    if (code === 33) {\r\n      effects.consume(code)\r\n      return declarationOpen\r\n    }\r\n\r\n    if (code === 47) {\r\n      effects.consume(code)\r\n      return tagCloseStart\r\n    }\r\n\r\n    if (code === 63) {\r\n      effects.consume(code)\r\n      return instruction\r\n    }\r\n\r\n    if (asciiAlpha(code)) {\r\n      effects.consume(code)\r\n      return tagOpen\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  function declarationOpen(code) {\r\n    if (code === 45) {\r\n      effects.consume(code)\r\n      return commentOpen\r\n    }\r\n\r\n    if (code === 91) {\r\n      effects.consume(code)\r\n      buffer = 'CDATA['\r\n      index = 0\r\n      return cdataOpen\r\n    }\r\n\r\n    if (asciiAlpha(code)) {\r\n      effects.consume(code)\r\n      return declaration\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  function commentOpen(code) {\r\n    if (code === 45) {\r\n      effects.consume(code)\r\n      return commentStart\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  function commentStart(code) {\r\n    if (code === null || code === 62) {\r\n      return nok(code)\r\n    }\r\n\r\n    if (code === 45) {\r\n      effects.consume(code)\r\n      return commentStartDash\r\n    }\r\n\r\n    return comment(code)\r\n  }\r\n\r\n  function commentStartDash(code) {\r\n    if (code === null || code === 62) {\r\n      return nok(code)\r\n    }\r\n\r\n    return comment(code)\r\n  }\r\n\r\n  function comment(code) {\r\n    if (code === null) {\r\n      return nok(code)\r\n    }\r\n\r\n    if (code === 45) {\r\n      effects.consume(code)\r\n      return commentClose\r\n    }\r\n\r\n    if (markdownLineEnding(code)) {\r\n      returnState = comment\r\n      return atLineEnding(code)\r\n    }\r\n\r\n    effects.consume(code)\r\n    return comment\r\n  }\r\n\r\n  function commentClose(code) {\r\n    if (code === 45) {\r\n      effects.consume(code)\r\n      return end\r\n    }\r\n\r\n    return comment(code)\r\n  }\r\n\r\n  function cdataOpen(code) {\r\n    if (code === buffer.charCodeAt(index++)) {\r\n      effects.consume(code)\r\n      return index === buffer.length ? cdata : cdataOpen\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  function cdata(code) {\r\n    if (code === null) {\r\n      return nok(code)\r\n    }\r\n\r\n    if (code === 93) {\r\n      effects.consume(code)\r\n      return cdataClose\r\n    }\r\n\r\n    if (markdownLineEnding(code)) {\r\n      returnState = cdata\r\n      return atLineEnding(code)\r\n    }\r\n\r\n    effects.consume(code)\r\n    return cdata\r\n  }\r\n\r\n  function cdataClose(code) {\r\n    if (code === 93) {\r\n      effects.consume(code)\r\n      return cdataEnd\r\n    }\r\n\r\n    return cdata(code)\r\n  }\r\n\r\n  function cdataEnd(code) {\r\n    if (code === 62) {\r\n      return end(code)\r\n    }\r\n\r\n    if (code === 93) {\r\n      effects.consume(code)\r\n      return cdataEnd\r\n    }\r\n\r\n    return cdata(code)\r\n  }\r\n\r\n  function declaration(code) {\r\n    if (code === null || code === 62) {\r\n      return end(code)\r\n    }\r\n\r\n    if (markdownLineEnding(code)) {\r\n      returnState = declaration\r\n      return atLineEnding(code)\r\n    }\r\n\r\n    effects.consume(code)\r\n    return declaration\r\n  }\r\n\r\n  function instruction(code) {\r\n    if (code === null) {\r\n      return nok(code)\r\n    }\r\n\r\n    if (code === 63) {\r\n      effects.consume(code)\r\n      return instructionClose\r\n    }\r\n\r\n    if (markdownLineEnding(code)) {\r\n      returnState = instruction\r\n      return atLineEnding(code)\r\n    }\r\n\r\n    effects.consume(code)\r\n    return instruction\r\n  }\r\n\r\n  function instructionClose(code) {\r\n    return code === 62 ? end(code) : instruction(code)\r\n  }\r\n\r\n  function tagCloseStart(code) {\r\n    if (asciiAlpha(code)) {\r\n      effects.consume(code)\r\n      return tagClose\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  function tagClose(code) {\r\n    if (code === 45 || asciiAlphanumeric(code)) {\r\n      effects.consume(code)\r\n      return tagClose\r\n    }\r\n\r\n    return tagCloseBetween(code)\r\n  }\r\n\r\n  function tagCloseBetween(code) {\r\n    if (markdownLineEnding(code)) {\r\n      returnState = tagCloseBetween\r\n      return atLineEnding(code)\r\n    }\r\n\r\n    if (markdownSpace(code)) {\r\n      effects.consume(code)\r\n      return tagCloseBetween\r\n    }\r\n\r\n    return end(code)\r\n  }\r\n\r\n  function tagOpen(code) {\r\n    if (code === 45 || asciiAlphanumeric(code)) {\r\n      effects.consume(code)\r\n      return tagOpen\r\n    }\r\n\r\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\r\n      return tagOpenBetween(code)\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  function tagOpenBetween(code) {\r\n    if (code === 47) {\r\n      effects.consume(code)\r\n      return end\r\n    }\r\n\r\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\r\n      effects.consume(code)\r\n      return tagOpenAttributeName\r\n    }\r\n\r\n    if (markdownLineEnding(code)) {\r\n      returnState = tagOpenBetween\r\n      return atLineEnding(code)\r\n    }\r\n\r\n    if (markdownSpace(code)) {\r\n      effects.consume(code)\r\n      return tagOpenBetween\r\n    }\r\n\r\n    return end(code)\r\n  }\r\n\r\n  function tagOpenAttributeName(code) {\r\n    if (\r\n      code === 45 ||\r\n      code === 46 ||\r\n      code === 58 ||\r\n      code === 95 ||\r\n      asciiAlphanumeric(code)\r\n    ) {\r\n      effects.consume(code)\r\n      return tagOpenAttributeName\r\n    }\r\n\r\n    return tagOpenAttributeNameAfter(code)\r\n  }\r\n\r\n  function tagOpenAttributeNameAfter(code) {\r\n    if (code === 61) {\r\n      effects.consume(code)\r\n      return tagOpenAttributeValueBefore\r\n    }\r\n\r\n    if (markdownLineEnding(code)) {\r\n      returnState = tagOpenAttributeNameAfter\r\n      return atLineEnding(code)\r\n    }\r\n\r\n    if (markdownSpace(code)) {\r\n      effects.consume(code)\r\n      return tagOpenAttributeNameAfter\r\n    }\r\n\r\n    return tagOpenBetween(code)\r\n  }\r\n\r\n  function tagOpenAttributeValueBefore(code) {\r\n    if (\r\n      code === null ||\r\n      code === 60 ||\r\n      code === 61 ||\r\n      code === 62 ||\r\n      code === 96\r\n    ) {\r\n      return nok(code)\r\n    }\r\n\r\n    if (code === 34 || code === 39) {\r\n      effects.consume(code)\r\n      marker = code\r\n      return tagOpenAttributeValueQuoted\r\n    }\r\n\r\n    if (markdownLineEnding(code)) {\r\n      returnState = tagOpenAttributeValueBefore\r\n      return atLineEnding(code)\r\n    }\r\n\r\n    if (markdownSpace(code)) {\r\n      effects.consume(code)\r\n      return tagOpenAttributeValueBefore\r\n    }\r\n\r\n    effects.consume(code)\r\n    marker = undefined\r\n    return tagOpenAttributeValueUnquoted\r\n  }\r\n\r\n  function tagOpenAttributeValueQuoted(code) {\r\n    if (code === marker) {\r\n      effects.consume(code)\r\n      return tagOpenAttributeValueQuotedAfter\r\n    }\r\n\r\n    if (code === null) {\r\n      return nok(code)\r\n    }\r\n\r\n    if (markdownLineEnding(code)) {\r\n      returnState = tagOpenAttributeValueQuoted\r\n      return atLineEnding(code)\r\n    }\r\n\r\n    effects.consume(code)\r\n    return tagOpenAttributeValueQuoted\r\n  }\r\n\r\n  function tagOpenAttributeValueQuotedAfter(code) {\r\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\r\n      return tagOpenBetween(code)\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n\r\n  function tagOpenAttributeValueUnquoted(code) {\r\n    if (\r\n      code === null ||\r\n      code === 34 ||\r\n      code === 39 ||\r\n      code === 60 ||\r\n      code === 61 ||\r\n      code === 96\r\n    ) {\r\n      return nok(code)\r\n    }\r\n\r\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\r\n      return tagOpenBetween(code)\r\n    }\r\n\r\n    effects.consume(code)\r\n    return tagOpenAttributeValueUnquoted\r\n  } // We can’t have blank lines in content, so no need to worry about empty\r\n  // tokens.\r\n\r\n  function atLineEnding(code) {\r\n    effects.exit('htmlTextData')\r\n    effects.enter('lineEnding')\r\n    effects.consume(code)\r\n    effects.exit('lineEnding')\r\n    return factorySpace(\r\n      effects,\r\n      afterPrefix,\r\n      'linePrefix',\r\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1\r\n        ? undefined\r\n        : 4\r\n    )\r\n  }\r\n\r\n  function afterPrefix(code) {\r\n    effects.enter('htmlTextData')\r\n    return returnState(code)\r\n  }\r\n\r\n  function end(code) {\r\n    if (code === 62) {\r\n      effects.consume(code)\r\n      effects.exit('htmlTextData')\r\n      effects.exit('htmlText')\r\n      return ok\r\n    }\r\n\r\n    return nok(code)\r\n  }\r\n}\r\n\r\nmodule.exports = htmlText\r\n"]},"metadata":{},"sourceType":"script"}