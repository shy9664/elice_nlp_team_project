{"ast":null,"code":"import { createPluginFactory } from '@udecode/plate-core';\nimport { Text } from 'slate';\n\nconst decorateFindReplace = (editor, {\n  type,\n  options: {\n    search\n  }\n}) => ([node, path]) => {\n  const ranges = [];\n\n  if (search && Text.isText(node)) {\n    const {\n      text\n    } = node;\n    const parts = text.split(search);\n    let offset = 0;\n    parts.forEach((part, i) => {\n      if (i !== 0) {\n        ranges.push({\n          anchor: {\n            path,\n            offset: offset - search.length\n          },\n          focus: {\n            path,\n            offset\n          },\n          [type]: true\n        });\n      }\n\n      offset = offset + part.length + search.length;\n    });\n  }\n\n  return ranges;\n};\n\nconst MARK_SEARCH_HIGHLIGHT = 'search_highlight';\nconst createFindReplacePlugin = createPluginFactory({\n  key: MARK_SEARCH_HIGHLIGHT,\n  isLeaf: true,\n  decorate: decorateFindReplace\n});\nexport { MARK_SEARCH_HIGHLIGHT, createFindReplacePlugin, decorateFindReplace };","map":{"version":3,"sources":["../src/decorateFindReplace.ts","../src/createFindReplacePlugin.ts"],"names":["decorateFindReplace","options","search","ranges","Text","text","parts","offset","i","anchor","length","focus","part","MARK_SEARCH_HIGHLIGHT","createFindReplacePlugin","createPluginFactory","key","isLeaf","decorate"],"mappings":";;;MAIaA,mBAAoD,GAAG,CAAA,MAAA,EAElE;AAAA,EAAA,IAAA;AAAQC,EAAAA,OAAO,EAAE;AAAEC,IAAAA;AAAF;AAAjB,CAFkE,KAG/D,CAAC,CAAA,IAAA,EAAD,IAAC,CAAD,KAA6B;AAChC,QAAMC,MAAe,GAArB,EAAA;;AAEA,MAAID,MAAM,IAAIE,IAAI,CAAJA,MAAAA,CAAd,IAAcA,CAAd,EAAiC;AAC/B,UAAM;AAAEC,MAAAA;AAAF,QAAN,IAAA;AACA,UAAMC,KAAK,GAAGD,IAAI,CAAJA,KAAAA,CAAd,MAAcA,CAAd;AACA,QAAIE,MAAM,GAAV,CAAA;AACAD,IAAAA,KAAK,CAALA,OAAAA,CAAc,CAAA,IAAA,EAAA,CAAA,KAAa;AACzB,UAAIE,CAAC,KAAL,CAAA,EAAa;AACXL,QAAAA,MAAM,CAANA,IAAAA,CAAY;AACVM,UAAAA,MAAM,EAAE;AAAA,YAAA,IAAA;AAAQF,YAAAA,MAAM,EAAEA,MAAM,GAAGL,MAAM,CAACQ;AAAhC,WADE;AAEVC,UAAAA,KAAK,EAAE;AAAA,YAAA,IAAA;AAAQJ,YAAAA;AAAR,WAFG;AAGV,WAAA,IAAA,GAAQ;AAHE,SAAZJ;AAKD;;AACDI,MAAAA,MAAM,GAAGA,MAAM,GAAGK,IAAI,CAAbL,MAAAA,GAAuBL,MAAM,CAAtCK,MAAAA;AARFD,KAAAA;AAUD;;AAED,SAAA,MAAA;AACD,C;;MCvBYO,qBAAqB,GAAG,kB;MAExBC,uBAAuB,GAAGC,mBAAmB,CAAoB;AAC5EC,EAAAA,GAAG,EADyE,qBAAA;AAE5EC,EAAAA,MAAM,EAFsE,IAAA;AAG5EC,EAAAA,QAAQ,EAAElB;AAHkE,CAApB,C","sourcesContent":["import { Decorate } from '@udecode/plate-core';\nimport { NodeEntry, Range, Text } from 'slate';\nimport { FindReplacePlugin } from './types';\n\nexport const decorateFindReplace: Decorate<{}, FindReplacePlugin> = (\n  editor,\n  { type, options: { search } }\n) => ([node, path]: NodeEntry) => {\n  const ranges: Range[] = [];\n\n  if (search && Text.isText(node)) {\n    const { text } = node;\n    const parts = text.split(search);\n    let offset = 0;\n    parts.forEach((part, i) => {\n      if (i !== 0) {\n        ranges.push({\n          anchor: { path, offset: offset - search.length },\n          focus: { path, offset },\n          [type]: true,\n        });\n      }\n      offset = offset + part.length + search.length;\n    });\n  }\n\n  return ranges;\n};\n","import { createPluginFactory } from '@udecode/plate-core';\nimport { decorateFindReplace } from './decorateFindReplace';\nimport { FindReplacePlugin } from './types';\n\nexport const MARK_SEARCH_HIGHLIGHT = 'search_highlight';\n\nexport const createFindReplacePlugin = createPluginFactory<FindReplacePlugin>({\n  key: MARK_SEARCH_HIGHLIGHT,\n  isLeaf: true,\n  decorate: decorateFindReplace,\n});\n"]},"metadata":{},"sourceType":"module"}