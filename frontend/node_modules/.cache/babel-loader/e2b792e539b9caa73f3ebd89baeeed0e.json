{"ast":null,"code":"'use strict';\n/**\n * Module dependencies.\n */\n\nvar cheerio = require('cheerio');\n\nvar utils = require('./utils');\n\nvar cheerioLoad = function (html, options, encodeEntities) {\n  options = Object.assign({\n    decodeEntities: false,\n    _useHtmlParser2: true\n  }, options);\n  html = encodeEntities(html);\n  return cheerio.load(html, options);\n};\n\nvar createEntityConverters = function () {\n  var codeBlockLookup = [];\n\n  var encodeCodeBlocks = function (html) {\n    var blocks = module.exports.codeBlocks;\n    Object.keys(blocks).forEach(function (key) {\n      var re = new RegExp(blocks[key].start + '([\\\\S\\\\s]*?)' + blocks[key].end, 'g');\n      html = html.replace(re, function (match, subMatch) {\n        codeBlockLookup.push(match);\n        return 'JUICE_CODE_BLOCK_' + (codeBlockLookup.length - 1) + '_';\n      });\n    });\n    return html;\n  };\n\n  var decodeCodeBlocks = function (html) {\n    for (var index = 0; index < codeBlockLookup.length; index++) {\n      var re = new RegExp('JUICE_CODE_BLOCK_' + index + '_(=\"\")?', 'gi');\n      html = html.replace(re, function () {\n        return codeBlockLookup[index];\n      });\n    }\n\n    return html;\n  };\n\n  return {\n    encodeEntities: encodeCodeBlocks,\n    decodeEntities: decodeCodeBlocks\n  };\n};\n/**\n * Parses the input, calls the callback on the parsed DOM, and generates the output\n *\n * @param {String} html input html to be processed\n * @param {Object} options for the parser\n * @param {Function} callback to be invoked on the DOM\n * @param {Array} callbackExtraArguments to be passed to the callback\n * @return {String} resulting html\n */\n\n\nmodule.exports = function (html, options, callback, callbackExtraArguments) {\n  var entityConverters = createEntityConverters();\n  var $ = cheerioLoad(html, options, entityConverters.encodeEntities);\n  var args = [$];\n  args.push.apply(args, callbackExtraArguments);\n  var doc = callback.apply(undefined, args) || $;\n\n  if (options && options.xmlMode) {\n    return entityConverters.decodeEntities(doc.xml());\n  }\n\n  return entityConverters.decodeEntities(doc.html());\n};\n\nmodule.exports.codeBlocks = {\n  EJS: {\n    start: '<%',\n    end: '%>'\n  },\n  HBS: {\n    start: '{{',\n    end: '}}'\n  }\n};","map":{"version":3,"sources":["/Users/hyun/Desktop/33333333/frontend/node_modules/juice/lib/cheerio.js"],"names":["cheerio","require","utils","cheerioLoad","html","options","encodeEntities","Object","assign","decodeEntities","_useHtmlParser2","load","createEntityConverters","codeBlockLookup","encodeCodeBlocks","blocks","module","exports","codeBlocks","keys","forEach","key","re","RegExp","start","end","replace","match","subMatch","push","length","decodeCodeBlocks","index","callback","callbackExtraArguments","entityConverters","$","args","apply","doc","undefined","xmlMode","xml","EJS","HBS"],"mappings":"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","sourcesContent":["'use strict';\n\n/**\n * Module dependencies.\n */\nvar cheerio = require('cheerio');\nvar utils = require('./utils');\n\nvar cheerioLoad = function(html, options, encodeEntities) {\n  options = Object.assign({decodeEntities: false, _useHtmlParser2:true}, options);\n  html = encodeEntities(html);\n  return cheerio.load(html, options);\n};\n\nvar createEntityConverters = function () {\n  var codeBlockLookup = [];\n\n  var encodeCodeBlocks = function(html) {\n    var blocks = module.exports.codeBlocks;\n    Object.keys(blocks).forEach(function(key) {\n      var re = new RegExp(blocks[key].start + '([\\\\S\\\\s]*?)' + blocks[key].end, 'g');\n      html = html.replace(re, function(match, subMatch) {\n        codeBlockLookup.push(match);\n        return 'JUICE_CODE_BLOCK_' + (codeBlockLookup.length - 1) + '_';\n      });\n    });\n    return html;\n  };\n\n  var decodeCodeBlocks = function(html) {\n    for(var index = 0; index < codeBlockLookup.length; index++) {\n      var re = new RegExp('JUICE_CODE_BLOCK_' + index + '_(=\"\")?', 'gi');\n      html = html.replace(re, function() {\n        return codeBlockLookup[index];\n      });\n    }\n    return html;\n  };\n\n  return {\n    encodeEntities: encodeCodeBlocks,\n    decodeEntities: decodeCodeBlocks,\n  };\n};\n\n/**\n * Parses the input, calls the callback on the parsed DOM, and generates the output\n *\n * @param {String} html input html to be processed\n * @param {Object} options for the parser\n * @param {Function} callback to be invoked on the DOM\n * @param {Array} callbackExtraArguments to be passed to the callback\n * @return {String} resulting html\n */\nmodule.exports = function(html, options, callback, callbackExtraArguments) {\n  var entityConverters = createEntityConverters();\n\n  var $ = cheerioLoad(html, options, entityConverters.encodeEntities);\n  var args = [ $ ];\n  args.push.apply(args, callbackExtraArguments);\n  var doc = callback.apply(undefined, args) || $;\n\n  if (options && options.xmlMode) {\n    return entityConverters.decodeEntities(doc.xml());\n  }\n  return entityConverters.decodeEntities(doc.html());\n};\n\nmodule.exports.codeBlocks = {\n  EJS: { start: '<%', end: '%>' },\n  HBS: { start: '{{', end: '}}' }\n};\n"]},"metadata":{},"sourceType":"script"}