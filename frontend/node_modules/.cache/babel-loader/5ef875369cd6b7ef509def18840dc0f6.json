{"ast":null,"code":"'use strict';\n\nvar asciiControl = require('../character/ascii-control.js');\n\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js');\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js'); // eslint-disable-next-line max-params\n\n\nfunction destinationFactory(effects, ok, nok, type, literalType, literalMarkerType, rawType, stringType, max) {\n  var limit = max || Infinity;\n  var balance = 0;\n  return start;\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type);\n      effects.enter(literalType);\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      return destinationEnclosedBefore;\n    }\n\n    if (asciiControl(code) || code === 41) {\n      return nok(code);\n    }\n\n    effects.enter(type);\n    effects.enter(rawType);\n    effects.enter(stringType);\n    effects.enter('chunkString', {\n      contentType: 'string'\n    });\n    return destinationRaw(code);\n  }\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      effects.exit(literalType);\n      effects.exit(type);\n      return ok;\n    }\n\n    effects.enter(stringType);\n    effects.enter('chunkString', {\n      contentType: 'string'\n    });\n    return destinationEnclosed(code);\n  }\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString');\n      effects.exit(stringType);\n      return destinationEnclosedBefore(code);\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code);\n    }\n\n    effects.consume(code);\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed;\n  }\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code);\n      return destinationEnclosed;\n    }\n\n    return destinationEnclosed(code);\n  }\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code);\n      effects.consume(code);\n      return destinationRaw;\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString');\n        effects.exit(stringType);\n        effects.exit(rawType);\n        effects.exit(type);\n        return ok(code);\n      }\n\n      effects.consume(code);\n      return destinationRaw;\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code);\n      effects.exit('chunkString');\n      effects.exit(stringType);\n      effects.exit(rawType);\n      effects.exit(type);\n      return ok(code);\n    }\n\n    if (asciiControl(code)) return nok(code);\n    effects.consume(code);\n    return code === 92 ? destinationRawEscape : destinationRaw;\n  }\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code);\n      return destinationRaw;\n    }\n\n    return destinationRaw(code);\n  }\n}\n\nmodule.exports = destinationFactory;","map":{"version":3,"sources":["C:/Users/ghdus/OneDrive/바탕 화면/team-project/nlp-project-team2/frontend/node_modules/micromark/dist/tokenize/factory-destination.js"],"names":["asciiControl","require","markdownLineEndingOrSpace","markdownLineEnding","destinationFactory","effects","ok","nok","type","literalType","literalMarkerType","rawType","stringType","max","limit","Infinity","balance","start","code","enter","consume","exit","destinationEnclosedBefore","contentType","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","module","exports"],"mappings":"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","sourcesContent":["'use strict'\r\n\r\nvar asciiControl = require('../character/ascii-control.js')\r\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\r\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\r\n\r\n// eslint-disable-next-line max-params\r\nfunction destinationFactory(\r\n  effects,\r\n  ok,\r\n  nok,\r\n  type,\r\n  literalType,\r\n  literalMarkerType,\r\n  rawType,\r\n  stringType,\r\n  max\r\n) {\r\n  var limit = max || Infinity\r\n  var balance = 0\r\n  return start\r\n\r\n  function start(code) {\r\n    if (code === 60) {\r\n      effects.enter(type)\r\n      effects.enter(literalType)\r\n      effects.enter(literalMarkerType)\r\n      effects.consume(code)\r\n      effects.exit(literalMarkerType)\r\n      return destinationEnclosedBefore\r\n    }\r\n\r\n    if (asciiControl(code) || code === 41) {\r\n      return nok(code)\r\n    }\r\n\r\n    effects.enter(type)\r\n    effects.enter(rawType)\r\n    effects.enter(stringType)\r\n    effects.enter('chunkString', {\r\n      contentType: 'string'\r\n    })\r\n    return destinationRaw(code)\r\n  }\r\n\r\n  function destinationEnclosedBefore(code) {\r\n    if (code === 62) {\r\n      effects.enter(literalMarkerType)\r\n      effects.consume(code)\r\n      effects.exit(literalMarkerType)\r\n      effects.exit(literalType)\r\n      effects.exit(type)\r\n      return ok\r\n    }\r\n\r\n    effects.enter(stringType)\r\n    effects.enter('chunkString', {\r\n      contentType: 'string'\r\n    })\r\n    return destinationEnclosed(code)\r\n  }\r\n\r\n  function destinationEnclosed(code) {\r\n    if (code === 62) {\r\n      effects.exit('chunkString')\r\n      effects.exit(stringType)\r\n      return destinationEnclosedBefore(code)\r\n    }\r\n\r\n    if (code === null || code === 60 || markdownLineEnding(code)) {\r\n      return nok(code)\r\n    }\r\n\r\n    effects.consume(code)\r\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\r\n  }\r\n\r\n  function destinationEnclosedEscape(code) {\r\n    if (code === 60 || code === 62 || code === 92) {\r\n      effects.consume(code)\r\n      return destinationEnclosed\r\n    }\r\n\r\n    return destinationEnclosed(code)\r\n  }\r\n\r\n  function destinationRaw(code) {\r\n    if (code === 40) {\r\n      if (++balance > limit) return nok(code)\r\n      effects.consume(code)\r\n      return destinationRaw\r\n    }\r\n\r\n    if (code === 41) {\r\n      if (!balance--) {\r\n        effects.exit('chunkString')\r\n        effects.exit(stringType)\r\n        effects.exit(rawType)\r\n        effects.exit(type)\r\n        return ok(code)\r\n      }\r\n\r\n      effects.consume(code)\r\n      return destinationRaw\r\n    }\r\n\r\n    if (code === null || markdownLineEndingOrSpace(code)) {\r\n      if (balance) return nok(code)\r\n      effects.exit('chunkString')\r\n      effects.exit(stringType)\r\n      effects.exit(rawType)\r\n      effects.exit(type)\r\n      return ok(code)\r\n    }\r\n\r\n    if (asciiControl(code)) return nok(code)\r\n    effects.consume(code)\r\n    return code === 92 ? destinationRawEscape : destinationRaw\r\n  }\r\n\r\n  function destinationRawEscape(code) {\r\n    if (code === 40 || code === 41 || code === 92) {\r\n      effects.consume(code)\r\n      return destinationRaw\r\n    }\r\n\r\n    return destinationRaw(code)\r\n  }\r\n}\r\n\r\nmodule.exports = destinationFactory\r\n"]},"metadata":{},"sourceType":"script"}