{"ast":null,"code":"var _jsxFileName = \"/Users/hyun/Desktop/vmvmvmvm/frontend/src/components/MainDiaries.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport { useRecoilState } from \"recoil\";\nimport { selectedDateMainAtom } from \"../recoils/cal\";\nimport { useNavigate } from \"react-router\";\nimport ReadonlyEditor from \"./ReadonlyEditor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MainDiaries = () => {\n  _s();\n\n  const navi = useNavigate();\n  const [date, setDate] = useRecoilState(selectedDateMainAtom);\n  const [fullDate, setFullDate] = useState(\"\");\n  const [fullDateString, setFullDateString] = useState(\"\");\n  const [contentData, setContentData] = useState(\"\");\n  useEffect(() => {\n    const yearStr = date.getFullYear();\n    const monthNum = date.getMonth() + 1;\n    const dateNum = date.getDate();\n    const monthStr = monthNum < 10 ? `0${monthNum}` : monthNum;\n    const dateStr = dateNum < 10 ? `0${dateNum}` : dateNum;\n    const numDate = `${yearStr}-${monthStr}-${dateStr}`;\n    const strDate = `${yearStr}년 ${monthNum}월 ${dateNum}일`;\n    setFullDateString(strDate);\n    setFullDate(numDate);\n  }, [date]);\n  useEffect(() => {\n    const next = localStorage.getItem(fullDate);\n    next && next !== contentData ? setContentData(\"loading\") : setContentData(\"\");\n    setTimeout(() => {\n      setContentData(next);\n    });\n  }, [fullDate]); // useEffect(() => {}, [contentData]);\n\n  const goWriteDiary = () => {\n    navi(\"/diary/write\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: fullDateString\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), contentData === \"loading\" ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        height: 200\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this) : contentData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ReadonlyEditor, {\n        selectedDate: contentData,\n        isDataContent: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          mt: 1,\n          mb: 1\n        },\n        children: \"\\uC77C\\uAE30\\uAC00 \\uC5C6\\uC5B4\\uC694\\u3160\\u3160\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => goWriteDiary(),\n        variant: \"contained\" // color=\"secondary\"\n        ,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\">>\", \" \\uC624\\uB298\\uC774\\uB77C\\uB3C4 \\uC77C\\uAE30\\uB97C \\uC4F0\\uC790!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(MainDiaries, \"COuaCEEmEThqh19ctA8Al165PQM=\", false, function () {\n  return [useNavigate, useRecoilState];\n});\n\n_c = MainDiaries;\nexport default MainDiaries;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainDiaries\");","map":{"version":3,"sources":["/Users/hyun/Desktop/vmvmvmvm/frontend/src/components/MainDiaries.jsx"],"names":["React","useEffect","useState","Box","Button","Typography","useRecoilState","selectedDateMainAtom","useNavigate","ReadonlyEditor","MainDiaries","navi","date","setDate","fullDate","setFullDate","fullDateString","setFullDateString","contentData","setContentData","yearStr","getFullYear","monthNum","getMonth","dateNum","getDate","monthStr","dateStr","numDate","strDate","next","localStorage","getItem","setTimeout","goWriteDiary","height","mt","mb"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport { useRecoilState } from \"recoil\";\nimport { selectedDateMainAtom } from \"../recoils/cal\";\nimport { useNavigate } from \"react-router\";\nimport ReadonlyEditor from \"./ReadonlyEditor\";\n\nconst MainDiaries = () => {\n    const navi = useNavigate();\n    const [date, setDate] = useRecoilState(selectedDateMainAtom);\n    const [fullDate, setFullDate] = useState(\"\");\n    const [fullDateString, setFullDateString] = useState(\"\");\n    const [contentData, setContentData] = useState(\"\");\n\n    useEffect(() => {\n        const yearStr = date.getFullYear();\n        const monthNum = date.getMonth() + 1;\n        const dateNum = date.getDate();\n        const monthStr = monthNum < 10 ? `0${monthNum}` : monthNum;\n        const dateStr = dateNum < 10 ? `0${dateNum}` : dateNum;\n        const numDate = `${yearStr}-${monthStr}-${dateStr}`;\n        const strDate = `${yearStr}년 ${monthNum}월 ${dateNum}일`;\n        setFullDateString(strDate);\n        setFullDate(numDate);\n    }, [date]);\n\n    useEffect(() => {\n        const next = localStorage.getItem(fullDate);\n        next && next !== contentData\n            ? setContentData(\"loading\")\n            : setContentData(\"\");\n        setTimeout(() => {\n            setContentData(next);\n        });\n    }, [fullDate]);\n\n    // useEffect(() => {}, [contentData]);\n\n    const goWriteDiary = () => {\n        navi(\"/diary/write\");\n    };\n    return (\n        <>\n            <Typography variant=\"h4\">{fullDateString}</Typography>\n            {contentData === \"loading\" ? (\n                <Box sx={{ height: 200 }}></Box>\n            ) : contentData ? (\n                <>\n                    <ReadonlyEditor selectedDate={contentData} isDataContent />\n                </>\n            ) : (\n                <>\n                    <Typography sx={{ mt: 1, mb: 1 }}>\n                        일기가 없어요ㅠㅠ\n                    </Typography>\n                    <Button\n                        onClick={() => goWriteDiary()}\n                        variant=\"contained\"\n                        // color=\"secondary\"\n                    >\n                        <Typography>{\">>\"} 오늘이라도 일기를 쓰자!</Typography>\n                    </Button>\n                </>\n            )}\n        </>\n    );\n};\n\nexport default MainDiaries;\n"]},"metadata":{},"sourceType":"module"}