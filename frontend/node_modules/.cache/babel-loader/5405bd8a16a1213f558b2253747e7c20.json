{"ast":null,"code":"'use strict';\n\nvar splice = require('../constant/splice.js'); // causes a stack overflow in V8 when trying to insert 100k items for instance.\n\n\nfunction chunkedSplice(list, start, remove, items) {\n  var end = list.length;\n  var chunkStart = 0;\n  var parameters; // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start;\n  } else {\n    start = start > end ? end : start;\n  }\n\n  remove = remove > 0 ? remove : 0; // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items);\n    parameters.unshift(start, remove);\n    splice.apply(list, parameters);\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) splice.apply(list, [start, remove]); // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000);\n      parameters.unshift(start, 0);\n      splice.apply(list, parameters);\n      chunkStart += 10000;\n      start += 10000;\n    }\n  }\n}\n\nmodule.exports = chunkedSplice;","map":{"version":3,"sources":["C:/Users/ghdus/OneDrive/바탕 화면/team-project/nlp-project-team2/frontend/node_modules/micromark/dist/util/chunked-splice.js"],"names":["splice","require","chunkedSplice","list","start","remove","items","end","length","chunkStart","parameters","Array","from","unshift","apply","slice","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,uBAAD,CAApB,C,CAEA;;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,KAA7B,EAAoCC,MAApC,EAA4CC,KAA5C,EAAmD;AACjD,MAAIC,GAAG,GAAGJ,IAAI,CAACK,MAAf;AACA,MAAIC,UAAU,GAAG,CAAjB;AACA,MAAIC,UAAJ,CAHiD,CAGlC;;AAEf,MAAIN,KAAK,GAAG,CAAZ,EAAe;AACbA,IAAAA,KAAK,GAAG,CAACA,KAAD,GAASG,GAAT,GAAe,CAAf,GAAmBA,GAAG,GAAGH,KAAjC;AACD,GAFD,MAEO;AACLA,IAAAA,KAAK,GAAGA,KAAK,GAAGG,GAAR,GAAcA,GAAd,GAAoBH,KAA5B;AACD;;AAEDC,EAAAA,MAAM,GAAGA,MAAM,GAAG,CAAT,GAAaA,MAAb,GAAsB,CAA/B,CAXiD,CAWhB;;AAEjC,MAAIC,KAAK,CAACE,MAAN,GAAe,KAAnB,EAA0B;AACxBE,IAAAA,UAAU,GAAGC,KAAK,CAACC,IAAN,CAAWN,KAAX,CAAb;AACAI,IAAAA,UAAU,CAACG,OAAX,CAAmBT,KAAnB,EAA0BC,MAA1B;AACAL,IAAAA,MAAM,CAACc,KAAP,CAAaX,IAAb,EAAmBO,UAAnB;AACD,GAJD,MAIO;AACL;AACA,QAAIL,MAAJ,EAAYL,MAAM,CAACc,KAAP,CAAaX,IAAb,EAAmB,CAACC,KAAD,EAAQC,MAAR,CAAnB,EAFP,CAE2C;;AAEhD,WAAOI,UAAU,GAAGH,KAAK,CAACE,MAA1B,EAAkC;AAChCE,MAAAA,UAAU,GAAGJ,KAAK,CAACS,KAAN,CAAYN,UAAZ,EAAwBA,UAAU,GAAG,KAArC,CAAb;AACAC,MAAAA,UAAU,CAACG,OAAX,CAAmBT,KAAnB,EAA0B,CAA1B;AACAJ,MAAAA,MAAM,CAACc,KAAP,CAAaX,IAAb,EAAmBO,UAAnB;AACAD,MAAAA,UAAU,IAAI,KAAd;AACAL,MAAAA,KAAK,IAAI,KAAT;AACD;AACF;AACF;;AAEDY,MAAM,CAACC,OAAP,GAAiBf,aAAjB","sourcesContent":["'use strict'\r\n\r\nvar splice = require('../constant/splice.js')\r\n\r\n// causes a stack overflow in V8 when trying to insert 100k items for instance.\r\n\r\nfunction chunkedSplice(list, start, remove, items) {\r\n  var end = list.length\r\n  var chunkStart = 0\r\n  var parameters // Make start between zero and `end` (included).\r\n\r\n  if (start < 0) {\r\n    start = -start > end ? 0 : end + start\r\n  } else {\r\n    start = start > end ? end : start\r\n  }\r\n\r\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\r\n\r\n  if (items.length < 10000) {\r\n    parameters = Array.from(items)\r\n    parameters.unshift(start, remove)\r\n    splice.apply(list, parameters)\r\n  } else {\r\n    // Delete `remove` items starting from `start`\r\n    if (remove) splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\r\n\r\n    while (chunkStart < items.length) {\r\n      parameters = items.slice(chunkStart, chunkStart + 10000)\r\n      parameters.unshift(start, 0)\r\n      splice.apply(list, parameters)\r\n      chunkStart += 10000\r\n      start += 10000\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = chunkedSplice\r\n"]},"metadata":{},"sourceType":"script"}