{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ghdus\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\team-project\\\\nlp-project-team2\\\\frontend\\\\src\\\\UserLogin\\\\RegisterForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\n/*\r\nconst Signup = () =>{\r\n  const [id, setId] = useState('');\r\n  const [nic, setNic] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [password2, setPassword2] = useState('');\r\n  const [passwordError, setPasswordError] = useState(false); \r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== password2){\r\n        return setPasswordError(true);\r\n    }\r\n\r\n    console.log({\r\n      id,\r\n      nickname,\r\n      password,\r\n      password2\r\n    });\r\n  };\r\n};\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegisterForm({\n  onSubmit\n}) {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const password2Ref = useRef();\n\n  const submitForm = e => {\n    e.preventDefault();\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n    const formData = {\n      email,\n      password\n    };\n    onSubmit(formData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"\\uC774\\uBA54\\uC77C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          ref: emailRef,\n          id: \"email\",\n          type: \"email\",\n          name: \"email\",\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          ref: passwordRef,\n          id: \"password\",\n          type: \"password\",\n          name: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitForm,\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterForm, \"3idSQDo8vb/jy6WjNWML4/G7BbU=\");\n\n_c = RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["C:/Users/ghdus/OneDrive/바탕 화면/team-project/nlp-project-team2/frontend/src/UserLogin/RegisterForm.jsx"],"names":["React","useRef","useState","RegisterForm","onSubmit","emailRef","passwordRef","password2Ref","submitForm","e","preventDefault","email","current","value","password","formData"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AAAA;;AACjD,QAAMC,QAAQ,GAAGJ,MAAM,EAAvB;AACA,QAAMK,WAAW,GAAGL,MAAM,EAA1B;AAEA,QAAMM,YAAY,GAAGN,MAAM,EAA3B;;AAEA,QAAMO,UAAU,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,KAAK,GAAGN,QAAQ,CAACO,OAAT,CAAiBC,KAA/B;AACA,UAAMC,QAAQ,GAAGR,WAAW,CAACM,OAAZ,CAAoBC,KAArC;AAGA,UAAME,QAAQ,GAAG;AACfJ,MAAAA,KADe;AAEfG,MAAAA;AAFe,KAAjB;AAKAV,IAAAA,QAAQ,CAACW,QAAD,CAAR;AACD,GAbD;;AAeA,sBACE;AAAA,2BACE;AAAA,8BACE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAEE,UAAA,QAAQ,MAFV;AAGE,UAAA,GAAG,EAAEV,QAHP;AAIE,UAAA,EAAE,EAAC,OAJL;AAKE,UAAA,IAAI,EAAC,OALP;AAME,UAAA,IAAI,EAAC,OANP;AAOE,UAAA,YAAY,EAAC;AAPf;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAeE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,QAAQ,MADV;AAEE,UAAA,GAAG,EAAEC,WAFP;AAGE,UAAA,EAAE,EAAC,UAHL;AAIE,UAAA,IAAI,EAAC,UAJP;AAKE,UAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,eA8BE;AAAQ,QAAA,OAAO,EAAEE,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA9BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD;;GAzDuBL,Y;;KAAAA,Y","sourcesContent":["import React, { useRef, useState } from \"react\";\r\n\r\n/*\r\nconst Signup = () =>{\r\n  const [id, setId] = useState('');\r\n  const [nic, setNic] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [password2, setPassword2] = useState('');\r\n  const [passwordError, setPasswordError] = useState(false); \r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== password2){\r\n        return setPasswordError(true);\r\n    }\r\n\r\n    console.log({\r\n      id,\r\n      nickname,\r\n      password,\r\n      password2\r\n    });\r\n  };\r\n};\r\n */\r\n\r\nexport default function RegisterForm({ onSubmit }) {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  \r\n  const password2Ref = useRef();\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    const email = emailRef.current.value;\r\n    const password = passwordRef.current.value;\r\n    \r\n\r\n    const formData = {\r\n      email,\r\n      password,\r\n    };\r\n\r\n    onSubmit(formData);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n        <fieldset>\r\n          <label htmlFor=\"email\">이메일</label>\r\n          <input\r\n            \r\n            required\r\n            ref={emailRef}\r\n            id=\"email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            autoComplete=\"off\"\r\n          />\r\n        </fieldset>\r\n        \r\n        \r\n        <fieldset>\r\n          <label htmlFor=\"password\">비밀번호</label>\r\n          <input\r\n            required\r\n            ref={passwordRef}\r\n            id=\"password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n          />\r\n        </fieldset>\r\n\r\n        \r\n\r\n        \r\n\r\n        <button onClick={submitForm}>회원가입</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}