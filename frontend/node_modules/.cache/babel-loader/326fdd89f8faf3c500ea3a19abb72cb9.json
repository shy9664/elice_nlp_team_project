{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nimport { invariant } from '@react-dnd/invariant';\nimport { addSource as _addSource, addTarget as _addTarget, removeSource as _removeSource, removeTarget as _removeTarget } from '../actions/registry';\nimport { getNextUniqueId } from '../utils/getNextUniqueId';\nimport { HandlerRole } from '../interfaces';\nimport { validateSourceContract, validateTargetContract, validateType } from '../contracts';\nimport { asap } from '@react-dnd/asap';\n\nfunction getNextHandlerId(role) {\n  var id = getNextUniqueId().toString();\n\n  switch (role) {\n    case HandlerRole.SOURCE:\n      return \"S\".concat(id);\n\n    case HandlerRole.TARGET:\n      return \"T\".concat(id);\n\n    default:\n      throw new Error(\"Unknown Handler Role: \".concat(role));\n  }\n}\n\nfunction parseRoleFromHandlerId(handlerId) {\n  switch (handlerId[0]) {\n    case 'S':\n      return HandlerRole.SOURCE;\n\n    case 'T':\n      return HandlerRole.TARGET;\n\n    default:\n      invariant(false, \"Cannot parse handler ID: \".concat(handlerId));\n  }\n}\n\nfunction mapContainsValue(map, searchValue) {\n  var entries = map.entries();\n  var isDone = false;\n\n  do {\n    var _entries$next = entries.next(),\n        done = _entries$next.done,\n        _entries$next$value = _slicedToArray(_entries$next.value, 2),\n        value = _entries$next$value[1];\n\n    if (value === searchValue) {\n      return true;\n    }\n\n    isDone = !!done;\n  } while (!isDone);\n\n  return false;\n}\n\nexport var HandlerRegistryImpl = /*#__PURE__*/function () {\n  function HandlerRegistryImpl(store) {\n    _classCallCheck(this, HandlerRegistryImpl);\n\n    _defineProperty(this, \"types\", new Map());\n\n    _defineProperty(this, \"dragSources\", new Map());\n\n    _defineProperty(this, \"dropTargets\", new Map());\n\n    _defineProperty(this, \"pinnedSourceId\", null);\n\n    _defineProperty(this, \"pinnedSource\", null);\n\n    _defineProperty(this, \"store\", void 0);\n\n    this.store = store;\n  }\n\n  _createClass(HandlerRegistryImpl, [{\n    key: \"addSource\",\n    value: function addSource(type, source) {\n      validateType(type);\n      validateSourceContract(source);\n      var sourceId = this.addHandler(HandlerRole.SOURCE, type, source);\n      this.store.dispatch(_addSource(sourceId));\n      return sourceId;\n    }\n  }, {\n    key: \"addTarget\",\n    value: function addTarget(type, target) {\n      validateType(type, true);\n      validateTargetContract(target);\n      var targetId = this.addHandler(HandlerRole.TARGET, type, target);\n      this.store.dispatch(_addTarget(targetId));\n      return targetId;\n    }\n  }, {\n    key: \"containsHandler\",\n    value: function containsHandler(handler) {\n      return mapContainsValue(this.dragSources, handler) || mapContainsValue(this.dropTargets, handler);\n    }\n  }, {\n    key: \"getSource\",\n    value: function getSource(sourceId) {\n      var includePinned = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      invariant(this.isSourceId(sourceId), 'Expected a valid source ID.');\n      var isPinned = includePinned && sourceId === this.pinnedSourceId;\n      var source = isPinned ? this.pinnedSource : this.dragSources.get(sourceId);\n      return source;\n    }\n  }, {\n    key: \"getTarget\",\n    value: function getTarget(targetId) {\n      invariant(this.isTargetId(targetId), 'Expected a valid target ID.');\n      return this.dropTargets.get(targetId);\n    }\n  }, {\n    key: \"getSourceType\",\n    value: function getSourceType(sourceId) {\n      invariant(this.isSourceId(sourceId), 'Expected a valid source ID.');\n      return this.types.get(sourceId);\n    }\n  }, {\n    key: \"getTargetType\",\n    value: function getTargetType(targetId) {\n      invariant(this.isTargetId(targetId), 'Expected a valid target ID.');\n      return this.types.get(targetId);\n    }\n  }, {\n    key: \"isSourceId\",\n    value: function isSourceId(handlerId) {\n      var role = parseRoleFromHandlerId(handlerId);\n      return role === HandlerRole.SOURCE;\n    }\n  }, {\n    key: \"isTargetId\",\n    value: function isTargetId(handlerId) {\n      var role = parseRoleFromHandlerId(handlerId);\n      return role === HandlerRole.TARGET;\n    }\n  }, {\n    key: \"removeSource\",\n    value: function removeSource(sourceId) {\n      var _this = this;\n\n      invariant(this.getSource(sourceId), 'Expected an existing source.');\n      this.store.dispatch(_removeSource(sourceId));\n      asap(function () {\n        _this.dragSources.delete(sourceId);\n\n        _this.types.delete(sourceId);\n      });\n    }\n  }, {\n    key: \"removeTarget\",\n    value: function removeTarget(targetId) {\n      invariant(this.getTarget(targetId), 'Expected an existing target.');\n      this.store.dispatch(_removeTarget(targetId));\n      this.dropTargets.delete(targetId);\n      this.types.delete(targetId);\n    }\n  }, {\n    key: \"pinSource\",\n    value: function pinSource(sourceId) {\n      var source = this.getSource(sourceId);\n      invariant(source, 'Expected an existing source.');\n      this.pinnedSourceId = sourceId;\n      this.pinnedSource = source;\n    }\n  }, {\n    key: \"unpinSource\",\n    value: function unpinSource() {\n      invariant(this.pinnedSource, 'No source is pinned at the time.');\n      this.pinnedSourceId = null;\n      this.pinnedSource = null;\n    }\n  }, {\n    key: \"addHandler\",\n    value: function addHandler(role, type, handler) {\n      var id = getNextHandlerId(role);\n      this.types.set(id, type);\n\n      if (role === HandlerRole.SOURCE) {\n        this.dragSources.set(id, handler);\n      } else if (role === HandlerRole.TARGET) {\n        this.dropTargets.set(id, handler);\n      }\n\n      return id;\n    }\n  }]);\n\n  return HandlerRegistryImpl;\n}();","map":{"version":3,"sources":["C:/Users/ghdus/OneDrive/바탕 화면/team-project/nlp-project-team2/frontend/node_modules/dnd-core/dist/esm/classes/HandlerRegistryImpl.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_defineProperty","obj","value","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","o","minLen","_arrayLikeToArray","n","toString","call","slice","constructor","name","Array","from","test","len","arr2","_i","Symbol","iterator","_arr","_n","_d","_s","_e","next","done","push","err","isArray","invariant","addSource","_addSource","addTarget","_addTarget","removeSource","_removeSource","removeTarget","_removeTarget","getNextUniqueId","HandlerRole","validateSourceContract","validateTargetContract","validateType","asap","getNextHandlerId","role","id","SOURCE","concat","TARGET","Error","parseRoleFromHandlerId","handlerId","mapContainsValue","map","searchValue","entries","isDone","_entries$next","_entries$next$value","HandlerRegistryImpl","store","Map","type","source","sourceId","addHandler","dispatch","targetId","containsHandler","handler","dragSources","dropTargets","getSource","includePinned","arguments","undefined","isSourceId","isPinned","pinnedSourceId","pinnedSource","get","getTarget","isTargetId","getSourceType","types","getTargetType","_this","delete","pinSource","unpinSource","set"],"mappings":"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","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\r\n\r\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\r\n\r\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\r\n\r\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\r\n\r\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\r\n\r\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\r\n\r\nimport { invariant } from '@react-dnd/invariant';\r\nimport { addSource as _addSource, addTarget as _addTarget, removeSource as _removeSource, removeTarget as _removeTarget } from '../actions/registry';\r\nimport { getNextUniqueId } from '../utils/getNextUniqueId';\r\nimport { HandlerRole } from '../interfaces';\r\nimport { validateSourceContract, validateTargetContract, validateType } from '../contracts';\r\nimport { asap } from '@react-dnd/asap';\r\n\r\nfunction getNextHandlerId(role) {\r\n  var id = getNextUniqueId().toString();\r\n\r\n  switch (role) {\r\n    case HandlerRole.SOURCE:\r\n      return \"S\".concat(id);\r\n\r\n    case HandlerRole.TARGET:\r\n      return \"T\".concat(id);\r\n\r\n    default:\r\n      throw new Error(\"Unknown Handler Role: \".concat(role));\r\n  }\r\n}\r\n\r\nfunction parseRoleFromHandlerId(handlerId) {\r\n  switch (handlerId[0]) {\r\n    case 'S':\r\n      return HandlerRole.SOURCE;\r\n\r\n    case 'T':\r\n      return HandlerRole.TARGET;\r\n\r\n    default:\r\n      invariant(false, \"Cannot parse handler ID: \".concat(handlerId));\r\n  }\r\n}\r\n\r\nfunction mapContainsValue(map, searchValue) {\r\n  var entries = map.entries();\r\n  var isDone = false;\r\n\r\n  do {\r\n    var _entries$next = entries.next(),\r\n        done = _entries$next.done,\r\n        _entries$next$value = _slicedToArray(_entries$next.value, 2),\r\n        value = _entries$next$value[1];\r\n\r\n    if (value === searchValue) {\r\n      return true;\r\n    }\r\n\r\n    isDone = !!done;\r\n  } while (!isDone);\r\n\r\n  return false;\r\n}\r\n\r\nexport var HandlerRegistryImpl = /*#__PURE__*/function () {\r\n  function HandlerRegistryImpl(store) {\r\n    _classCallCheck(this, HandlerRegistryImpl);\r\n\r\n    _defineProperty(this, \"types\", new Map());\r\n\r\n    _defineProperty(this, \"dragSources\", new Map());\r\n\r\n    _defineProperty(this, \"dropTargets\", new Map());\r\n\r\n    _defineProperty(this, \"pinnedSourceId\", null);\r\n\r\n    _defineProperty(this, \"pinnedSource\", null);\r\n\r\n    _defineProperty(this, \"store\", void 0);\r\n\r\n    this.store = store;\r\n  }\r\n\r\n  _createClass(HandlerRegistryImpl, [{\r\n    key: \"addSource\",\r\n    value: function addSource(type, source) {\r\n      validateType(type);\r\n      validateSourceContract(source);\r\n      var sourceId = this.addHandler(HandlerRole.SOURCE, type, source);\r\n      this.store.dispatch(_addSource(sourceId));\r\n      return sourceId;\r\n    }\r\n  }, {\r\n    key: \"addTarget\",\r\n    value: function addTarget(type, target) {\r\n      validateType(type, true);\r\n      validateTargetContract(target);\r\n      var targetId = this.addHandler(HandlerRole.TARGET, type, target);\r\n      this.store.dispatch(_addTarget(targetId));\r\n      return targetId;\r\n    }\r\n  }, {\r\n    key: \"containsHandler\",\r\n    value: function containsHandler(handler) {\r\n      return mapContainsValue(this.dragSources, handler) || mapContainsValue(this.dropTargets, handler);\r\n    }\r\n  }, {\r\n    key: \"getSource\",\r\n    value: function getSource(sourceId) {\r\n      var includePinned = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n      invariant(this.isSourceId(sourceId), 'Expected a valid source ID.');\r\n      var isPinned = includePinned && sourceId === this.pinnedSourceId;\r\n      var source = isPinned ? this.pinnedSource : this.dragSources.get(sourceId);\r\n      return source;\r\n    }\r\n  }, {\r\n    key: \"getTarget\",\r\n    value: function getTarget(targetId) {\r\n      invariant(this.isTargetId(targetId), 'Expected a valid target ID.');\r\n      return this.dropTargets.get(targetId);\r\n    }\r\n  }, {\r\n    key: \"getSourceType\",\r\n    value: function getSourceType(sourceId) {\r\n      invariant(this.isSourceId(sourceId), 'Expected a valid source ID.');\r\n      return this.types.get(sourceId);\r\n    }\r\n  }, {\r\n    key: \"getTargetType\",\r\n    value: function getTargetType(targetId) {\r\n      invariant(this.isTargetId(targetId), 'Expected a valid target ID.');\r\n      return this.types.get(targetId);\r\n    }\r\n  }, {\r\n    key: \"isSourceId\",\r\n    value: function isSourceId(handlerId) {\r\n      var role = parseRoleFromHandlerId(handlerId);\r\n      return role === HandlerRole.SOURCE;\r\n    }\r\n  }, {\r\n    key: \"isTargetId\",\r\n    value: function isTargetId(handlerId) {\r\n      var role = parseRoleFromHandlerId(handlerId);\r\n      return role === HandlerRole.TARGET;\r\n    }\r\n  }, {\r\n    key: \"removeSource\",\r\n    value: function removeSource(sourceId) {\r\n      var _this = this;\r\n\r\n      invariant(this.getSource(sourceId), 'Expected an existing source.');\r\n      this.store.dispatch(_removeSource(sourceId));\r\n      asap(function () {\r\n        _this.dragSources.delete(sourceId);\r\n\r\n        _this.types.delete(sourceId);\r\n      });\r\n    }\r\n  }, {\r\n    key: \"removeTarget\",\r\n    value: function removeTarget(targetId) {\r\n      invariant(this.getTarget(targetId), 'Expected an existing target.');\r\n      this.store.dispatch(_removeTarget(targetId));\r\n      this.dropTargets.delete(targetId);\r\n      this.types.delete(targetId);\r\n    }\r\n  }, {\r\n    key: \"pinSource\",\r\n    value: function pinSource(sourceId) {\r\n      var source = this.getSource(sourceId);\r\n      invariant(source, 'Expected an existing source.');\r\n      this.pinnedSourceId = sourceId;\r\n      this.pinnedSource = source;\r\n    }\r\n  }, {\r\n    key: \"unpinSource\",\r\n    value: function unpinSource() {\r\n      invariant(this.pinnedSource, 'No source is pinned at the time.');\r\n      this.pinnedSourceId = null;\r\n      this.pinnedSource = null;\r\n    }\r\n  }, {\r\n    key: \"addHandler\",\r\n    value: function addHandler(role, type, handler) {\r\n      var id = getNextHandlerId(role);\r\n      this.types.set(id, type);\r\n\r\n      if (role === HandlerRole.SOURCE) {\r\n        this.dragSources.set(id, handler);\r\n      } else if (role === HandlerRole.TARGET) {\r\n        this.dropTargets.set(id, handler);\r\n      }\r\n\r\n      return id;\r\n    }\r\n  }]);\r\n\r\n  return HandlerRegistryImpl;\r\n}();"]},"metadata":{},"sourceType":"module"}