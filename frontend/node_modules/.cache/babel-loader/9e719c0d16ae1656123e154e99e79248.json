{"ast":null,"code":"import React from 'react';\nimport { KEY_ALIGN, setAlign } from '@udecode/plate-alignment';\nimport { usePlateEditorState, isCollapsed, someNode, getPreventDefaultHandler } from '@udecode/plate-core';\nimport { ToolbarButton } from '@udecode/plate-toolbar';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nconst AlignToolbarButton = ({\n  value,\n  pluginKey = KEY_ALIGN,\n  ...props\n}) => {\n  const editor = usePlateEditorState();\n  return /*#__PURE__*/React.createElement(ToolbarButton, _extends({\n    active: isCollapsed(editor === null || editor === void 0 ? void 0 : editor.selection) && someNode(editor, {\n      match: {\n        [pluginKey]: value\n      }\n    }),\n    onMouseDown: editor ? getPreventDefaultHandler(setAlign, editor, {\n      value,\n      key: pluginKey\n    }) : undefined\n  }, props));\n};\n\nexport { AlignToolbarButton };","map":{"version":3,"sources":["../src/AlignToolbarButton/AlignToolbarButton.tsx"],"names":["AlignToolbarButton","pluginKey","props","editor","usePlateEditorState","isCollapsed","someNode","match","value","getPreventDefaultHandler","key","undefined"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;MAeaA,kBAAkB,GAAG,CAAC;AAAA,EAAA,KAAA;AAEjCC,EAAAA,SAAS,GAFwB,SAAA;AAGjC,KAAGC;AAH8B,CAAD,KAIH;AAC7B,QAAMC,MAAM,GAAGC,mBAAf,EAAA;AAEA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA,QAAA,CAAA;AACE,IAAA,MAAM,EACJC,WAAW,CAACF,MAAD,KAAA,IAACA,IAAAA,MAAD,KAAA,KAAA,CAACA,GAAD,KAAA,CAACA,GAAAA,MAAM,CAAlBE,SAAW,CAAXA,IACAC,QAAQ,CAAA,MAAA,EAAU;AAAEC,MAAAA,KAAK,EAAE;AAAE,SAAA,SAAA,GAAaC;AAAf;AAAT,KAAV,CAHZ;AAKE,IAAA,WAAW,EACTL,MAAM,GACFM,wBAAwB,CAAA,QAAA,EAAA,MAAA,EAAmB;AAAA,MAAA,KAAA;AAEzCC,MAAAA,GAAG,EAAET;AAFoC,KAAnB,CADtB,GAKFU;AAXR,GAAA,EADF,KACE,CAAA,CADF;AAiBD,C","sourcesContent":["import React from 'react';\nimport { Alignment, KEY_ALIGN, setAlign } from '@udecode/plate-alignment';\nimport {\n  getPreventDefaultHandler,\n  isCollapsed,\n  someNode,\n  usePlateEditorState,\n} from '@udecode/plate-core';\nimport { ToolbarButton, ToolbarButtonProps } from '@udecode/plate-toolbar';\n\nexport interface AlignToolbarButtonProps extends ToolbarButtonProps {\n  value: Alignment;\n  pluginKey?: string;\n}\n\nexport const AlignToolbarButton = ({\n  value,\n  pluginKey = KEY_ALIGN,\n  ...props\n}: AlignToolbarButtonProps) => {\n  const editor = usePlateEditorState()!;\n\n  return (\n    <ToolbarButton\n      active={\n        isCollapsed(editor?.selection) &&\n        someNode(editor!, { match: { [pluginKey]: value } })\n      }\n      onMouseDown={\n        editor\n          ? getPreventDefaultHandler(setAlign, editor, {\n              value,\n              key: pluginKey,\n            })\n          : undefined\n      }\n      {...props}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}