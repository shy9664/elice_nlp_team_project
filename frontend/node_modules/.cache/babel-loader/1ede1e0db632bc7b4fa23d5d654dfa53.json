{"ast":null,"code":"import { isCollapsed, someNode, setNodes, createPluginFactory } from '@udecode/plate-core';\n\nfunction unwrapExports(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar lib = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  /**\n   * Constants.\n   */\n\n  var IS_MAC = typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n  var MODIFIERS = {\n    alt: 'altKey',\n    control: 'ctrlKey',\n    meta: 'metaKey',\n    shift: 'shiftKey'\n  };\n  var ALIASES = {\n    add: '+',\n    break: 'pause',\n    cmd: 'meta',\n    command: 'meta',\n    ctl: 'control',\n    ctrl: 'control',\n    del: 'delete',\n    down: 'arrowdown',\n    esc: 'escape',\n    ins: 'insert',\n    left: 'arrowleft',\n    mod: IS_MAC ? 'meta' : 'control',\n    opt: 'alt',\n    option: 'alt',\n    return: 'enter',\n    right: 'arrowright',\n    space: ' ',\n    spacebar: ' ',\n    up: 'arrowup',\n    win: 'meta',\n    windows: 'meta'\n  };\n  var CODES = {\n    backspace: 8,\n    tab: 9,\n    enter: 13,\n    shift: 16,\n    control: 17,\n    alt: 18,\n    pause: 19,\n    capslock: 20,\n    escape: 27,\n    ' ': 32,\n    pageup: 33,\n    pagedown: 34,\n    end: 35,\n    home: 36,\n    arrowleft: 37,\n    arrowup: 38,\n    arrowright: 39,\n    arrowdown: 40,\n    insert: 45,\n    delete: 46,\n    meta: 91,\n    numlock: 144,\n    scrolllock: 145,\n    ';': 186,\n    '=': 187,\n    ',': 188,\n    '-': 189,\n    '.': 190,\n    '/': 191,\n    '`': 192,\n    '[': 219,\n    '\\\\': 220,\n    ']': 221,\n    '\\'': 222\n  };\n\n  for (var f = 1; f < 20; f++) {\n    CODES['f' + f] = 111 + f;\n  }\n  /**\n   * Is hotkey?\n   */\n\n\n  function isHotkey(hotkey, options, event) {\n    if (options && !('byKey' in options)) {\n      event = options;\n      options = null;\n    }\n\n    if (!Array.isArray(hotkey)) {\n      hotkey = [hotkey];\n    }\n\n    var array = hotkey.map(function (string) {\n      return parseHotkey(string, options);\n    });\n\n    var check = function check(e) {\n      return array.some(function (object) {\n        return compareHotkey(object, e);\n      });\n    };\n\n    var ret = event == null ? check : check(event);\n    return ret;\n  }\n\n  function isCodeHotkey(hotkey, event) {\n    return isHotkey(hotkey, event);\n  }\n\n  function isKeyHotkey(hotkey, event) {\n    return isHotkey(hotkey, {\n      byKey: true\n    }, event);\n  }\n  /**\n   * Parse.\n   */\n\n\n  function parseHotkey(hotkey, options) {\n    var byKey = options && options.byKey;\n    var ret = {}; // Special case to handle the `+` key since we use it as a separator.\n\n    hotkey = hotkey.replace('++', '+add');\n    var values = hotkey.split('+');\n    var length = values.length; // Ensure that all the modifiers are set to false unless the hotkey has them.\n\n    for (var k in MODIFIERS) {\n      ret[MODIFIERS[k]] = false;\n    }\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var value = _step.value;\n        var optional = value.endsWith('?') && value.length > 1;\n\n        if (optional) {\n          value = value.slice(0, -1);\n        }\n\n        var name = toKeyName(value);\n        var modifier = MODIFIERS[name];\n\n        if (length === 1 || !modifier) {\n          if (byKey) {\n            ret.key = name;\n          } else {\n            ret.which = toKeyCode(value);\n          }\n        }\n\n        if (modifier) {\n          ret[modifier] = optional ? null : true;\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return ret;\n  }\n  /**\n   * Compare.\n   */\n\n\n  function compareHotkey(object, event) {\n    for (var key in object) {\n      var expected = object[key];\n      var actual = void 0;\n\n      if (expected == null) {\n        continue;\n      }\n\n      if (key === 'key' && event.key != null) {\n        actual = event.key.toLowerCase();\n      } else if (key === 'which') {\n        actual = expected === 91 && event.which === 93 ? 91 : event.which;\n      } else {\n        actual = event[key];\n      }\n\n      if (actual == null && expected === false) {\n        continue;\n      }\n\n      if (actual !== expected) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Utils.\n   */\n\n\n  function toKeyCode(name) {\n    name = toKeyName(name);\n    var code = CODES[name] || name.toUpperCase().charCodeAt(0);\n    return code;\n  }\n\n  function toKeyName(name) {\n    name = name.toLowerCase();\n    name = ALIASES[name] || name;\n    return name;\n  }\n  /**\n   * Export.\n   */\n\n\n  exports.default = isHotkey;\n  exports.isHotkey = isHotkey;\n  exports.isCodeHotkey = isCodeHotkey;\n  exports.isKeyHotkey = isKeyHotkey;\n  exports.parseHotkey = parseHotkey;\n  exports.compareHotkey = compareHotkey;\n  exports.toKeyCode = toKeyCode;\n  exports.toKeyName = toKeyName;\n});\nvar isHotkey = unwrapExports(lib);\nlib.isHotkey;\nlib.isCodeHotkey;\nlib.isKeyHotkey;\nlib.parseHotkey;\nlib.compareHotkey;\nlib.toKeyCode;\nlib.toKeyName;\nconst SIMULATE_BACKSPACE = {\n  key: '',\n  which: 8\n};\n\nconst onKeyDownResetNode = (editor, {\n  options: {\n    rules\n  }\n}) => event => {\n  let reset;\n\n  if (editor.selection && isCollapsed(editor.selection)) {\n    rules.forEach(({\n      types,\n      defaultType,\n      hotkey,\n      predicate,\n      onReset\n    }) => {\n      if (hotkey && isHotkey(hotkey, event)) {\n        if (predicate(editor) && someNode(editor, {\n          match: {\n            type: types\n          }\n        })) {\n          var _event$preventDefault;\n\n          (_event$preventDefault = event.preventDefault) === null || _event$preventDefault === void 0 ? void 0 : _event$preventDefault.call(event);\n          setNodes(editor, {\n            type: defaultType\n          });\n          onReset === null || onReset === void 0 ? void 0 : onReset(editor);\n          reset = true;\n        }\n      }\n    });\n  }\n\n  return reset;\n};\n\nconst KEY_RESET_NODE = 'resetNode';\n/**\n * Enables support for resetting block type from rules.\n */\n\nconst createResetNodePlugin = createPluginFactory({\n  key: KEY_RESET_NODE,\n  handlers: {\n    onKeyDown: onKeyDownResetNode\n  },\n  options: {\n    rules: []\n  }\n});\nexport { KEY_RESET_NODE, SIMULATE_BACKSPACE, createResetNodePlugin, onKeyDownResetNode };","map":{"version":3,"sources":["../../../../node_modules/is-hotkey/lib/index.js","../src/onKeyDownResetNode.ts","../src/createResetNodePlugin.ts"],"names":["SIMULATE_BACKSPACE","key","which","onKeyDownResetNode","options","rules","event","editor","isCollapsed","onReset","hotkey","isHotkey","predicate","someNode","match","type","types","setNodes","defaultType","reset","KEY_RESET_NODE","createResetNodePlugin","createPluginFactory","handlers","onKeyDown"],"mappings":";;;;;;;;;;;;;AAEA,EAAA,MAAM,CAAC,cAAP,CAAsB,OAAtB,EAA+B,YAA/B,EAA6C;AAC3C,IAAA,KAAK,EAAE;AADoC,GAA7C;AAIA;AACA;AACA;;AAEA,MAAI,MAAM,GAAG,OAAO,MAAP,IAAiB,WAAjB,IAAgC,uBAAuB,IAAvB,CAA4B,MAAM,CAAC,SAAP,CAAiB,QAA7C,CAA7C;AAEA,MAAI,SAAS,GAAG;AACd,IAAA,GAAG,EAAE,QADS;AAEd,IAAA,OAAO,EAAE,SAFK;AAGd,IAAA,IAAI,EAAE,SAHQ;AAId,IAAA,KAAK,EAAE;AAJO,GAAhB;AAOA,MAAI,OAAO,GAAG;AACZ,IAAA,GAAG,EAAE,GADO;AAEZ,IAAA,KAAK,EAAE,OAFK;AAGZ,IAAA,GAAG,EAAE,MAHO;AAIZ,IAAA,OAAO,EAAE,MAJG;AAKZ,IAAA,GAAG,EAAE,SALO;AAMZ,IAAA,IAAI,EAAE,SANM;AAOZ,IAAA,GAAG,EAAE,QAPO;AAQZ,IAAA,IAAI,EAAE,WARM;AASZ,IAAA,GAAG,EAAE,QATO;AAUZ,IAAA,GAAG,EAAE,QAVO;AAWZ,IAAA,IAAI,EAAE,WAXM;AAYZ,IAAA,GAAG,EAAE,MAAM,GAAG,MAAH,GAAY,SAZX;AAaZ,IAAA,GAAG,EAAE,KAbO;AAcZ,IAAA,MAAM,EAAE,KAdI;AAeZ,IAAA,MAAM,EAAE,OAfI;AAgBZ,IAAA,KAAK,EAAE,YAhBK;AAiBZ,IAAA,KAAK,EAAE,GAjBK;AAkBZ,IAAA,QAAQ,EAAE,GAlBE;AAmBZ,IAAA,EAAE,EAAE,SAnBQ;AAoBZ,IAAA,GAAG,EAAE,MApBO;AAqBZ,IAAA,OAAO,EAAE;AArBG,GAAd;AAwBA,MAAI,KAAK,GAAG;AACV,IAAA,SAAS,EAAE,CADD;AAEV,IAAA,GAAG,EAAE,CAFK;AAGV,IAAA,KAAK,EAAE,EAHG;AAIV,IAAA,KAAK,EAAE,EAJG;AAKV,IAAA,OAAO,EAAE,EALC;AAMV,IAAA,GAAG,EAAE,EANK;AAOV,IAAA,KAAK,EAAE,EAPG;AAQV,IAAA,QAAQ,EAAE,EARA;AASV,IAAA,MAAM,EAAE,EATE;AAUV,SAAK,EAVK;AAWV,IAAA,MAAM,EAAE,EAXE;AAYV,IAAA,QAAQ,EAAE,EAZA;AAaV,IAAA,GAAG,EAAE,EAbK;AAcV,IAAA,IAAI,EAAE,EAdI;AAeV,IAAA,SAAS,EAAE,EAfD;AAgBV,IAAA,OAAO,EAAE,EAhBC;AAiBV,IAAA,UAAU,EAAE,EAjBF;AAkBV,IAAA,SAAS,EAAE,EAlBD;AAmBV,IAAA,MAAM,EAAE,EAnBE;AAoBV,IAAA,MAAM,EAAE,EApBE;AAqBV,IAAA,IAAI,EAAE,EArBI;AAsBV,IAAA,OAAO,EAAE,GAtBC;AAuBV,IAAA,UAAU,EAAE,GAvBF;AAwBV,SAAK,GAxBK;AAyBV,SAAK,GAzBK;AA0BV,SAAK,GA1BK;AA2BV,SAAK,GA3BK;AA4BV,SAAK,GA5BK;AA6BV,SAAK,GA7BK;AA8BV,SAAK,GA9BK;AA+BV,SAAK,GA/BK;AAgCV,UAAM,GAhCI;AAiCV,SAAK,GAjCK;AAkCV,UAAM;AAlCI,GAAZ;;AAqCA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,EAApB,EAAwB,CAAC,EAAzB,EAA6B;AAC3B,IAAA,KAAK,CAAC,MAAM,CAAP,CAAL,GAAiB,MAAM,CAAvB;AACD;AAED;AACA;AACA;;;AAEA,WAAS,QAAT,CAAkB,MAAlB,EAA0B,OAA1B,EAAmC,KAAnC,EAA0C;AACxC,QAAI,OAAO,IAAI,EAAE,WAAW,OAAb,CAAf,EAAsC;AACpC,MAAA,KAAK,GAAG,OAAR;AACA,MAAA,OAAO,GAAG,IAAV;AACD;;AAED,QAAI,CAAC,KAAK,CAAC,OAAN,CAAc,MAAd,CAAL,EAA4B;AAC1B,MAAA,MAAM,GAAG,CAAC,MAAD,CAAT;AACD;;AAED,QAAI,KAAK,GAAG,MAAM,CAAC,GAAP,CAAW,UAAU,MAAV,EAAkB;AACvC,aAAO,WAAW,CAAC,MAAD,EAAS,OAAT,CAAlB;AACD,KAFW,CAAZ;;AAGA,QAAI,KAAK,GAAG,SAAS,KAAT,CAAe,CAAf,EAAkB;AAC5B,aAAO,KAAK,CAAC,IAAN,CAAW,UAAU,MAAV,EAAkB;AAClC,eAAO,aAAa,CAAC,MAAD,EAAS,CAAT,CAApB;AACD,OAFM,CAAP;AAGD,KAJD;;AAKA,QAAI,GAAG,GAAG,KAAK,IAAI,IAAT,GAAgB,KAAhB,GAAwB,KAAK,CAAC,KAAD,CAAvC;AACA,WAAO,GAAP;AACD;;AAED,WAAS,YAAT,CAAsB,MAAtB,EAA8B,KAA9B,EAAqC;AACnC,WAAO,QAAQ,CAAC,MAAD,EAAS,KAAT,CAAf;AACD;;AAED,WAAS,WAAT,CAAqB,MAArB,EAA6B,KAA7B,EAAoC;AAClC,WAAO,QAAQ,CAAC,MAAD,EAAS;AAAE,MAAA,KAAK,EAAE;AAAT,KAAT,EAA0B,KAA1B,CAAf;AACD;AAED;AACA;AACA;;;AAEA,WAAS,WAAT,CAAqB,MAArB,EAA6B,OAA7B,EAAsC;AACpC,QAAI,KAAK,GAAG,OAAO,IAAI,OAAO,CAAC,KAA/B;AACA,QAAI,GAAG,GAAG,EAAV,CAFoC,CAItC;;AACE,IAAA,MAAM,GAAG,MAAM,CAAC,OAAP,CAAe,IAAf,EAAqB,MAArB,CAAT;AACA,QAAI,MAAM,GAAG,MAAM,CAAC,KAAP,CAAa,GAAb,CAAb;AACA,QAAI,MAAM,GAAG,MAAM,CAAC,MAApB,CAPoC,CAStC;;AAEE,SAAK,IAAI,CAAT,IAAc,SAAd,EAAyB;AACvB,MAAA,GAAG,CAAC,SAAS,CAAC,CAAD,CAAV,CAAH,GAAoB,KAApB;AACD;;AAED,QAAI,yBAAyB,GAAG,IAAhC;AACA,QAAI,iBAAiB,GAAG,KAAxB;AACA,QAAI,cAAc,GAAG,SAArB;;AAEA,QAAI;AACF,WAAK,IAAI,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,QAAR,CAAN,EAAhB,EAA2C,KAAhD,EAAuD,EAAE,yBAAyB,GAAG,CAAC,KAAK,GAAG,SAAS,CAAC,IAAV,EAAT,EAA2B,IAAzD,CAAvD,EAAuH,yBAAyB,GAAG,IAAnJ,EAAyJ;AACvJ,YAAI,KAAK,GAAG,KAAK,CAAC,KAAlB;AAEA,YAAI,QAAQ,GAAG,KAAK,CAAC,QAAN,CAAe,GAAf,KAAuB,KAAK,CAAC,MAAN,GAAe,CAArD;;AAEA,YAAI,QAAJ,EAAc;AACZ,UAAA,KAAK,GAAG,KAAK,CAAC,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAhB,CAAR;AACD;;AAED,YAAI,IAAI,GAAG,SAAS,CAAC,KAAD,CAApB;AACA,YAAI,QAAQ,GAAG,SAAS,CAAC,IAAD,CAAxB;;AAEA,YAAI,MAAM,KAAK,CAAX,IAAgB,CAAC,QAArB,EAA+B;AAC7B,cAAI,KAAJ,EAAW;AACT,YAAA,GAAG,CAAC,GAAJ,GAAU,IAAV;AACD,WAFD,MAEO;AACL,YAAA,GAAG,CAAC,KAAJ,GAAY,SAAS,CAAC,KAAD,CAArB;AACD;AACF;;AAED,YAAI,QAAJ,EAAc;AACZ,UAAA,GAAG,CAAC,QAAD,CAAH,GAAgB,QAAQ,GAAG,IAAH,GAAU,IAAlC;AACD;AACF;AACF,KAzBD,CAyBE,OAAO,GAAP,EAAY;AACZ,MAAA,iBAAiB,GAAG,IAApB;AACA,MAAA,cAAc,GAAG,GAAjB;AACD,KA5BD,SA4BU;AACR,UAAI;AACF,YAAI,CAAC,yBAAD,IAA8B,SAAS,CAAC,MAA5C,EAAoD;AAClD,UAAA,SAAS,CAAC,MAAV;AACD;AACF,OAJD,SAIU;AACR,YAAI,iBAAJ,EAAuB;AACrB,gBAAM,cAAN;AACD;AACF;AACF;;AAED,WAAO,GAAP;AACD;AAED;AACA;AACA;;;AAEA,WAAS,aAAT,CAAuB,MAAvB,EAA+B,KAA/B,EAAsC;AACpC,SAAK,IAAI,GAAT,IAAgB,MAAhB,EAAwB;AACtB,UAAI,QAAQ,GAAG,MAAM,CAAC,GAAD,CAArB;AACA,UAAI,MAAM,GAAG,KAAK,CAAlB;;AAEA,UAAI,QAAQ,IAAI,IAAhB,EAAsB;AACpB;AACD;;AAED,UAAI,GAAG,KAAK,KAAR,IAAiB,KAAK,CAAC,GAAN,IAAa,IAAlC,EAAwC;AACtC,QAAA,MAAM,GAAG,KAAK,CAAC,GAAN,CAAU,WAAV,EAAT;AACD,OAFD,MAEO,IAAI,GAAG,KAAK,OAAZ,EAAqB;AAC1B,QAAA,MAAM,GAAG,QAAQ,KAAK,EAAb,IAAmB,KAAK,CAAC,KAAN,KAAgB,EAAnC,GAAwC,EAAxC,GAA6C,KAAK,CAAC,KAA5D;AACD,OAFM,MAEA;AACL,QAAA,MAAM,GAAG,KAAK,CAAC,GAAD,CAAd;AACD;;AAED,UAAI,MAAM,IAAI,IAAV,IAAkB,QAAQ,KAAK,KAAnC,EAA0C;AACxC;AACD;;AAED,UAAI,MAAM,KAAK,QAAf,EAAyB;AACvB,eAAO,KAAP;AACD;AACF;;AAED,WAAO,IAAP;AACD;AAED;AACA;AACA;;;AAEA,WAAS,SAAT,CAAmB,IAAnB,EAAyB;AACvB,IAAA,IAAI,GAAG,SAAS,CAAC,IAAD,CAAhB;AACA,QAAI,IAAI,GAAG,KAAK,CAAC,IAAD,CAAL,IAAe,IAAI,CAAC,WAAL,GAAmB,UAAnB,CAA8B,CAA9B,CAA1B;AACA,WAAO,IAAP;AACD;;AAED,WAAS,SAAT,CAAmB,IAAnB,EAAyB;AACvB,IAAA,IAAI,GAAG,IAAI,CAAC,WAAL,EAAP;AACA,IAAA,IAAI,GAAG,OAAO,CAAC,IAAD,CAAP,IAAiB,IAAxB;AACA,WAAO,IAAP;AACD;AAED;AACA;AACA;;;AAEA,EAAA,OAAA,CAAA,OAAA,GAAkB,QAAlB;AACA,EAAA,OAAA,CAAA,QAAA,GAAmB,QAAnB;AACA,EAAA,OAAA,CAAA,YAAA,GAAuB,YAAvB;AACA,EAAA,OAAA,CAAA,WAAA,GAAsB,WAAtB;AACA,EAAA,OAAA,CAAA,WAAA,GAAsB,WAAtB;AACA,EAAA,OAAA,CAAA,aAAA,GAAwB,aAAxB;AACA,EAAA,OAAA,CAAA,SAAA,GAAoB,SAApB;AACA,EAAA,OAAA,CAAA,SAAA,GAAoB,SAApB;;;;;;;;;;MC1OaA,kBAAuB,GAAG;AACrCC,EAAAA,GAAG,EADkC,EAAA;AAErCC,EAAAA,KAAK,EAAE;AAF8B,C;;MAK1BC,kBAAwD,GAAG,CAAA,MAAA,EAEtE;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA;AAAF;AAAX,CAFsE,KAGlEC,KAAD,IAAW;AACd,MAAA,KAAA;;AAEA,MAAIC,MAAM,CAANA,SAAAA,IAAoBC,WAAW,CAACD,MAAM,CAA1C,SAAmC,CAAnC,EAAuD;AACrDF,IAAAA,KAAK,CAALA,OAAAA,CAAe,CAAC;AAAA,MAAA,KAAA;AAAA,MAAA,WAAA;AAAA,MAAA,MAAA;AAAA,MAAA,SAAA;AAAyCI,MAAAA;AAAzC,KAAD,KAAwD;AACrE,UAAIC,MAAM,IAAIC,QAAQ,CAAA,MAAA,EAAtB,KAAsB,CAAtB,EAA8C;AAC5C,YAAIC,SAAS,CAATA,MAAS,CAATA,IAAqBC,QAAQ,CAAA,MAAA,EAAS;AAAEC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEC;AAAR;AAAT,SAAT,CAAjC,EAAuE;AAAA,cAAA,qBAAA;;AACrE,WAAA,qBAAA,GAAA,KAAK,CAAL,cAAA,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAA,IAAA,CAAA,KAAA,CAAA;AAEAC,UAAAA,QAAQ,CAAA,MAAA,EAAmB;AAAEF,YAAAA,IAAI,EAAEG;AAAR,WAAnB,CAARD;AAEAR,UAAAA,OAAO,KAAPA,IAAAA,IAAAA,OAAO,KAAA,KAAPA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAO,CAAPA,MAAO,CAAPA;AAEAU,UAAAA,KAAK,GAALA,IAAAA;AACD;AACF;AAXHd,KAAAA;AAaD;;AAED,SAAA,KAAA;AACD,C;;MClCYe,cAAc,GAAG,W;AAE9B;AACA;AACA;;MACaC,qBAAqB,GAAGC,mBAAmB,CAAkB;AACxErB,EAAAA,GAAG,EADqE,cAAA;AAExEsB,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAErB;AADH,GAF8D;AAKxEC,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE;AADA;AAL+D,CAAlB,C","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * Constants.\n */\n\nvar IS_MAC = typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n\nvar MODIFIERS = {\n  alt: 'altKey',\n  control: 'ctrlKey',\n  meta: 'metaKey',\n  shift: 'shiftKey'\n};\n\nvar ALIASES = {\n  add: '+',\n  break: 'pause',\n  cmd: 'meta',\n  command: 'meta',\n  ctl: 'control',\n  ctrl: 'control',\n  del: 'delete',\n  down: 'arrowdown',\n  esc: 'escape',\n  ins: 'insert',\n  left: 'arrowleft',\n  mod: IS_MAC ? 'meta' : 'control',\n  opt: 'alt',\n  option: 'alt',\n  return: 'enter',\n  right: 'arrowright',\n  space: ' ',\n  spacebar: ' ',\n  up: 'arrowup',\n  win: 'meta',\n  windows: 'meta'\n};\n\nvar CODES = {\n  backspace: 8,\n  tab: 9,\n  enter: 13,\n  shift: 16,\n  control: 17,\n  alt: 18,\n  pause: 19,\n  capslock: 20,\n  escape: 27,\n  ' ': 32,\n  pageup: 33,\n  pagedown: 34,\n  end: 35,\n  home: 36,\n  arrowleft: 37,\n  arrowup: 38,\n  arrowright: 39,\n  arrowdown: 40,\n  insert: 45,\n  delete: 46,\n  meta: 91,\n  numlock: 144,\n  scrolllock: 145,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  '\\'': 222\n};\n\nfor (var f = 1; f < 20; f++) {\n  CODES['f' + f] = 111 + f;\n}\n\n/**\n * Is hotkey?\n */\n\nfunction isHotkey(hotkey, options, event) {\n  if (options && !('byKey' in options)) {\n    event = options;\n    options = null;\n  }\n\n  if (!Array.isArray(hotkey)) {\n    hotkey = [hotkey];\n  }\n\n  var array = hotkey.map(function (string) {\n    return parseHotkey(string, options);\n  });\n  var check = function check(e) {\n    return array.some(function (object) {\n      return compareHotkey(object, e);\n    });\n  };\n  var ret = event == null ? check : check(event);\n  return ret;\n}\n\nfunction isCodeHotkey(hotkey, event) {\n  return isHotkey(hotkey, event);\n}\n\nfunction isKeyHotkey(hotkey, event) {\n  return isHotkey(hotkey, { byKey: true }, event);\n}\n\n/**\n * Parse.\n */\n\nfunction parseHotkey(hotkey, options) {\n  var byKey = options && options.byKey;\n  var ret = {};\n\n  // Special case to handle the `+` key since we use it as a separator.\n  hotkey = hotkey.replace('++', '+add');\n  var values = hotkey.split('+');\n  var length = values.length;\n\n  // Ensure that all the modifiers are set to false unless the hotkey has them.\n\n  for (var k in MODIFIERS) {\n    ret[MODIFIERS[k]] = false;\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var value = _step.value;\n\n      var optional = value.endsWith('?') && value.length > 1;\n\n      if (optional) {\n        value = value.slice(0, -1);\n      }\n\n      var name = toKeyName(value);\n      var modifier = MODIFIERS[name];\n\n      if (length === 1 || !modifier) {\n        if (byKey) {\n          ret.key = name;\n        } else {\n          ret.which = toKeyCode(value);\n        }\n      }\n\n      if (modifier) {\n        ret[modifier] = optional ? null : true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Compare.\n */\n\nfunction compareHotkey(object, event) {\n  for (var key in object) {\n    var expected = object[key];\n    var actual = void 0;\n\n    if (expected == null) {\n      continue;\n    }\n\n    if (key === 'key' && event.key != null) {\n      actual = event.key.toLowerCase();\n    } else if (key === 'which') {\n      actual = expected === 91 && event.which === 93 ? 91 : event.which;\n    } else {\n      actual = event[key];\n    }\n\n    if (actual == null && expected === false) {\n      continue;\n    }\n\n    if (actual !== expected) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Utils.\n */\n\nfunction toKeyCode(name) {\n  name = toKeyName(name);\n  var code = CODES[name] || name.toUpperCase().charCodeAt(0);\n  return code;\n}\n\nfunction toKeyName(name) {\n  name = name.toLowerCase();\n  name = ALIASES[name] || name;\n  return name;\n}\n\n/**\n * Export.\n */\n\nexports.default = isHotkey;\nexports.isHotkey = isHotkey;\nexports.isCodeHotkey = isCodeHotkey;\nexports.isKeyHotkey = isKeyHotkey;\nexports.parseHotkey = parseHotkey;\nexports.compareHotkey = compareHotkey;\nexports.toKeyCode = toKeyCode;\nexports.toKeyName = toKeyName;","import {\n  isCollapsed,\n  KeyboardHandler,\n  setNodes,\n  someNode,\n  TElement,\n} from '@udecode/plate-core';\nimport isHotkey from 'is-hotkey';\nimport { ResetNodePlugin } from './types';\n\nexport const SIMULATE_BACKSPACE: any = {\n  key: '',\n  which: 8,\n};\n\nexport const onKeyDownResetNode: KeyboardHandler<{}, ResetNodePlugin> = (\n  editor,\n  { options: { rules } }\n) => (event) => {\n  let reset;\n\n  if (editor.selection && isCollapsed(editor.selection)) {\n    rules!.forEach(({ types, defaultType, hotkey, predicate, onReset }) => {\n      if (hotkey && isHotkey(hotkey, event as any)) {\n        if (predicate(editor) && someNode(editor, { match: { type: types } })) {\n          event.preventDefault?.();\n\n          setNodes<TElement>(editor, { type: defaultType });\n\n          onReset?.(editor);\n\n          reset = true;\n        }\n      }\n    });\n  }\n\n  return reset;\n};\n","import { createPluginFactory } from '@udecode/plate-core';\nimport { onKeyDownResetNode } from './onKeyDownResetNode';\nimport { ResetNodePlugin } from './types';\n\nexport const KEY_RESET_NODE = 'resetNode';\n\n/**\n * Enables support for resetting block type from rules.\n */\nexport const createResetNodePlugin = createPluginFactory<ResetNodePlugin>({\n  key: KEY_RESET_NODE,\n  handlers: {\n    onKeyDown: onKeyDownResetNode,\n  },\n  options: {\n    rules: [],\n  },\n});\n"]},"metadata":{},"sourceType":"module"}