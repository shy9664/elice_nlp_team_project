{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Cheerio = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar parse_1 = tslib_1.__importDefault(require(\"./parse\"));\n\nvar options_1 = tslib_1.__importDefault(require(\"./options\"));\n\nvar utils_1 = require(\"./utils\");\n\nvar Attributes = tslib_1.__importStar(require(\"./api/attributes\"));\n\nvar Traversing = tslib_1.__importStar(require(\"./api/traversing\"));\n\nvar Manipulation = tslib_1.__importStar(require(\"./api/manipulation\"));\n\nvar Css = tslib_1.__importStar(require(\"./api/css\"));\n\nvar Forms = tslib_1.__importStar(require(\"./api/forms\"));\n\nvar Cheerio =\n/** @class */\nfunction () {\n  /**\r\n   * Instance of cheerio. Methods are specified in the modules. Usage of this\r\n   * constructor is not recommended. Please use $.load instead.\r\n   *\r\n   * @private\r\n   * @param selector - The new selection.\r\n   * @param context - Context of the selection.\r\n   * @param root - Sets the root node.\r\n   * @param options - Options for the instance.\r\n   */\n  function Cheerio(selector, context, root, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = options_1.default;\n    }\n\n    this.length = 0;\n    this.options = options; // $(), $(null), $(undefined), $(false)\n\n    if (!selector) return this;\n\n    if (root) {\n      if (typeof root === 'string') root = parse_1.default(root, this.options, false);\n      this._root = new this.constructor(root, null, null, this.options); // Add a cyclic reference, so that calling methods on `_root` never fails.\n\n      this._root._root = this._root;\n    } // $($)\n\n\n    if (utils_1.isCheerio(selector)) return selector;\n    var elements = typeof selector === 'string' && utils_1.isHtml(selector) ? // $(<html>)\n    parse_1.default(selector, this.options, false).children : isNode(selector) ? // $(dom)\n    [selector] : Array.isArray(selector) ? // $([dom])\n    selector : null;\n\n    if (elements) {\n      elements.forEach(function (elem, idx) {\n        _this[idx] = elem;\n      });\n      this.length = elements.length;\n      return this;\n    } // We know that our selector is a string now.\n\n\n    var search = selector;\n    var searchContext = !context ? // If we don't have a context, maybe we have a root, from loading\n    this._root : typeof context === 'string' ? utils_1.isHtml(context) ? // $('li', '<ul>...</ul>')\n    this._make(parse_1.default(context, this.options, false)) : ( // $('li', 'ul')\n    search = context + \" \" + search, this._root) : utils_1.isCheerio(context) ? // $('li', $)\n    context : // $('li', node), $('li', [nodes])\n    this._make(context); // If we still don't have a context, return\n\n    if (!searchContext) return this;\n    /*\r\n     * #id, .class, tag\r\n     */\n    // @ts-expect-error No good way to type this — we will always return `Cheerio<Element>` here.\n\n    return searchContext.find(search);\n  }\n  /**\r\n   * Make a cheerio object.\r\n   *\r\n   * @private\r\n   * @param dom - The contents of the new object.\r\n   * @param context - The context of the new object.\r\n   * @returns The new cheerio object.\r\n   */\n\n\n  Cheerio.prototype._make = function (dom, context) {\n    var cheerio = new this.constructor(dom, context, this._root, this.options);\n    cheerio.prevObject = this;\n    return cheerio;\n  };\n\n  return Cheerio;\n}();\n\nexports.Cheerio = Cheerio;\n/** Set a signature of the object. */\n\nCheerio.prototype.cheerio = '[cheerio object]';\n/*\r\n * Make cheerio an array-like object\r\n */\n\nCheerio.prototype.splice = Array.prototype.splice; // Support for (const element of $(...)) iteration:\n\nCheerio.prototype[Symbol.iterator] = Array.prototype[Symbol.iterator]; // Plug in the API\n\nObject.assign(Cheerio.prototype, Attributes, Traversing, Manipulation, Css, Forms);\n\nfunction isNode(obj) {\n  return !!obj.name || obj.type === 'root' || obj.type === 'text' || obj.type === 'comment';\n}","map":{"version":3,"sources":["C:/Users/ghdus/OneDrive/바탕 화면/team-project/nlp-project-team2/frontend/node_modules/cheerio/lib/cheerio.js"],"names":["Object","defineProperty","exports","value","Cheerio","tslib_1","require","parse_1","__importDefault","options_1","utils_1","Attributes","__importStar","Traversing","Manipulation","Css","Forms","selector","context","root","options","_this","default","length","_root","constructor","isCheerio","elements","isHtml","children","isNode","Array","isArray","forEach","elem","idx","search","searchContext","_make","find","prototype","dom","cheerio","prevObject","splice","Symbol","iterator","assign","obj","name","type"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Cheerio = void 0;\r\nvar tslib_1 = require(\"tslib\");\r\nvar parse_1 = tslib_1.__importDefault(require(\"./parse\"));\r\nvar options_1 = tslib_1.__importDefault(require(\"./options\"));\r\nvar utils_1 = require(\"./utils\");\r\nvar Attributes = tslib_1.__importStar(require(\"./api/attributes\"));\r\nvar Traversing = tslib_1.__importStar(require(\"./api/traversing\"));\r\nvar Manipulation = tslib_1.__importStar(require(\"./api/manipulation\"));\r\nvar Css = tslib_1.__importStar(require(\"./api/css\"));\r\nvar Forms = tslib_1.__importStar(require(\"./api/forms\"));\r\nvar Cheerio = /** @class */ (function () {\r\n    /**\r\n     * Instance of cheerio. Methods are specified in the modules. Usage of this\r\n     * constructor is not recommended. Please use $.load instead.\r\n     *\r\n     * @private\r\n     * @param selector - The new selection.\r\n     * @param context - Context of the selection.\r\n     * @param root - Sets the root node.\r\n     * @param options - Options for the instance.\r\n     */\r\n    function Cheerio(selector, context, root, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = options_1.default; }\r\n        this.length = 0;\r\n        this.options = options;\r\n        // $(), $(null), $(undefined), $(false)\r\n        if (!selector)\r\n            return this;\r\n        if (root) {\r\n            if (typeof root === 'string')\r\n                root = parse_1.default(root, this.options, false);\r\n            this._root = new this.constructor(root, null, null, this.options);\r\n            // Add a cyclic reference, so that calling methods on `_root` never fails.\r\n            this._root._root = this._root;\r\n        }\r\n        // $($)\r\n        if (utils_1.isCheerio(selector))\r\n            return selector;\r\n        var elements = typeof selector === 'string' && utils_1.isHtml(selector)\r\n            ? // $(<html>)\r\n                parse_1.default(selector, this.options, false).children\r\n            : isNode(selector)\r\n                ? // $(dom)\r\n                    [selector]\r\n                : Array.isArray(selector)\r\n                    ? // $([dom])\r\n                        selector\r\n                    : null;\r\n        if (elements) {\r\n            elements.forEach(function (elem, idx) {\r\n                _this[idx] = elem;\r\n            });\r\n            this.length = elements.length;\r\n            return this;\r\n        }\r\n        // We know that our selector is a string now.\r\n        var search = selector;\r\n        var searchContext = !context\r\n            ? // If we don't have a context, maybe we have a root, from loading\r\n                this._root\r\n            : typeof context === 'string'\r\n                ? utils_1.isHtml(context)\r\n                    ? // $('li', '<ul>...</ul>')\r\n                        this._make(parse_1.default(context, this.options, false))\r\n                    : // $('li', 'ul')\r\n                        ((search = context + \" \" + search), this._root)\r\n                : utils_1.isCheerio(context)\r\n                    ? // $('li', $)\r\n                        context\r\n                    : // $('li', node), $('li', [nodes])\r\n                        this._make(context);\r\n        // If we still don't have a context, return\r\n        if (!searchContext)\r\n            return this;\r\n        /*\r\n         * #id, .class, tag\r\n         */\r\n        // @ts-expect-error No good way to type this — we will always return `Cheerio<Element>` here.\r\n        return searchContext.find(search);\r\n    }\r\n    /**\r\n     * Make a cheerio object.\r\n     *\r\n     * @private\r\n     * @param dom - The contents of the new object.\r\n     * @param context - The context of the new object.\r\n     * @returns The new cheerio object.\r\n     */\r\n    Cheerio.prototype._make = function (dom, context) {\r\n        var cheerio = new this.constructor(dom, context, this._root, this.options);\r\n        cheerio.prevObject = this;\r\n        return cheerio;\r\n    };\r\n    return Cheerio;\r\n}());\r\nexports.Cheerio = Cheerio;\r\n/** Set a signature of the object. */\r\nCheerio.prototype.cheerio = '[cheerio object]';\r\n/*\r\n * Make cheerio an array-like object\r\n */\r\nCheerio.prototype.splice = Array.prototype.splice;\r\n// Support for (const element of $(...)) iteration:\r\nCheerio.prototype[Symbol.iterator] = Array.prototype[Symbol.iterator];\r\n// Plug in the API\r\nObject.assign(Cheerio.prototype, Attributes, Traversing, Manipulation, Css, Forms);\r\nfunction isNode(obj) {\r\n    return (!!obj.name ||\r\n        obj.type === 'root' ||\r\n        obj.type === 'text' ||\r\n        obj.type === 'comment');\r\n}\r\n"]},"metadata":{},"sourceType":"script"}