{"ast":null,"code":"import React, { useCallback, useMemo, useRef, useEffect, memo } from 'react';\nimport { Editor, Span, Range, Path, Node as Node$1, Element, Point, Text, Transforms, createEditor as createEditor$1 } from 'slate';\nimport { ReactEditor, DefaultElement, withReact, Editable, useSlate, Slate, useSlateStatic } from 'slate-react';\nimport create from 'zustand';\nimport clsx from 'clsx';\nimport { withHistory } from 'slate-history';\nimport { renderToStaticMarkup } from 'react-dom/server';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nconst createNodeHOC = HOC => (Component, props) => childrenProps => /*#__PURE__*/React.createElement(HOC, _extends({}, childrenProps, props), /*#__PURE__*/React.createElement(Component, childrenProps));\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\n\n\nvar isArray = Array.isArray;\nvar isArray_1 = isArray;\n/**\n * Casts `value` as an array if it's not one.\n *\n * @static\n * @memberOf _\n * @since 4.4.0\n * @category Lang\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast array.\n * @example\n *\n * _.castArray(1);\n * // => [1]\n *\n * _.castArray({ 'a': 1 });\n * // => [{ 'a': 1 }]\n *\n * _.castArray('abc');\n * // => ['abc']\n *\n * _.castArray(null);\n * // => [null]\n *\n * _.castArray(undefined);\n * // => [undefined]\n *\n * _.castArray();\n * // => []\n *\n * var array = [1, 2, 3];\n * console.log(_.castArray(array) === array);\n * // => true\n */\n\nfunction castArray() {\n  if (!arguments.length) {\n    return [];\n  }\n\n  var value = arguments[0];\n  return isArray_1(value) ? value : [value];\n}\n\nvar castArray_1 = castArray;\n\nconst createHOC = withHOC => {\n  return (components, options) => {\n    const _components = { ...components\n    };\n    const optionsByKey = {};\n    const optionsList = castArray_1(options);\n    optionsList.forEach(({\n      key,\n      keys,\n      ...opt\n    }) => {\n      const _keys = key ? [key] : keys !== null && keys !== void 0 ? keys : Object.keys(_components);\n\n      _keys.forEach(_key => {\n        optionsByKey[_key] = { ...optionsByKey[_key],\n          ...opt\n        };\n      });\n    });\n    Object.keys(optionsByKey).forEach(key => {\n      if (!_components[key]) return;\n      _components[key] = withHOC(_components[key], optionsByKey[key]);\n    });\n    return _components;\n  };\n};\n/**\n * Create components HOC by plugin key.\n */\n\n\nconst createNodesHOC = HOC => {\n  return createHOC(createNodeHOC(HOC));\n};\n/**\n * Create components HOC by plugin key with a custom HOC.\n */\n\n\nconst createNodesWithHOC = withHOC => {\n  return createHOC(withHOC);\n};\n/**\n * HOC adding props.\n */\n\n\nconst withProps = (Component, props) => _props => /*#__PURE__*/React.createElement(Component, _extends({}, _props, props));\n/**\n * Wrap a component into multiple providers.\n * If there are any props that you want a provider to receive,\n * you can simply pass an array.\n */\n\n\nconst withProviders = (...providers) => WrappedComponent => props => providers.reduceRight((acc, prov) => {\n  let Provider = prov;\n\n  if (Array.isArray(prov)) {\n    [Provider] = prov;\n    return /*#__PURE__*/React.createElement(Provider, prov[1], acc);\n  }\n\n  return /*#__PURE__*/React.createElement(Provider, null, acc);\n}, /*#__PURE__*/React.createElement(WrappedComponent, props));\n/**\n * Match the object with a predicate object or function.\n * If predicate is:\n * - object: every predicate key/value should be in obj.\n * - function: it should return true.\n */\n\n\nconst match = (obj, predicate) => {\n  if (!predicate) return true;\n\n  if (typeof predicate === 'object') {\n    return Object.entries(predicate).every(([key, value]) => {\n      const values = castArray_1(value);\n      return values.includes(obj[key]);\n    });\n  }\n\n  return predicate(obj);\n};\n\nconst matchPredicate = predicate => obj => match(obj, predicate);\n/**\n * Extended query options for slate queries:\n * - `match` can be an object predicate where one of the values should include the node value.\n * Example: { type: ['1', '2'] } will match the nodes having one of these 2 types.\n */\n\n\nconst getQueryOptions = (editor, options) => {\n  return { ...options,\n    match: n => match(n, options.match) && (!(options !== null && options !== void 0 && options.block) || Editor.isBlock(editor, n))\n  };\n};\n/**\n * Iterate through all of the nodes in the editor and return the first match. If\n * no match is found, return undefined.\n */\n\n/**\n * Get the first descendant node matching the condition.\n */\n\n\nconst findDescendant = (editor, options) => {\n  // Slate throws when things aren't found so we wrap in a try catch and return undefined on throw.\n  try {\n    const {\n      match: _match,\n      at = editor.selection,\n      reverse = false,\n      voids = false\n    } = options;\n    if (!at) return;\n    let from;\n    let to;\n\n    if (Span.isSpan(at)) {\n      [from, to] = at;\n    } else if (Range.isRange(at)) {\n      const first = Editor.path(editor, at, {\n        edge: 'start'\n      });\n      const last = Editor.path(editor, at, {\n        edge: 'end'\n      });\n      from = reverse ? last : first;\n      to = reverse ? first : last;\n    }\n\n    let root = [editor, []];\n\n    if (Path.isPath(at)) {\n      root = Editor.node(editor, at);\n    }\n\n    const nodeEntries = Node$1.descendants(root[0], {\n      reverse,\n      from,\n      to,\n      pass: ([n]) => voids ? false : Editor.isVoid(editor, n)\n    });\n\n    for (const [node, path] of nodeEntries) {\n      if (match(node, _match)) {\n        return [node, at.concat(path)];\n      }\n    }\n  } catch (error) {\n    return undefined;\n  }\n};\n/**\n * Return {@link Editor.unhangRange} if `unhang` is true and if `at` (default: selection) is a range.\n */\n\n\nconst unhangRange = (editor, options = {}) => {\n  const {\n    at = editor.selection,\n    voids,\n    unhang = true\n  } = options;\n\n  if (Range.isRange(at) && unhang) {\n    options.at = Editor.unhangRange(editor, at, {\n      voids\n    });\n  }\n};\n\nconst getNodes = (editor, options = {}) => {\n  unhangRange(editor, options);\n  return Editor.nodes(editor, getQueryOptions(editor, options));\n};\n/**\n * Find node matching the condition.\n */\n\n\nconst findNode = (editor, options = {}) => {\n  // Slate throws when things aren't found so we wrap in a try catch and return undefined on throw.\n  try {\n    const nodeEntries = getNodes(editor, {\n      at: editor.selection || [],\n      ...getQueryOptions(editor, options)\n    });\n\n    for (const [node, path] of nodeEntries) {\n      return [node, path];\n    }\n  } catch (error) {\n    return undefined;\n  }\n};\n/**\n * @see {@link ReactEditor.findPath}\n */\n\n\nconst findNodePath = (editor, node) => {\n  try {\n    return ReactEditor.findPath(editor, node);\n  } catch (e) {}\n};\n/**\n * Get node above a location (default: selection).\n */\n\n\nconst getAbove = (editor, options = {}) => {\n  return Editor.above(editor, getQueryOptions(editor, options));\n};\n/**\n * Get the block above a location (default: selection).\n */\n\n\nconst getBlockAbove = (editor, options = {}) => getAbove(editor, { ...options,\n  block: true\n});\n/**\n * Get children node entries of a node entry.\n * TODO: try Node.children\n */\n\n\nconst getChildren = nodeEntry => {\n  const [node, path] = nodeEntry;\n  const children = node.children || [];\n  return children.map((child, index) => {\n    const childPath = path.concat([index]);\n    return [child, childPath];\n  });\n};\n/**\n * Get the last child of a node or null if no children.\n */\n\n\nconst getLastChild$1 = nodeEntry => {\n  const [node, path] = nodeEntry;\n  if (!node.children.length) return null;\n  return [node.children[node.children.length - 1], path.concat([node.children.length - 1])];\n};\n/**\n * Get last child path. If there is no child, last index is 0.\n */\n\n\nconst getLastChildPath = nodeEntry => {\n  const lastChild = getLastChild$1(nodeEntry);\n  if (!lastChild) return nodeEntry[1].concat([-1]);\n  return lastChild[1];\n};\n/**\n * Is the child path the last one of the parent.\n */\n\n\nconst isLastChild = (parentEntry, childPath) => {\n  const lastChildPath = getLastChildPath(parentEntry);\n  return Path.equals(lastChildPath, childPath);\n};\n\nconst isElement = Element.isElement;\n\nconst isAncestor = node => Editor.isEditor(node) || isElement(node);\n\nconst getLastChild = (node, level) => {\n  if (!(level + 1) || !isAncestor(node)) return node;\n  const {\n    children\n  } = node;\n  const lastNode = children[children.length - 1];\n  return getLastChild(lastNode, level - 1);\n};\n/**\n * Get the last node at a given level.\n */\n\n\nconst getLastNode = (editor, level) => {\n  const {\n    children\n  } = editor;\n  const lastNode = children[children.length - 1];\n  if (!lastNode) return;\n  const [, lastPath] = Editor.last(editor, []);\n  return [getLastChild(lastNode, level - 1), lastPath.slice(0, level + 1)];\n};\n/**\n * Get selected mark by type.\n */\n\n\nconst getMark = (editor, type) => {\n  var _Editor$marks;\n\n  if (!editor) return;\n  return (_Editor$marks = Editor.marks(editor)) === null || _Editor$marks === void 0 ? void 0 : _Editor$marks[type];\n};\n/**\n * Get the next sibling nodes after a path.\n * @param ancestorEntry Ancestor of the sibling nodes\n * @param path Path of the reference node\n */\n\n\nconst getNextSiblingNodes = (ancestorEntry, path) => {\n  const [ancestor, ancestorPath] = ancestorEntry;\n  const leafIndex = path[ancestorPath.length];\n  const siblings = [];\n\n  if (leafIndex + 1 < ancestor.children.length) {\n    for (let i = leafIndex + 1; i < ancestor.children.length; i++) {\n      siblings.push(ancestor.children[i]);\n    }\n  }\n\n  return siblings;\n};\n/**\n * Get the descendant node referred to by a specific path.\n * If the path is an empty array, it refers to the root node itself.\n * If the node is not found, return null.\n */\n\n\nconst getNode = (editor, path) => {\n  try {\n    return Node$1.get(editor, path);\n  } catch (err) {\n    return null;\n  }\n};\n/**\n * See {@link Editor.parent}.\n * Returns undefined if there is no parent.\n */\n\n\nconst getParent = (editor, at, options) => {\n  try {\n    return Editor.parent(editor, at, options);\n  } catch (err) {}\n};\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\n\n\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nvar _arrayMap = arrayMap;\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\n\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nvar _listCacheClear = listCacheClear;\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\n\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nvar eq_1 = eq;\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq_1(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nvar _assocIndexOf = assocIndexOf;\n/** Used for built-in method references. */\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = _assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nvar _listCacheDelete = listCacheDelete;\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = _assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nvar _listCacheGet = listCacheGet;\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction listCacheHas(key) {\n  return _assocIndexOf(this.__data__, key) > -1;\n}\n\nvar _listCacheHas = listCacheHas;\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = _assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nvar _listCacheSet = listCacheSet;\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = _listCacheClear;\nListCache.prototype['delete'] = _listCacheDelete;\nListCache.prototype.get = _listCacheGet;\nListCache.prototype.has = _listCacheHas;\nListCache.prototype.set = _listCacheSet;\nvar _ListCache = ListCache;\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\nfunction stackClear() {\n  this.__data__ = new _ListCache();\n  this.size = 0;\n}\n\nvar _stackClear = stackClear;\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nvar _stackDelete = stackDelete;\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nvar _stackGet = stackGet;\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nvar _stackHas = stackHas;\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction unwrapExports(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n/** Detect free variable `global` from Node.js. */\n\n\nvar freeGlobal = typeof commonjsGlobal == 'object' && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;\nvar _freeGlobal = freeGlobal;\n/** Detect free variable `self`. */\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = _freeGlobal || freeSelf || Function('return this')();\nvar _root = root;\n/** Built-in value references. */\n\nvar Symbol$1 = _root.Symbol;\nvar _Symbol = Symbol$1;\n/** Used for built-in method references. */\n\nvar objectProto$g = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty$d = objectProto$g.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString$1 = objectProto$g.toString;\n/** Built-in value references. */\n\nvar symToStringTag$1 = _Symbol ? _Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty$d.call(value, symToStringTag$1),\n      tag = value[symToStringTag$1];\n\n  try {\n    value[symToStringTag$1] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString$1.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag$1] = tag;\n    } else {\n      delete value[symToStringTag$1];\n    }\n  }\n\n  return result;\n}\n\nvar _getRawTag = getRawTag;\n/** Used for built-in method references. */\n\nvar objectProto$f = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto$f.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nvar _objectToString = objectToString;\n/** `Object#toString` result references. */\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? _getRawTag(value) : _objectToString(value);\n}\n\nvar _baseGetTag = baseGetTag;\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\n\nfunction isObject$1(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nvar isObject_1 = isObject$1;\n/** `Object#toString` result references. */\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag$2 = '[object Function]',\n    genTag$1 = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject_1(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = _baseGetTag(value);\n\n  return tag == funcTag$2 || tag == genTag$1 || tag == asyncTag || tag == proxyTag;\n}\n\nvar isFunction_1 = isFunction;\n/** Used to detect overreaching core-js shims. */\n\nvar coreJsData = _root['__core-js_shared__'];\nvar _coreJsData = coreJsData;\n/** Used to detect methods masquerading as native. */\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(_coreJsData && _coreJsData.keys && _coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nvar _isMasked = isMasked;\n/** Used for built-in method references. */\n\nvar funcProto$2 = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString$2 = funcProto$2.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString$2.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nvar _toSource = toSource;\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto$1 = Function.prototype,\n    objectProto$e = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString$1 = funcProto$1.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty$c = objectProto$e.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString$1.call(hasOwnProperty$c).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject_1(value) || _isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction_1(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(_toSource(value));\n}\n\nvar _baseIsNative = baseIsNative;\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\n\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nvar _getValue = getValue;\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\nfunction getNative(object, key) {\n  var value = _getValue(object, key);\n\n  return _baseIsNative(value) ? value : undefined;\n}\n\nvar _getNative = getNative;\n/* Built-in method references that are verified to be native. */\n\nvar Map = _getNative(_root, 'Map');\n\nvar _Map = Map;\n/* Built-in method references that are verified to be native. */\n\nvar nativeCreate = _getNative(Object, 'create');\n\nvar _nativeCreate = nativeCreate;\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\nfunction hashClear() {\n  this.__data__ = _nativeCreate ? _nativeCreate(null) : {};\n  this.size = 0;\n}\n\nvar _hashClear = hashClear;\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nvar _hashDelete = hashDelete;\n/** Used to stand-in for `undefined` hash values. */\n\nvar HASH_UNDEFINED$2 = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto$d = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty$b = objectProto$d.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (_nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED$2 ? undefined : result;\n  }\n\n  return hasOwnProperty$b.call(data, key) ? data[key] : undefined;\n}\n\nvar _hashGet = hashGet;\n/** Used for built-in method references. */\n\nvar objectProto$c = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty$a = objectProto$c.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return _nativeCreate ? data[key] !== undefined : hasOwnProperty$a.call(data, key);\n}\n\nvar _hashHas = hashHas;\n/** Used to stand-in for `undefined` hash values. */\n\nvar HASH_UNDEFINED$1 = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = _nativeCreate && value === undefined ? HASH_UNDEFINED$1 : value;\n  return this;\n}\n\nvar _hashSet = hashSet;\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = _hashClear;\nHash.prototype['delete'] = _hashDelete;\nHash.prototype.get = _hashGet;\nHash.prototype.has = _hashHas;\nHash.prototype.set = _hashSet;\nvar _Hash = Hash;\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new _Hash(),\n    'map': new (_Map || _ListCache)(),\n    'string': new _Hash()\n  };\n}\n\nvar _mapCacheClear = mapCacheClear;\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\n\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nvar _isKeyable = isKeyable;\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return _isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nvar _getMapData = getMapData;\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction mapCacheDelete(key) {\n  var result = _getMapData(this, key)['delete'](key);\n\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nvar _mapCacheDelete = mapCacheDelete;\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction mapCacheGet(key) {\n  return _getMapData(this, key).get(key);\n}\n\nvar _mapCacheGet = mapCacheGet;\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction mapCacheHas(key) {\n  return _getMapData(this, key).has(key);\n}\n\nvar _mapCacheHas = mapCacheHas;\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\nfunction mapCacheSet(key, value) {\n  var data = _getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nvar _mapCacheSet = mapCacheSet;\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = _mapCacheClear;\nMapCache.prototype['delete'] = _mapCacheDelete;\nMapCache.prototype.get = _mapCacheGet;\nMapCache.prototype.has = _mapCacheHas;\nMapCache.prototype.set = _mapCacheSet;\nvar _MapCache = MapCache;\n/** Used as the size to enable large array optimizations. */\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof _ListCache) {\n    var pairs = data.__data__;\n\n    if (!_Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new _MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nvar _stackSet = stackSet;\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\nfunction Stack(entries) {\n  var data = this.__data__ = new _ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = _stackClear;\nStack.prototype['delete'] = _stackDelete;\nStack.prototype.get = _stackGet;\nStack.prototype.has = _stackHas;\nStack.prototype.set = _stackSet;\nvar _Stack = Stack;\n/** Used to stand-in for `undefined` hash values. */\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nvar _setCacheAdd = setCacheAdd;\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\n\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nvar _setCacheHas = setCacheHas;\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new _MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = _setCacheAdd;\nSetCache.prototype.has = _setCacheHas;\nvar _SetCache = SetCache;\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\n\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar _arraySome = arraySome;\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nvar _cacheHas = cacheHas;\n/** Used to compose bitmasks for value comparisons. */\n\nvar COMPARE_PARTIAL_FLAG$5 = 1,\n    COMPARE_UNORDERED_FLAG$3 = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG$5,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Check that cyclic values are equal.\n\n\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG$3 ? new _SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!_arraySome(other, function (othValue, othIndex) {\n        if (!_cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nvar _equalArrays = equalArrays;\n/** Built-in value references. */\n\nvar Uint8Array = _root.Uint8Array;\nvar _Uint8Array = Uint8Array;\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\n\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nvar _mapToArray = mapToArray;\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\n\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nvar _setToArray = setToArray;\n/** Used to compose bitmasks for value comparisons. */\n\nvar COMPARE_PARTIAL_FLAG$4 = 1,\n    COMPARE_UNORDERED_FLAG$2 = 2;\n/** `Object#toString` result references. */\n\nvar boolTag$3 = '[object Boolean]',\n    dateTag$3 = '[object Date]',\n    errorTag$2 = '[object Error]',\n    mapTag$5 = '[object Map]',\n    numberTag$3 = '[object Number]',\n    regexpTag$3 = '[object RegExp]',\n    setTag$5 = '[object Set]',\n    stringTag$3 = '[object String]',\n    symbolTag$3 = '[object Symbol]';\nvar arrayBufferTag$3 = '[object ArrayBuffer]',\n    dataViewTag$4 = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto$2 = _Symbol ? _Symbol.prototype : undefined,\n    symbolValueOf$1 = symbolProto$2 ? symbolProto$2.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag$4:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag$3:\n      if (object.byteLength != other.byteLength || !equalFunc(new _Uint8Array(object), new _Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag$3:\n    case dateTag$3:\n    case numberTag$3:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq_1(+object, +other);\n\n    case errorTag$2:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag$3:\n    case stringTag$3:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag$5:\n      var convert = _mapToArray;\n\n    case setTag$5:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG$4;\n      convert || (convert = _setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG$2; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n\n      var result = _equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n\n      stack['delete'](object);\n      return result;\n\n    case symbolTag$3:\n      if (symbolValueOf$1) {\n        return symbolValueOf$1.call(object) == symbolValueOf$1.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nvar _equalByTag = equalByTag;\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\n\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nvar _arrayPush = arrayPush;\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray_1(object) ? result : _arrayPush(result, symbolsFunc(object));\n}\n\nvar _baseGetAllKeys = baseGetAllKeys;\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\n\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nvar _arrayFilter = arrayFilter;\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\n\nfunction stubArray() {\n  return [];\n}\n\nvar stubArray_1 = stubArray;\n/** Used for built-in method references. */\n\nvar objectProto$b = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable$1 = objectProto$b.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols$1 = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols$1 ? stubArray_1 : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return _arrayFilter(nativeGetSymbols$1(object), function (symbol) {\n    return propertyIsEnumerable$1.call(object, symbol);\n  });\n};\nvar _getSymbols = getSymbols;\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\n\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nvar _baseTimes = baseTimes;\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\n\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nvar isObjectLike_1 = isObjectLike;\n/** `Object#toString` result references. */\n\nvar argsTag$3 = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike_1(value) && _baseGetTag(value) == argsTag$3;\n}\n\nvar _baseIsArguments = baseIsArguments;\n/** Used for built-in method references. */\n\nvar objectProto$a = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty$9 = objectProto$a.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto$a.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = _baseIsArguments(function () {\n  return arguments;\n}()) ? _baseIsArguments : function (value) {\n  return isObjectLike_1(value) && hasOwnProperty$9.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nvar isArguments_1 = isArguments;\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\n\nfunction stubFalse() {\n  return false;\n}\n\nvar stubFalse_1 = stubFalse;\nvar isBuffer_1 = createCommonjsModule(function (module, exports) {\n  /** Detect free variable `exports`. */\n  var freeExports = exports && !exports.nodeType && exports;\n  /** Detect free variable `module`. */\n\n  var freeModule = freeExports && 'object' == 'object' && module && !module.nodeType && module;\n  /** Detect the popular CommonJS extension `module.exports`. */\n\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n  /** Built-in value references. */\n\n  var Buffer = moduleExports ? _root.Buffer : undefined;\n  /* Built-in method references for those with the same name as other `lodash` methods. */\n\n  var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n  /**\n   * Checks if `value` is a buffer.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.3.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n   * @example\n   *\n   * _.isBuffer(new Buffer(2));\n   * // => true\n   *\n   * _.isBuffer(new Uint8Array(2));\n   * // => false\n   */\n\n  var isBuffer = nativeIsBuffer || stubFalse_1;\n  module.exports = isBuffer;\n});\n/** Used as references for various `Number` constants. */\n\nvar MAX_SAFE_INTEGER$1 = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER$1 : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nvar _isIndex = isIndex;\n/** Used as references for various `Number` constants. */\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nvar isLength_1 = isLength;\n/** `Object#toString` result references. */\n\nvar argsTag$2 = '[object Arguments]',\n    arrayTag$2 = '[object Array]',\n    boolTag$2 = '[object Boolean]',\n    dateTag$2 = '[object Date]',\n    errorTag$1 = '[object Error]',\n    funcTag$1 = '[object Function]',\n    mapTag$4 = '[object Map]',\n    numberTag$2 = '[object Number]',\n    objectTag$4 = '[object Object]',\n    regexpTag$2 = '[object RegExp]',\n    setTag$4 = '[object Set]',\n    stringTag$2 = '[object String]',\n    weakMapTag$2 = '[object WeakMap]';\nvar arrayBufferTag$2 = '[object ArrayBuffer]',\n    dataViewTag$3 = '[object DataView]',\n    float32Tag$2 = '[object Float32Array]',\n    float64Tag$2 = '[object Float64Array]',\n    int8Tag$2 = '[object Int8Array]',\n    int16Tag$2 = '[object Int16Array]',\n    int32Tag$2 = '[object Int32Array]',\n    uint8Tag$2 = '[object Uint8Array]',\n    uint8ClampedTag$2 = '[object Uint8ClampedArray]',\n    uint16Tag$2 = '[object Uint16Array]',\n    uint32Tag$2 = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag$2] = typedArrayTags[float64Tag$2] = typedArrayTags[int8Tag$2] = typedArrayTags[int16Tag$2] = typedArrayTags[int32Tag$2] = typedArrayTags[uint8Tag$2] = typedArrayTags[uint8ClampedTag$2] = typedArrayTags[uint16Tag$2] = typedArrayTags[uint32Tag$2] = true;\ntypedArrayTags[argsTag$2] = typedArrayTags[arrayTag$2] = typedArrayTags[arrayBufferTag$2] = typedArrayTags[boolTag$2] = typedArrayTags[dataViewTag$3] = typedArrayTags[dateTag$2] = typedArrayTags[errorTag$1] = typedArrayTags[funcTag$1] = typedArrayTags[mapTag$4] = typedArrayTags[numberTag$2] = typedArrayTags[objectTag$4] = typedArrayTags[regexpTag$2] = typedArrayTags[setTag$4] = typedArrayTags[stringTag$2] = typedArrayTags[weakMapTag$2] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike_1(value) && isLength_1(value.length) && !!typedArrayTags[_baseGetTag(value)];\n}\n\nvar _baseIsTypedArray = baseIsTypedArray;\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\n\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nvar _baseUnary = baseUnary;\n\nvar _nodeUtil = createCommonjsModule(function (module, exports) {\n  /** Detect free variable `exports`. */\n  var freeExports = exports && !exports.nodeType && exports;\n  /** Detect free variable `module`. */\n\n  var freeModule = freeExports && 'object' == 'object' && module && !module.nodeType && module;\n  /** Detect the popular CommonJS extension `module.exports`. */\n\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n  /** Detect free variable `process` from Node.js. */\n\n  var freeProcess = moduleExports && _freeGlobal.process;\n  /** Used to access faster Node.js helpers. */\n\n  var nodeUtil = function () {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }();\n\n  module.exports = nodeUtil;\n});\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = _nodeUtil && _nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? _baseUnary(nodeIsTypedArray) : _baseIsTypedArray;\nvar isTypedArray_1 = isTypedArray;\n/** Used for built-in method references. */\n\nvar objectProto$9 = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty$8 = objectProto$9.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray_1(value),\n      isArg = !isArr && isArguments_1(value),\n      isBuff = !isArr && !isArg && isBuffer_1(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray_1(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? _baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty$8.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    _isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nvar _arrayLikeKeys = arrayLikeKeys;\n/** Used for built-in method references. */\n\nvar objectProto$8 = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto$8;\n  return value === proto;\n}\n\nvar _isPrototype = isPrototype;\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\n\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nvar _overArg = overArg;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeKeys = _overArg(Object.keys, Object);\n\nvar _nativeKeys = nativeKeys;\n/** Used for built-in method references. */\n\nvar objectProto$7 = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty$7 = objectProto$7.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!_isPrototype(object)) {\n    return _nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty$7.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nvar _baseKeys = baseKeys;\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\nfunction isArrayLike(value) {\n  return value != null && isLength_1(value.length) && !isFunction_1(value);\n}\n\nvar isArrayLike_1 = isArrayLike;\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\nfunction keys(object) {\n  return isArrayLike_1(object) ? _arrayLikeKeys(object) : _baseKeys(object);\n}\n\nvar keys_1 = keys;\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\nfunction getAllKeys(object) {\n  return _baseGetAllKeys(object, keys_1, _getSymbols);\n}\n\nvar _getAllKeys = getAllKeys;\n/** Used to compose bitmasks for value comparisons. */\n\nvar COMPARE_PARTIAL_FLAG$3 = 1;\n/** Used for built-in method references. */\n\nvar objectProto$6 = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty$6 = objectProto$6.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG$3,\n      objProps = _getAllKeys(object),\n      objLength = objProps.length,\n      othProps = _getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty$6.call(other, key))) {\n      return false;\n    }\n  } // Check that cyclic values are equal.\n\n\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nvar _equalObjects = equalObjects;\n/* Built-in method references that are verified to be native. */\n\nvar DataView = _getNative(_root, 'DataView');\n\nvar _DataView = DataView;\n/* Built-in method references that are verified to be native. */\n\nvar Promise$1 = _getNative(_root, 'Promise');\n\nvar _Promise = Promise$1;\n/* Built-in method references that are verified to be native. */\n\nvar Set$1 = _getNative(_root, 'Set');\n\nvar _Set = Set$1;\n/* Built-in method references that are verified to be native. */\n\nvar WeakMap$1 = _getNative(_root, 'WeakMap');\n\nvar _WeakMap = WeakMap$1;\n/** `Object#toString` result references. */\n\nvar mapTag$3 = '[object Map]',\n    objectTag$3 = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag$3 = '[object Set]',\n    weakMapTag$1 = '[object WeakMap]';\nvar dataViewTag$2 = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = _toSource(_DataView),\n    mapCtorString = _toSource(_Map),\n    promiseCtorString = _toSource(_Promise),\n    setCtorString = _toSource(_Set),\n    weakMapCtorString = _toSource(_WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\n\nvar getTag = _baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (_DataView && getTag(new _DataView(new ArrayBuffer(1))) != dataViewTag$2 || _Map && getTag(new _Map()) != mapTag$3 || _Promise && getTag(_Promise.resolve()) != promiseTag || _Set && getTag(new _Set()) != setTag$3 || _WeakMap && getTag(new _WeakMap()) != weakMapTag$1) {\n  getTag = function (value) {\n    var result = _baseGetTag(value),\n        Ctor = result == objectTag$3 ? value.constructor : undefined,\n        ctorString = Ctor ? _toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag$2;\n\n        case mapCtorString:\n          return mapTag$3;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag$3;\n\n        case weakMapCtorString:\n          return weakMapTag$1;\n      }\n    }\n\n    return result;\n  };\n}\n\nvar _getTag = getTag;\n/** Used to compose bitmasks for value comparisons. */\n\nvar COMPARE_PARTIAL_FLAG$2 = 1;\n/** `Object#toString` result references. */\n\nvar argsTag$1 = '[object Arguments]',\n    arrayTag$1 = '[object Array]',\n    objectTag$2 = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto$5 = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty$5 = objectProto$5.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray_1(object),\n      othIsArr = isArray_1(other),\n      objTag = objIsArr ? arrayTag$1 : _getTag(object),\n      othTag = othIsArr ? arrayTag$1 : _getTag(other);\n  objTag = objTag == argsTag$1 ? objectTag$2 : objTag;\n  othTag = othTag == argsTag$1 ? objectTag$2 : othTag;\n  var objIsObj = objTag == objectTag$2,\n      othIsObj = othTag == objectTag$2,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer_1(object)) {\n    if (!isBuffer_1(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new _Stack());\n    return objIsArr || isTypedArray_1(object) ? _equalArrays(object, other, bitmask, customizer, equalFunc, stack) : _equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG$2)) {\n    var objIsWrapped = objIsObj && hasOwnProperty$5.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty$5.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new _Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new _Stack());\n  return _equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nvar _baseIsEqualDeep = baseIsEqualDeep;\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike_1(value) && !isObjectLike_1(other)) {\n    return value !== value && other !== other;\n  }\n\n  return _baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nvar _baseIsEqual = baseIsEqual;\n/** Used to compose bitmasks for value comparisons. */\n\nvar COMPARE_PARTIAL_FLAG$1 = 1,\n    COMPARE_UNORDERED_FLAG$1 = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new _Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? _baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG$1 | COMPARE_UNORDERED_FLAG$1, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nvar _baseIsMatch = baseIsMatch;\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject_1(value);\n}\n\nvar _isStrictComparable = isStrictComparable;\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\nfunction getMatchData(object) {\n  var result = keys_1(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, _isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nvar _getMatchData = getMatchData;\n/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nvar _matchesStrictComparable = matchesStrictComparable;\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatches(source) {\n  var matchData = _getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return _matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || _baseIsMatch(object, source, matchData);\n  };\n}\n\nvar _baseMatches = baseMatches;\n/** `Object#toString` result references. */\n\nvar symbolTag$2 = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike_1(value) && _baseGetTag(value) == symbolTag$2;\n}\n\nvar isSymbol_1 = isSymbol;\n/** Used to match property names within property paths. */\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray_1(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol_1(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nvar _isKey = isKey;\n/** Error message constants. */\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function () {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || _MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = _MapCache;\nvar memoize_1 = memoize;\n/** Used as the maximum memoize cache size. */\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize_1(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nvar _memoizeCapped = memoizeCapped;\n/** Used to match property names within property paths. */\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = _memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\n\nvar _stringToPath = stringToPath;\n/** Used as references for various `Number` constants. */\n\nvar INFINITY$1 = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto$1 = _Symbol ? _Symbol.prototype : undefined,\n    symbolToString = symbolProto$1 ? symbolProto$1.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray_1(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return _arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol_1(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY$1 ? '-0' : result;\n}\n\nvar _baseToString = baseToString;\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\nfunction toString(value) {\n  return value == null ? '' : _baseToString(value);\n}\n\nvar toString_1 = toString;\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\nfunction castPath(value, object) {\n  if (isArray_1(value)) {\n    return value;\n  }\n\n  return _isKey(value, object) ? [value] : _stringToPath(toString_1(value));\n}\n\nvar _castPath = castPath;\n/** Used as references for various `Number` constants. */\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol_1(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nvar _toKey = toKey;\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\nfunction baseGet(object, path) {\n  path = _castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[_toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nvar _baseGet = baseGet;\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\nfunction get$1(object, path, defaultValue) {\n  var result = object == null ? undefined : _baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nvar get_1 = get$1;\n/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\n\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nvar _baseHasIn = baseHasIn;\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\nfunction hasPath(object, path, hasFunc) {\n  path = _castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = _toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength_1(length) && _isIndex(key, length) && (isArray_1(object) || isArguments_1(object));\n}\n\nvar _hasPath = hasPath;\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\nfunction hasIn(object, path) {\n  return object != null && _hasPath(object, path, _baseHasIn);\n}\n\nvar hasIn_1 = hasIn;\n/** Used to compose bitmasks for value comparisons. */\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (_isKey(path) && _isStrictComparable(srcValue)) {\n    return _matchesStrictComparable(_toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get_1(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn_1(object, path) : _baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nvar _baseMatchesProperty = baseMatchesProperty;\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\n\nfunction identity(value) {\n  return value;\n}\n\nvar identity_1 = identity;\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nvar _baseProperty = baseProperty;\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return _baseGet(object, path);\n  };\n}\n\nvar _basePropertyDeep = basePropertyDeep;\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\nfunction property(path) {\n  return _isKey(path) ? _baseProperty(_toKey(path)) : _basePropertyDeep(path);\n}\n\nvar property_1 = property;\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity_1;\n  }\n\n  if (typeof value == 'object') {\n    return isArray_1(value) ? _baseMatchesProperty(value[0], value[1]) : _baseMatches(value);\n  }\n\n  return property_1(value);\n}\n\nvar _baseIteratee = baseIteratee;\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nvar _createBaseFor = createBaseFor;\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\nvar baseFor = _createBaseFor();\n\nvar _baseFor = baseFor;\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\nfunction baseForOwn(object, iteratee) {\n  return object && _baseFor(object, iteratee, keys_1);\n}\n\nvar _baseForOwn = baseForOwn;\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike_1(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nvar _createBaseEach = createBaseEach;\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\nvar baseEach = _createBaseEach(_baseForOwn);\n\nvar _baseEach = baseEach;\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\n\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike_1(collection) ? Array(collection.length) : [];\n\n  _baseEach(collection, function (value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n\n  return result;\n}\n\nvar _baseMap = baseMap;\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\n\nfunction map(collection, iteratee) {\n  var func = isArray_1(collection) ? _arrayMap : _baseMap;\n  return func(collection, _baseIteratee(iteratee));\n}\n\nvar map_1 = map;\n/**\n * Is the range (default: selection) across blocks.\n */\n\nconst isRangeAcrossBlocks = (editor, {\n  at,\n  ...options\n} = {}) => {\n  if (!at) at = editor.selection;\n  if (!at) return false;\n  const [start, end] = Range.edges(at);\n  const startBlock = getBlockAbove(editor, {\n    at: start,\n    ...options\n  });\n  const endBlock = getBlockAbove(editor, {\n    at: end,\n    ...options\n  });\n  return startBlock && endBlock && !Path.equals(startBlock[1], endBlock[1]);\n};\n/* eslint-disable no-constant-condition */\n\n/**\n * {@link Editor.before} with additional options.\n * TODO: support for sequence of any characters.\n */\n\n\nconst getPointBefore = (editor, at, options) => {\n  if (!options || !options.match && !options.matchString) {\n    return Editor.before(editor, at, options);\n  }\n\n  const unitOffset = !options.unit || options.unit === 'offset';\n  const matchStrings = options.matchString ? castArray_1(options.matchString) : [''];\n  let point;\n  matchStrings.some(matchString => {\n    let beforeAt = at;\n    let previousBeforePoint = Editor.point(editor, at, {\n      edge: 'end'\n    });\n    const stackLength = matchString.length + 1;\n    const stack = Array(stackLength);\n    let count = 0;\n\n    while (true) {\n      var _options$match;\n\n      const beforePoint = Editor.before(editor, beforeAt, options); // not found\n\n      if (!beforePoint) return; // stop looking outside of current block\n\n      if (isRangeAcrossBlocks(editor, {\n        at: {\n          anchor: beforePoint,\n          focus: previousBeforePoint\n        }\n      })) {\n        return;\n      }\n\n      const beforeString = Editor.string(editor, {\n        anchor: beforePoint,\n        focus: previousBeforePoint\n      });\n      let beforeStringToMatch = beforeString;\n\n      if (unitOffset && stackLength) {\n        stack.unshift({\n          point: beforePoint,\n          text: beforeString\n        });\n        stack.pop();\n        beforeStringToMatch = map_1(stack.slice(0, -1), 'text').join('');\n      }\n\n      if (matchString === beforeStringToMatch || (_options$match = options.match) !== null && _options$match !== void 0 && _options$match.call(options, {\n        beforeString: beforeStringToMatch,\n        beforePoint,\n        at\n      })) {\n        if (options.afterMatch) {\n          if (stackLength && unitOffset) {\n            var _stack;\n\n            point = (_stack = stack[stack.length - 1]) === null || _stack === void 0 ? void 0 : _stack.point;\n            return !!point;\n          }\n\n          point = previousBeforePoint;\n          return true;\n        }\n\n        point = beforePoint;\n        return true;\n      }\n\n      previousBeforePoint = beforePoint;\n      beforeAt = beforePoint;\n      count += 1;\n\n      if (!options.skipInvalid) {\n        if (!matchString || count > matchString.length) return;\n      }\n    }\n  });\n  return point;\n};\n/**\n * Get the point from a location (default: selection).\n * If the location is a range, get the anchor point.\n * If the location is a path, get the point at this path with offset 0.\n * If `focus` is true, get the focus point.\n */\n\n\nconst getPointFromLocation = (editor, {\n  at = editor.selection,\n  focus\n} = {}) => {\n  let point;\n  if (Range.isRange(at)) point = !focus ? at.anchor : at.focus;\n  if (Point.isPoint(at)) point = at;\n  if (Path.isPath(at)) point = {\n    path: at,\n    offset: 0\n  };\n  return point;\n};\n/**\n * If the start point is inside an inline void, get the point before or after it.\n */\n\n\nconst getPointNextToVoid = (editor, {\n  at,\n  after\n}) => {\n  const startVoid = Editor.void(editor, {\n    at,\n    mode: 'highest'\n  });\n\n  if (startVoid) {\n    const blockAbove = getBlockAbove(editor, {\n      at\n    });\n\n    if (blockAbove) {\n      let nextPoint;\n\n      if (after) {\n        nextPoint = Editor.after(editor, at);\n      } else {\n        nextPoint = Editor.before(editor, at);\n      }\n\n      if (nextPoint && blockAbove && Path.isAncestor(blockAbove[1], nextPoint.path)) {\n        at = nextPoint;\n      }\n    }\n  }\n\n  return at;\n};\n/**\n * Query the node entry.\n */\n\n\nconst queryNode = (entry, {\n  filter,\n  allow,\n  exclude\n} = {}) => {\n  if (!entry) return false;\n\n  if (filter && !filter(entry)) {\n    return false;\n  }\n\n  if (allow) {\n    const allows = castArray_1(allow);\n\n    if (allows.length && !allows.includes(entry[0].type)) {\n      return false;\n    }\n  }\n\n  if (exclude) {\n    const excludes = castArray_1(exclude);\n\n    if (excludes.length && excludes.includes(entry[0].type)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Find the block before a block by id.\n * If not found, find the first block by id and return [null, its previous path]\n */\n\n\nconst getPreviousBlockById = (editor, id, query) => {\n  const entry = findNode(editor, {\n    match: {\n      id\n    }\n  });\n\n  if (entry) {\n    const prevEntry = Editor.previous(editor, {\n      at: entry[1]\n    });\n\n    if (prevEntry && prevEntry[0].id && Editor.isBlock(editor, prevEntry[0])) {\n      return prevEntry;\n    }\n  }\n\n  let found = false;\n  const nodeEntries = [...Editor.nodes(editor, {\n    mode: 'highest',\n    reverse: true,\n    match: _n => {\n      const n = _n; // filter nodes that are not blocks and without id.\n\n      if (!Editor.isBlock(editor, n) || !n.id) return false; // find the block then take the previous one.\n\n      if (n.id === id) {\n        found = true;\n        return false;\n      }\n\n      return found && n.id !== id && queryNode([n, []], query);\n    },\n    at: []\n  })];\n\n  if (nodeEntries.length) {\n    return nodeEntries[0];\n  }\n\n  if (!found) return;\n  const firstNodeEntry = [...Editor.nodes(editor, {\n    mode: 'highest',\n    match: _n => {\n      const n = _n;\n      return Editor.isBlock(editor, n) && !!n.id && queryNode([n, []], query);\n    },\n    at: []\n  })];\n\n  if (firstNodeEntry.length) {\n    const [, path] = firstNodeEntry[0];\n    path[path.length - 1] = path[path.length - 1] - 1;\n    return [null, path];\n  }\n};\n\nconst getPreviousPath = path => {\n  if (path.length === 0) return;\n  const last = path[path.length - 1];\n  if (last <= 0) return;\n  return path.slice(0, -1).concat(last - 1);\n};\n/**\n * Get range from {@link getPointBefore} to the end point of `at`.\n */\n\n\nconst getRangeBefore = (editor, at, options) => {\n  const anchor = getPointBefore(editor, at, options);\n  if (!anchor) return;\n  const focus = Editor.point(editor, at, {\n    edge: 'end'\n  });\n  return {\n    anchor,\n    focus\n  };\n};\n/**\n * Get the range from the start of the block above a location (default: selection) to the location.\n */\n\n\nconst getRangeFromBlockStart = (editor, options = {}) => {\n  var _getBlockAbove;\n\n  const path = (_getBlockAbove = getBlockAbove(editor, options)) === null || _getBlockAbove === void 0 ? void 0 : _getBlockAbove[1];\n  if (!path) return;\n  const start = Editor.start(editor, path);\n  const focus = getPointFromLocation(editor, options);\n  if (!focus) return;\n  return {\n    anchor: start,\n    focus\n  };\n};\n/**\n * See {@link Editor.string}.\n * If `at` is not defined, return an empty string.\n */\n\n\nconst getText = (editor, at) => {\n  var _ref;\n\n  return (_ref = at && Editor.string(editor, at)) !== null && _ref !== void 0 ? _ref : '';\n};\n/**\n * Get the selected text.\n * Return empty string if no selection.\n */\n\n\nconst getSelectionText = editor => getText(editor, editor.selection);\n\nconst hasSingleChild = node => {\n  if (Text.isText(node)) {\n    return true;\n  }\n\n  return node.children.length === 1 && hasSingleChild(node.children[0]);\n};\n/**\n * Is an ancestor empty (empty text and no inline children).\n */\n\n\nconst isAncestorEmpty = (editor, node) => !Node$1.string(node) && !node.children.some(n => Editor.isInline(editor, n));\n/**\n * Is the block above the selection empty.\n */\n\n\nconst isBlockAboveEmpty = editor => {\n  var _getBlockAbove;\n\n  const block = (_getBlockAbove = getBlockAbove(editor)) === null || _getBlockAbove === void 0 ? void 0 : _getBlockAbove[0];\n  if (!block) return false;\n  return isAncestorEmpty(editor, block);\n};\n\nconst isText = Text.isText;\n/**\n * Is there empty text after the selection.\n * If there is no leaf after the selected leaf, return {@link Editor.isEnd}.\n * Else, check if the next leaves are empty.\n */\n\nconst isBlockTextEmptyAfterSelection = editor => {\n  if (!editor.selection) return false;\n  const blockAbove = getBlockAbove(editor);\n  if (!blockAbove) return false;\n  const cursor = editor.selection.focus;\n  const selectionParentEntry = getParent(editor, editor.selection);\n  if (!selectionParentEntry) return false;\n  const [, selectionParentPath] = selectionParentEntry;\n  if (!Editor.isEnd(editor, cursor, selectionParentPath)) return false;\n  const siblingNodes = getNextSiblingNodes(blockAbove, cursor.path);\n\n  if (siblingNodes.length) {\n    for (const siblingNode of siblingNodes) {\n      if (isText(siblingNode) && siblingNode.text) {\n        return false;\n      }\n    }\n  } else {\n    return Editor.isEnd(editor, cursor, blockAbove[1]);\n  }\n\n  return true;\n};\n/**\n * See {@link Range.isCollapsed}.\n * Return false if `range` is not defined.\n */\n\n\nconst isCollapsed = range => !!range && Range.isCollapsed(range);\n/**\n * {@link Editor.isEnd}. If point is null, return false.\n */\n\n\nconst isEnd = (editor, point, at) => !!point && Editor.isEnd(editor, point, at);\n/**\n * See {@link Range.isExpanded}.\n * Return false if `range` is not defined.\n */\n\n\nconst isExpanded = range => !!range && Range.isExpanded(range);\n/**\n * Is it the first child of the parent\n */\n\n\nconst isFirstChild = path => path[path.length - 1] === 0;\n/**\n * @returns whether the provided parameter is undefined.\n */\n\n\nfunction isUndefined(obj) {\n  return typeof obj === 'undefined';\n}\n\nfunction isNull(obj) {\n  return obj === null;\n}\n/**\n * @returns whether the provided parameter is undefined or null.\n */\n\n\nfunction isUndefinedOrNull(obj) {\n  return isUndefined(obj) || isNull(obj);\n}\n/**\n * @returns whether the provided parameter is defined.\n */\n\n\nfunction isDefined(arg) {\n  return !isUndefinedOrNull(arg);\n}\n/**\n * Is the mark defined in the selection.\n */\n\n\nconst isMarkActive = (editor, type) => {\n  return isDefined(getMark(editor, type));\n};\n\nconst AFTER_MATCH_REGEX = /^(\\s|$)/;\n/**\n * Is a point at the end of a word\n */\n\nconst isPointAtWordEnd = (editor, {\n  at\n}) => {\n  // Point after at\n  const after = Editor.after(editor, at); // From at to after\n\n  const afterRange = Editor.range(editor, at, after);\n  const afterText = getText(editor, afterRange); // Match regex on after text\n\n  return !!afterText.match(AFTER_MATCH_REGEX);\n};\n/**\n * Is the range in the same single text path.\n */\n\n\nconst isRangeInSingleText = at => {\n  const [start, end] = Range.edges(at);\n  return Path.equals(start.path, end.path);\n};\n/**\n * Is the selection focus at the end of its parent block.\n */\n\n\nconst isSelectionAtBlockEnd = editor => {\n  var _getBlockAbove, _editor$selection;\n\n  const path = (_getBlockAbove = getBlockAbove(editor)) === null || _getBlockAbove === void 0 ? void 0 : _getBlockAbove[1];\n  return !!path && isEnd(editor, (_editor$selection = editor.selection) === null || _editor$selection === void 0 ? void 0 : _editor$selection.focus, path);\n};\n/**\n * {@link Editor.isStart}. If point is null, return false.\n */\n\n\nconst isStart = (editor, point, at) => !!point && Editor.isStart(editor, point, at);\n/**\n * Is the selection focus at the start of its parent block.\n *\n * Supports the same options provided by {@link getBlockAbove}.\n */\n\n\nconst isSelectionAtBlockStart = (editor, options) => {\n  var _getBlockAbove, _editor$selection;\n\n  const path = (_getBlockAbove = getBlockAbove(editor, options)) === null || _getBlockAbove === void 0 ? void 0 : _getBlockAbove[1];\n  return !!path && isStart(editor, (_editor$selection = editor.selection) === null || _editor$selection === void 0 ? void 0 : _editor$selection.focus, path);\n};\n/**\n * Is the selection expanded.\n */\n\n\nconst isSelectionExpanded = editor => isExpanded(editor.selection);\n\nconst isTextByPath = (editor, path) => {\n  const node = Node$1.get(editor, path);\n  return Text.isText(node);\n};\n/**\n * Get `editor.pluginsByKey`\n */\n\n\nconst getPluginsByKey = editor => {\n  const plugins = {};\n\n  if (editor !== null && editor !== void 0 && editor.pluginsByKey) {\n    return editor.pluginsByKey;\n  }\n\n  return plugins;\n};\n/**\n * Get plugin options by plugin key.\n */\n\n\nconst getPlugin = (editor, key) => {\n  var _getPluginsByKey$key;\n\n  return (_getPluginsByKey$key = getPluginsByKey(editor)[key]) !== null && _getPluginsByKey$key !== void 0 ? _getPluginsByKey$key : {\n    key\n  };\n};\n/**\n * Get plugin type option by plugin key.\n */\n\n\nconst getPluginType = (editor, key) => {\n  var _ref, _getPlugin$type;\n\n  return (_ref = (_getPlugin$type = getPlugin(editor, key).type) !== null && _getPlugin$type !== void 0 ? _getPlugin$type : key) !== null && _ref !== void 0 ? _ref : '';\n};\n/**\n * Does the node match the type provided.\n */\n\n\nconst isType = (editor, node, key) => {\n  const keys = castArray_1(key);\n  keys.forEach(_key => {\n    if ((node === null || node === void 0 ? void 0 : node.type) === getPluginType(editor, _key)) return true;\n  });\n  return false;\n};\n\nconst escapeRegExp = text => {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\\\s]/g, '\\\\$&');\n};\n/**\n * Is the word at the point after a trigger (punctuation character)\n * https://github.com/ianstormtaylor/slate/blob/main/packages/slate/src/utils/string.ts#L6\n */\n\n\nconst isWordAfterTrigger = (editor, {\n  at,\n  trigger\n}) => {\n  // Point at the start of previous word (excluding punctuation)\n  const wordBefore = Editor.before(editor, at, {\n    unit: 'word'\n  }); // Point before wordBefore\n\n  const before = wordBefore && Editor.before(editor, wordBefore); // Range from before to start\n\n  const beforeRange = before && Editor.range(editor, before, at); // Before text\n\n  const beforeText = getText(editor, beforeRange); // Starts with char and ends with word characters\n\n  const escapedTrigger = escapeRegExp(trigger);\n  const beforeRegex = new RegExp(`^${escapedTrigger}([\\\\w|À-ÖØ-öø-ÿ|а-яА-ЯёЁ]+)$`); // Match regex on before text\n\n  const match = !!beforeText && beforeText.match(beforeRegex);\n  return {\n    range: beforeRange,\n    match\n  };\n};\n/**\n * Iterate through all of the nodes in the editor and break early for the first truthy match. Otherwise\n * returns false.\n */\n\n\nconst someNode = (editor, options) => {\n  return !!findNode(editor, options);\n};\n/**\n * Query the editor state.\n */\n\n\nconst queryEditor = (editor, {\n  filter,\n  selectionAtBlockStart,\n  selectionAtBlockEnd,\n  allow,\n  exclude,\n  at = editor.selection || []\n} = {}) => {\n  if (filter && !filter(editor) || selectionAtBlockStart && !isSelectionAtBlockStart(editor) || selectionAtBlockEnd && !isSelectionAtBlockEnd(editor)) {\n    return false;\n  }\n\n  const allows = castArray_1(allow);\n\n  if (allows.length && !someNode(editor, {\n    at,\n    match: {\n      type: allows\n    }\n  })) {\n    return false;\n  }\n\n  const excludes = castArray_1(exclude);\n\n  if (excludes.length && someNode(editor, {\n    at,\n    match: {\n      type: excludes\n    }\n  })) {\n    return false;\n  }\n\n  return true;\n};\n\nconst unsetNodes = (editor, props, options = {}) => {\n  return Transforms.unsetNodes(editor, props, options);\n};\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\n\n\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0:\n      return func.call(thisArg);\n\n    case 1:\n      return func.call(thisArg, args[0]);\n\n    case 2:\n      return func.call(thisArg, args[0], args[1]);\n\n    case 3:\n      return func.call(thisArg, args[0], args[1], args[2]);\n  }\n\n  return func.apply(thisArg, args);\n}\n\nvar _apply = apply;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeMax = Math.max;\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\n\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? func.length - 1 : start, 0);\n  return function () {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n\n    index = -1;\n    var otherArgs = Array(start + 1);\n\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n\n    otherArgs[start] = transform(array);\n    return _apply(func, this, otherArgs);\n  };\n}\n\nvar _overRest = overRest;\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\n\nfunction constant(value) {\n  return function () {\n    return value;\n  };\n}\n\nvar constant_1 = constant;\n\nvar defineProperty = function () {\n  try {\n    var func = _getNative(Object, 'defineProperty');\n\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nvar _defineProperty$1 = defineProperty;\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\n\nvar baseSetToString = !_defineProperty$1 ? identity_1 : function (func, string) {\n  return _defineProperty$1(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant_1(string),\n    'writable': true\n  });\n};\nvar _baseSetToString = baseSetToString;\n/** Used to detect hot functions by number of calls within a span of milliseconds. */\n\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeNow = Date.now;\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\n\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n  return function () {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n    lastCalled = stamp;\n\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n\n    return func.apply(undefined, arguments);\n  };\n}\n\nvar _shortOut = shortOut;\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\n\nvar setToString = _shortOut(_baseSetToString);\n\nvar _setToString = setToString;\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\n\nfunction baseRest(func, start) {\n  return _setToString(_overRest(func, start, identity_1), func + '');\n}\n\nvar _baseRest = baseRest;\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\n\nfunction isIterateeCall(value, index, object) {\n  if (!isObject_1(object)) {\n    return false;\n  }\n\n  var type = typeof index;\n\n  if (type == 'number' ? isArrayLike_1(object) && _isIndex(index, object.length) : type == 'string' && index in object) {\n    return eq_1(object[index], value);\n  }\n\n  return false;\n}\n\nvar _isIterateeCall = isIterateeCall;\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction nativeKeysIn(object) {\n  var result = [];\n\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nvar _nativeKeysIn = nativeKeysIn;\n/** Used for built-in method references. */\n\nvar objectProto$4 = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty$4 = objectProto$4.hasOwnProperty;\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeysIn(object) {\n  if (!isObject_1(object)) {\n    return _nativeKeysIn(object);\n  }\n\n  var isProto = _isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty$4.call(object, key)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nvar _baseKeysIn = baseKeysIn;\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\n\nfunction keysIn(object) {\n  return isArrayLike_1(object) ? _arrayLikeKeys(object, true) : _baseKeysIn(object);\n}\n\nvar keysIn_1 = keysIn;\n/** Used for built-in method references. */\n\nvar objectProto$3 = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty$3 = objectProto$3.hasOwnProperty;\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\n\nvar defaults = _baseRest(function (object, sources) {\n  object = Object(object);\n  var index = -1;\n  var length = sources.length;\n  var guard = length > 2 ? sources[2] : undefined;\n\n  if (guard && _isIterateeCall(sources[0], sources[1], guard)) {\n    length = 1;\n  }\n\n  while (++index < length) {\n    var source = sources[index];\n    var props = keysIn_1(source);\n    var propsIndex = -1;\n    var propsLength = props.length;\n\n    while (++propsIndex < propsLength) {\n      var key = props[propsIndex];\n      var value = object[key];\n\n      if (value === undefined || eq_1(value, objectProto$3[key]) && !hasOwnProperty$3.call(object, key)) {\n        object[key] = source[key];\n      }\n    }\n  }\n\n  return object;\n});\n\nvar defaults_1 = defaults;\n/**\n * Recursively apply an operation to children nodes with a query.\n */\n\nconst applyDeepToNodes = ({\n  node,\n  source,\n  apply,\n  query\n}) => {\n  const entry = [node, []];\n\n  if (queryNode(entry, query)) {\n    if (source instanceof Function) {\n      apply(node, source());\n    } else {\n      apply(node, source);\n    }\n  }\n\n  if (!isAncestor(node)) return;\n  node.children.forEach(child => {\n    applyDeepToNodes({\n      node: child,\n      source,\n      apply,\n      query\n    });\n  });\n};\n/**\n * Recursively merge a source object to children nodes with a query.\n */\n\n\nconst defaultsDeepToNodes = options => {\n  applyDeepToNodes({ ...options,\n    apply: defaults_1\n  });\n};\n/**\n * Merge a node at a location with the previous node of the same depth,\n * removing any empty containing nodes after the merge if necessary.\n */\n\n\nconst mergeNodes = (editor, options = {}) => {\n  Editor.withoutNormalizing(editor, () => {\n    let {\n      match,\n      at = editor.selection\n    } = options;\n    const {\n      mergeNode,\n      removeEmptyAncestor,\n      hanging = false,\n      voids = false,\n      mode = 'lowest'\n    } = options;\n\n    if (!at) {\n      return;\n    }\n\n    if (match == null) {\n      if (Path.isPath(at)) {\n        const [parent] = Editor.parent(editor, at);\n\n        match = n => parent.children.includes(n);\n      } else {\n        match = n => Editor.isBlock(editor, n);\n      }\n    }\n\n    if (!hanging && Range.isRange(at)) {\n      at = Editor.unhangRange(editor, at);\n    }\n\n    if (Range.isRange(at)) {\n      if (Range.isCollapsed(at)) {\n        at = at.anchor;\n      } else {\n        const [, end] = Range.edges(at);\n        const pointRef = Editor.pointRef(editor, end);\n        Transforms.delete(editor, {\n          at\n        });\n        at = pointRef.unref();\n\n        if (options.at == null) {\n          Transforms.select(editor, at);\n        }\n      }\n    }\n\n    const [current] = Editor.nodes(editor, {\n      at,\n      match,\n      voids,\n      mode\n    });\n    const prev = Editor.previous(editor, {\n      at,\n      match,\n      voids,\n      mode\n    });\n\n    if (!current || !prev) {\n      return;\n    }\n\n    const [node, path] = current;\n    const [prevNode, prevPath] = prev;\n\n    if (path.length === 0 || prevPath.length === 0) {\n      return;\n    }\n\n    const newPath = Path.next(prevPath);\n    const commonPath = Path.common(path, prevPath);\n    const isPreviousSibling = Path.isSibling(path, prevPath);\n    const levels = Array.from(Editor.levels(editor, {\n      at: path\n    }), ([n]) => n).slice(commonPath.length).slice(0, -1); // Determine if the merge will leave an ancestor of the path empty as a\n    // result, in which case we'll want to remove it after merging.\n\n    const emptyAncestor = Editor.above(editor, {\n      at: path,\n      mode: 'highest',\n      match: n => levels.includes(n) && Element.isElement(n) && hasSingleChild(n)\n    });\n    const emptyRef = emptyAncestor && Editor.pathRef(editor, emptyAncestor[1]);\n    let properties;\n    let position; // Ensure that the nodes are equivalent, and figure out what the position\n    // and extra properties of the merge will be.\n\n    if (Text.isText(node) && Text.isText(prevNode)) {\n      const {\n        text,\n        ...rest\n      } = node;\n      position = prevNode.text.length;\n      properties = rest;\n    } else if (Element.isElement(node) && Element.isElement(prevNode)) {\n      const {\n        children,\n        ...rest\n      } = node;\n      position = prevNode.children.length;\n      properties = rest;\n    } else {\n      throw new Error(`Cannot merge the node at path [${path}] with the previous sibling because it is not the same kind: ${JSON.stringify(node)} ${JSON.stringify(prevNode)}`);\n    } // If the node isn't already the next sibling of the previous node, move\n    // it so that it is before merging.\n\n\n    if (!isPreviousSibling) {\n      // DIFF\n      if (!mergeNode) {\n        Transforms.moveNodes(editor, {\n          at: path,\n          to: newPath,\n          voids\n        });\n      }\n    } // If there was going to be an empty ancestor of the node that was merged,\n    // we remove it from the tree.\n\n\n    if (emptyRef) {\n      // DIFF: start\n      if (!removeEmptyAncestor) {\n        Transforms.removeNodes(editor, {\n          at: emptyRef.current,\n          voids\n        });\n      } else {\n        const emptyPath = emptyRef.current;\n        emptyPath && removeEmptyAncestor(editor, {\n          at: emptyPath\n        });\n      } // DIFF: end\n\n    } // If the target node that we're merging with is empty, remove it instead\n    // of merging the two. This is a common rich text editor behavior to\n    // prevent losing formatting when deleting entire nodes when you have a\n    // hanging selection.\n    // DIFF: start\n\n\n    if (mergeNode) {\n      mergeNode(editor, {\n        at: path,\n        to: newPath\n      }); // DIFF: end\n    } else if (Element.isElement(prevNode) && Editor.isEmpty(editor, prevNode) || Text.isText(prevNode) && prevNode.text === '') {\n      Transforms.removeNodes(editor, {\n        at: prevPath,\n        voids\n      });\n    } else {\n      editor.apply({\n        type: 'merge_node',\n        path: newPath,\n        position,\n        properties\n      });\n    }\n\n    if (emptyRef) {\n      emptyRef.unref();\n    }\n  });\n};\n\nconst deleteFragment = (editor, options = {}) => {\n  Editor.withoutNormalizing(editor, () => {\n    const {\n      reverse = false,\n      unit = 'character',\n      distance = 1,\n      voids = false\n    } = options;\n    let {\n      at = editor.selection,\n      hanging = false\n    } = options;\n\n    if (!at) {\n      return;\n    }\n\n    if (Range.isRange(at) && Range.isCollapsed(at)) {\n      at = at.anchor;\n    }\n\n    if (Point.isPoint(at)) {\n      const furthestVoid = Editor.void(editor, {\n        at,\n        mode: 'highest'\n      });\n\n      if (!voids && furthestVoid) {\n        const [, voidPath] = furthestVoid;\n        at = voidPath;\n      } else {\n        const opts = {\n          unit,\n          distance\n        };\n        const target = reverse ? Editor.before(editor, at, opts) || Editor.start(editor, []) : Editor.after(editor, at, opts) || Editor.end(editor, []);\n        at = {\n          anchor: at,\n          focus: target\n        };\n        hanging = true;\n      }\n    }\n\n    if (Path.isPath(at)) {\n      Transforms.removeNodes(editor, {\n        at,\n        voids\n      });\n      return;\n    }\n\n    if (Range.isCollapsed(at)) {\n      return;\n    }\n\n    if (!hanging) {\n      at = Editor.unhangRange(editor, at, {\n        voids\n      });\n    }\n\n    let [start, end] = Range.edges(at);\n    const startBlock = Editor.above(editor, {\n      match: n => Editor.isBlock(editor, n),\n      at: start,\n      voids\n    });\n    const endBlock = Editor.above(editor, {\n      match: n => Editor.isBlock(editor, n),\n      at: end,\n      voids\n    });\n    const isAcrossBlocks = startBlock && endBlock && !Path.equals(startBlock[1], endBlock[1]);\n    const isSingleText = Path.equals(start.path, end.path);\n    const startVoid = voids ? null : Editor.void(editor, {\n      at: start,\n      mode: 'highest'\n    });\n    const endVoid = voids ? null : Editor.void(editor, {\n      at: end,\n      mode: 'highest'\n    }); // If the start or end points are inside an inline void, nudge them out.\n\n    if (startVoid) {\n      const before = Editor.before(editor, start);\n\n      if (before && startBlock && Path.isAncestor(startBlock[1], before.path)) {\n        start = before;\n      }\n    }\n\n    if (endVoid) {\n      const after = Editor.after(editor, end);\n\n      if (after && endBlock && Path.isAncestor(endBlock[1], after.path)) {\n        end = after;\n      }\n    } // Get the highest nodes that are completely inside the range, as well as\n    // the start and end nodes.\n\n\n    const matches = [];\n    let lastPath;\n\n    for (const entry of Editor.nodes(editor, {\n      at,\n      voids\n    })) {\n      const [node, path] = entry;\n\n      if (lastPath && Path.compare(path, lastPath) === 0) {\n        continue;\n      }\n\n      if (!voids && Editor.isVoid(editor, node) || !Path.isCommon(path, start.path) && !Path.isCommon(path, end.path)) {\n        matches.push(entry);\n        lastPath = path;\n      }\n    }\n\n    const pathRefs = Array.from(matches, ([, p]) => Editor.pathRef(editor, p));\n    const startRef = Editor.pointRef(editor, start);\n    const endRef = Editor.pointRef(editor, end);\n\n    if (!isSingleText && !startVoid) {\n      const point = startRef.current;\n      const [node] = Editor.leaf(editor, point);\n      const {\n        path\n      } = point;\n      const {\n        offset\n      } = start;\n      const text = node.text.slice(offset);\n      editor.apply({\n        type: 'remove_text',\n        path,\n        offset,\n        text\n      });\n    }\n\n    for (const pathRef of pathRefs) {\n      const path = pathRef.unref();\n      Transforms.removeNodes(editor, {\n        at: path,\n        voids\n      });\n    }\n\n    if (!endVoid) {\n      const point = endRef.current;\n      const [node] = Editor.leaf(editor, point);\n      const {\n        path\n      } = point;\n      const offset = isSingleText ? start.offset : 0;\n      const text = node.text.slice(offset, end.offset);\n      editor.apply({\n        type: 'remove_text',\n        path,\n        offset,\n        text\n      });\n    }\n\n    if (!isSingleText && isAcrossBlocks && endRef.current && startRef.current) {\n      // DIFF: allow custom mergeNodes\n      mergeNodes(editor, {\n        at: endRef.current,\n        hanging: true,\n        voids\n      });\n    }\n\n    const point = endRef.unref() || startRef.unref();\n\n    if (options.at == null && point) {\n      Transforms.select(editor, point);\n    }\n  });\n};\n\nconst insertNodes = (editor, props, options) => Transforms.insertNodes(editor, props, options);\n\nconst insertEmptyElement = (editor, type, options) => {\n  insertNodes(editor, {\n    type,\n    children: [{\n      text: ''\n    }]\n  }, getQueryOptions(editor, options));\n};\n/**\n * Move the children of a node to a path.\n * Returns the number of children moved.\n */\n\n\nconst moveChildren = (editor, {\n  at,\n  to,\n  match,\n  fromStartIndex = 0\n}) => {\n  let moved = 0;\n  const parentPath = Path.isPath(at) ? at : at[1];\n  const parentNode = Path.isPath(at) ? Node$1.get(editor, parentPath) : at[0];\n  if (!Editor.isBlock(editor, parentNode)) return moved;\n\n  for (let i = parentNode.children.length - 1; i >= fromStartIndex; i--) {\n    const childPath = [...parentPath, i];\n    const childNode = getNode(editor, childPath);\n\n    if (!match || childNode && match([childNode, childPath])) {\n      Transforms.moveNodes(editor, {\n        at: childPath,\n        to\n      });\n      moved++;\n    }\n  }\n\n  return moved;\n};\n/**\n * Remove mark and trigger `onChange` if collapsed selection.\n */\n\n\nconst removeMark = (editor, {\n  key,\n  at,\n  shouldChange = true,\n  ...rest\n}) => {\n  const selection = at !== null && at !== void 0 ? at : editor.selection;\n  key = castArray_1(key);\n\n  if (selection) {\n    if (Range.isRange(selection) && Range.isExpanded(selection)) {\n      Transforms.unsetNodes(editor, key, {\n        at: selection,\n        match: Text.isText,\n        split: true,\n        ...rest\n      });\n    } else if (editor.selection) {\n      const marks = { ...(Editor.marks(editor) || {})\n      };\n      key.forEach(k => {\n        delete marks[k];\n      });\n      editor.marks = marks;\n      shouldChange && editor.onChange();\n    }\n  }\n};\n/**\n * Select an editor at a target or an edge (start, end).\n */\n\n\nconst selectEditor = (editor, {\n  at,\n  edge,\n  focus\n}) => {\n  if (focus) {\n    ReactEditor.focus(editor);\n  }\n\n  let location = at;\n\n  if (edge === 'start') {\n    location = Editor.start(editor, []);\n  }\n\n  if (edge === 'end') {\n    location = Editor.end(editor, []);\n  }\n\n  if (location) {\n    Transforms.select(editor, location);\n  }\n};\n/**\n * Select the end point of the block above the selection.\n */\n\n\nconst selectEndOfBlockAboveSelection = editor => {\n  var _getBlockAbove;\n\n  const path = (_getBlockAbove = getBlockAbove(editor)) === null || _getBlockAbove === void 0 ? void 0 : _getBlockAbove[1];\n  path && Transforms.select(editor, Editor.end(editor, path));\n};\n/**\n * Set marks to selected text.\n */\n\n\nconst setMarks = (editor, marks, clear = []) => {\n  if (!editor.selection) return;\n  Editor.withoutNormalizing(editor, () => {\n    const clears = castArray_1(clear);\n    removeMark(editor, {\n      key: clears\n    });\n    removeMark(editor, {\n      key: Object.keys(marks)\n    });\n    Object.keys(marks).forEach(key => {\n      editor.addMark(key, marks[key]);\n    });\n  });\n};\n\nconst setNodes = (editor, props, options) => Transforms.setNodes(editor, props, options);\n/**\n * Add/remove marks in the selection.\n * @param editor\n * @param key mark to toggle\n * @param clear marks to clear when adding mark\n */\n\n\nconst toggleMark = (editor, {\n  key,\n  clear\n}) => {\n  if (!editor.selection) return;\n  Editor.withoutNormalizing(editor, () => {\n    const isActive = isMarkActive(editor, key);\n\n    if (isActive) {\n      removeMark(editor, {\n        key\n      });\n      return;\n    }\n\n    const clears = castArray_1(clear);\n    removeMark(editor, {\n      key: clears\n    });\n    editor.addMark(key, true);\n  });\n};\n\nconst ELEMENT_DEFAULT = 'p';\n/**\n * Toggle the type of the selected node.\n * Don't do anything if activeType === inactiveType.\n */\n\nconst toggleNodeType = (editor, options, editorNodesOptions) => {\n  const {\n    activeType,\n    inactiveType = getPluginType(editor, ELEMENT_DEFAULT)\n  } = options;\n  if (!activeType || !editor.selection) return;\n  const isActive = someNode(editor, { ...editorNodesOptions,\n    match: {\n      type: activeType\n    }\n  });\n  if (isActive && activeType === inactiveType) return;\n  setNodes(editor, {\n    type: isActive ? inactiveType : activeType\n  });\n};\n/**\n * Unwrap nodes with extended options.\n * See {@link Transforms.unwrapNodes}\n */\n\n\nconst unwrapNodes = (editor, options) => {\n  Transforms.unwrapNodes(editor, getQueryOptions(editor, options));\n};\n/**\n * {@link Transforms.wrapNodes}.\n */\n\n\nconst wrapNodes = (editor, element, options = {}) => {\n  unhangRange(editor, options);\n  Transforms.wrapNodes(editor, element, options);\n};\n/**\n * Unwrap if the node type is in selection.\n * Wrap otherwise.\n */\n\n\nconst toggleWrapNodes = (editor, type) => {\n  if (someNode(editor, {\n    match: {\n      type\n    }\n  })) {\n    unwrapNodes(editor, {\n      match: {\n        type\n      }\n    });\n  } else {\n    wrapNodes(editor, {\n      type,\n      children: []\n    });\n  }\n};\n\nconst createDocumentNode = (type = 'p', text = '', remaining = []) => [{\n  children: [{\n    type,\n    children: [{\n      text\n    }]\n  }, ...remaining]\n}];\n\nconst createNode = (type = 'p', text = '') => ({\n  type,\n  children: [{\n    text\n  }]\n});\n\nconst findHtmlParentElement = (el, nodeName) => {\n  if (!el || el.nodeName === nodeName) {\n    return el;\n  }\n\n  return findHtmlParentElement(el.parentElement, nodeName);\n};\n/**\n * Call a handler if defined\n */\n\n\nconst getHandler = (cb, ...args) => () => {\n  cb === null || cb === void 0 ? void 0 : cb(...args);\n};\n/**\n * Prevent default and call a handler if defined\n */\n\n\nconst getPreventDefaultHandler = (cb, ...args) => event => {\n  event.preventDefault();\n  cb === null || cb === void 0 ? void 0 : cb(...args);\n};\n/**\n * RegExps.\n * A URL must match #1 and then at least one of #2/#3.\n * Use two levels of REs to avoid REDOS.\n */\n\n\nconst protocolAndDomainRE = /^(?:\\w+:)?\\/\\/(\\S+)$/;\nconst localhostDomainRE = /^localhost[:?\\d]*(?:[^:?\\d]\\S*)?$/;\nconst nonLocalhostDomainRE = /^[^\\s.]+\\.\\S{2,}$/;\n/**\n * Loosely validate a URL `string`.\n */\n\nconst isUrl = string => {\n  if (typeof string !== 'string') {\n    return false;\n  }\n\n  const match = string.match(protocolAndDomainRE);\n\n  if (!match) {\n    return false;\n  }\n\n  const everythingAfterProtocol = match[1];\n\n  if (!everythingAfterProtocol) {\n    return false;\n  }\n\n  try {\n    new URL(string);\n  } catch (err) {\n    return false;\n  }\n\n  return localhostDomainRE.test(everythingAfterProtocol) || nonLocalhostDomainRE.test(everythingAfterProtocol);\n};\n\nconst isInlineNode = editor => node => Text.isText(node) || editor.isInline(node);\n\nconst makeBlockLazy = type => () => ({\n  type,\n  children: []\n});\n\nconst hasDifferentChildNodes = (descendants, isInline) => {\n  return descendants.some((descendant, index, arr) => {\n    const prevDescendant = arr[index - 1];\n\n    if (index !== 0) {\n      return isInline(descendant) !== isInline(prevDescendant);\n    }\n\n    return false;\n  });\n};\n/**\n * Handles 3rd constraint: \"Block nodes can only contain other blocks, or inline and text nodes.\"\n */\n\n\nconst normalizeDifferentNodeTypes = (descendants, isInline, makeDefaultBlock) => {\n  const hasDifferentNodes = hasDifferentChildNodes(descendants, isInline);\n  const {\n    fragment\n  } = descendants.reduce((memo, node) => {\n    if (hasDifferentNodes && isInline(node)) {\n      let block = memo.precedingBlock;\n\n      if (!block) {\n        block = makeDefaultBlock();\n        memo.precedingBlock = block;\n        memo.fragment.push(block);\n      }\n\n      block.children.push(node);\n    } else {\n      memo.fragment.push(node);\n      memo.precedingBlock = null;\n    }\n\n    return memo;\n  }, {\n    fragment: [],\n    precedingBlock: null\n  });\n  return fragment;\n};\n/**\n * Handles 1st constraint: \"All Element nodes must contain at least one Text descendant.\"\n */\n\n\nconst normalizeEmptyChildren = descendants => {\n  if (!descendants.length) {\n    return [{\n      text: ''\n    }];\n  }\n\n  return descendants;\n};\n\nconst normalize = (descendants, isInline, makeDefaultBlock) => {\n  descendants = normalizeEmptyChildren(descendants);\n  descendants = normalizeDifferentNodeTypes(descendants, isInline, makeDefaultBlock);\n  descendants = descendants.map(node => {\n    if (isElement(node)) {\n      return { ...node,\n        children: normalize(node.children, isInline, makeDefaultBlock)\n      };\n    }\n\n    return node;\n  });\n  return descendants;\n};\n/**\n * Normalize the descendants to a valid document fragment.\n */\n\n\nconst normalizeDescendantsToDocumentFragment = (editor, {\n  descendants\n}) => {\n  const isInline = isInlineNode(editor);\n  const defaultType = getPluginType(editor, ELEMENT_DEFAULT);\n  const makeDefaultBlock = makeBlockLazy(defaultType);\n  return normalize(descendants, isInline, makeDefaultBlock);\n};\n\nvar lib = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  /**\n   * Constants.\n   */\n\n  var IS_MAC = typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n  var MODIFIERS = {\n    alt: 'altKey',\n    control: 'ctrlKey',\n    meta: 'metaKey',\n    shift: 'shiftKey'\n  };\n  var ALIASES = {\n    add: '+',\n    break: 'pause',\n    cmd: 'meta',\n    command: 'meta',\n    ctl: 'control',\n    ctrl: 'control',\n    del: 'delete',\n    down: 'arrowdown',\n    esc: 'escape',\n    ins: 'insert',\n    left: 'arrowleft',\n    mod: IS_MAC ? 'meta' : 'control',\n    opt: 'alt',\n    option: 'alt',\n    return: 'enter',\n    right: 'arrowright',\n    space: ' ',\n    spacebar: ' ',\n    up: 'arrowup',\n    win: 'meta',\n    windows: 'meta'\n  };\n  var CODES = {\n    backspace: 8,\n    tab: 9,\n    enter: 13,\n    shift: 16,\n    control: 17,\n    alt: 18,\n    pause: 19,\n    capslock: 20,\n    escape: 27,\n    ' ': 32,\n    pageup: 33,\n    pagedown: 34,\n    end: 35,\n    home: 36,\n    arrowleft: 37,\n    arrowup: 38,\n    arrowright: 39,\n    arrowdown: 40,\n    insert: 45,\n    delete: 46,\n    meta: 91,\n    numlock: 144,\n    scrolllock: 145,\n    ';': 186,\n    '=': 187,\n    ',': 188,\n    '-': 189,\n    '.': 190,\n    '/': 191,\n    '`': 192,\n    '[': 219,\n    '\\\\': 220,\n    ']': 221,\n    '\\'': 222\n  };\n\n  for (var f = 1; f < 20; f++) {\n    CODES['f' + f] = 111 + f;\n  }\n  /**\n   * Is hotkey?\n   */\n\n\n  function isHotkey(hotkey, options, event) {\n    if (options && !('byKey' in options)) {\n      event = options;\n      options = null;\n    }\n\n    if (!Array.isArray(hotkey)) {\n      hotkey = [hotkey];\n    }\n\n    var array = hotkey.map(function (string) {\n      return parseHotkey(string, options);\n    });\n\n    var check = function check(e) {\n      return array.some(function (object) {\n        return compareHotkey(object, e);\n      });\n    };\n\n    var ret = event == null ? check : check(event);\n    return ret;\n  }\n\n  function isCodeHotkey(hotkey, event) {\n    return isHotkey(hotkey, event);\n  }\n\n  function isKeyHotkey(hotkey, event) {\n    return isHotkey(hotkey, {\n      byKey: true\n    }, event);\n  }\n  /**\n   * Parse.\n   */\n\n\n  function parseHotkey(hotkey, options) {\n    var byKey = options && options.byKey;\n    var ret = {}; // Special case to handle the `+` key since we use it as a separator.\n\n    hotkey = hotkey.replace('++', '+add');\n    var values = hotkey.split('+');\n    var length = values.length; // Ensure that all the modifiers are set to false unless the hotkey has them.\n\n    for (var k in MODIFIERS) {\n      ret[MODIFIERS[k]] = false;\n    }\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var value = _step.value;\n        var optional = value.endsWith('?') && value.length > 1;\n\n        if (optional) {\n          value = value.slice(0, -1);\n        }\n\n        var name = toKeyName(value);\n        var modifier = MODIFIERS[name];\n\n        if (length === 1 || !modifier) {\n          if (byKey) {\n            ret.key = name;\n          } else {\n            ret.which = toKeyCode(value);\n          }\n        }\n\n        if (modifier) {\n          ret[modifier] = optional ? null : true;\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return ret;\n  }\n  /**\n   * Compare.\n   */\n\n\n  function compareHotkey(object, event) {\n    for (var key in object) {\n      var expected = object[key];\n      var actual = void 0;\n\n      if (expected == null) {\n        continue;\n      }\n\n      if (key === 'key' && event.key != null) {\n        actual = event.key.toLowerCase();\n      } else if (key === 'which') {\n        actual = expected === 91 && event.which === 93 ? 91 : event.which;\n      } else {\n        actual = event[key];\n      }\n\n      if (actual == null && expected === false) {\n        continue;\n      }\n\n      if (actual !== expected) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Utils.\n   */\n\n\n  function toKeyCode(name) {\n    name = toKeyName(name);\n    var code = CODES[name] || name.toUpperCase().charCodeAt(0);\n    return code;\n  }\n\n  function toKeyName(name) {\n    name = name.toLowerCase();\n    name = ALIASES[name] || name;\n    return name;\n  }\n  /**\n   * Export.\n   */\n\n\n  exports.default = isHotkey;\n  exports.isHotkey = isHotkey;\n  exports.isCodeHotkey = isCodeHotkey;\n  exports.isKeyHotkey = isKeyHotkey;\n  exports.parseHotkey = parseHotkey;\n  exports.compareHotkey = compareHotkey;\n  exports.toKeyCode = toKeyCode;\n  exports.toKeyName = toKeyName;\n});\nvar isHotkey = unwrapExports(lib);\nlib.isHotkey;\nlib.isCodeHotkey;\nlib.isKeyHotkey;\nlib.parseHotkey;\nlib.compareHotkey;\nlib.toKeyCode;\nlib.toKeyName;\n\nconst onKeyDownToggleElement = (editor, {\n  type,\n  options: {\n    hotkey\n  }\n}) => e => {\n  const defaultType = getPluginType(editor, ELEMENT_DEFAULT);\n  if (!hotkey) return;\n  const hotkeys = castArray_1(hotkey);\n\n  for (const _hotkey of hotkeys) {\n    if (isHotkey(_hotkey, e)) {\n      e.preventDefault();\n      toggleNodeType(editor, {\n        activeType: type,\n        inactiveType: defaultType\n      });\n      return;\n    }\n  }\n};\n\nconst onKeyDownToggleMark = (editor, {\n  type,\n  options: {\n    hotkey,\n    clear\n  }\n}) => e => {\n  if (!hotkey) return;\n\n  if (isHotkey(hotkey, e)) {\n    e.preventDefault();\n    toggleMark(editor, {\n      key: type,\n      clear\n    });\n  }\n};\n\nconst DefaultLeaf = ({\n  attributes,\n  children,\n  text,\n  leaf,\n  editor,\n  nodeProps,\n  ...props\n}) => /*#__PURE__*/React.createElement(\"span\", _extends({}, attributes, props), children);\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\n\n\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n\n  return array;\n}\n\nvar _arrayEach = arrayEach;\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && _defineProperty$1) {\n    _defineProperty$1(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nvar _baseAssignValue = baseAssignValue;\n/** Used for built-in method references. */\n\nvar objectProto$2 = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty$2 = objectProto$2.hasOwnProperty;\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n\n  if (!(hasOwnProperty$2.call(object, key) && eq_1(objValue, value)) || value === undefined && !(key in object)) {\n    _baseAssignValue(object, key, value);\n  }\n}\n\nvar _assignValue = assignValue;\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\n\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n    var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n\n    if (isNew) {\n      _baseAssignValue(object, key, newValue);\n    } else {\n      _assignValue(object, key, newValue);\n    }\n  }\n\n  return object;\n}\n\nvar _copyObject = copyObject;\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\n\nfunction baseAssign(object, source) {\n  return object && _copyObject(source, keys_1(source), object);\n}\n\nvar _baseAssign = baseAssign;\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\n\nfunction baseAssignIn(object, source) {\n  return object && _copyObject(source, keysIn_1(source), object);\n}\n\nvar _baseAssignIn = baseAssignIn;\n\nvar _cloneBuffer = createCommonjsModule(function (module, exports) {\n  /** Detect free variable `exports`. */\n  var freeExports = exports && !exports.nodeType && exports;\n  /** Detect free variable `module`. */\n\n  var freeModule = freeExports && 'object' == 'object' && module && !module.nodeType && module;\n  /** Detect the popular CommonJS extension `module.exports`. */\n\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n  /** Built-in value references. */\n\n  var Buffer = moduleExports ? _root.Buffer : undefined,\n      allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n  /**\n   * Creates a clone of  `buffer`.\n   *\n   * @private\n   * @param {Buffer} buffer The buffer to clone.\n   * @param {boolean} [isDeep] Specify a deep clone.\n   * @returns {Buffer} Returns the cloned buffer.\n   */\n\n  function cloneBuffer(buffer, isDeep) {\n    if (isDeep) {\n      return buffer.slice();\n    }\n\n    var length = buffer.length,\n        result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n    buffer.copy(result);\n    return result;\n  }\n\n  module.exports = cloneBuffer;\n});\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\n\n\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n  array || (array = Array(length));\n\n  while (++index < length) {\n    array[index] = source[index];\n  }\n\n  return array;\n}\n\nvar _copyArray = copyArray;\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\n\nfunction copySymbols(source, object) {\n  return _copyObject(source, _getSymbols(source), object);\n}\n\nvar _copySymbols = copySymbols;\n/** Built-in value references. */\n\nvar getPrototype = _overArg(Object.getPrototypeOf, Object);\n\nvar _getPrototype = getPrototype;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbolsIn = !nativeGetSymbols ? stubArray_1 : function (object) {\n  var result = [];\n\n  while (object) {\n    _arrayPush(result, _getSymbols(object));\n\n    object = _getPrototype(object);\n  }\n\n  return result;\n};\nvar _getSymbolsIn = getSymbolsIn;\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\n\nfunction copySymbolsIn(source, object) {\n  return _copyObject(source, _getSymbolsIn(source), object);\n}\n\nvar _copySymbolsIn = copySymbolsIn;\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\nfunction getAllKeysIn(object) {\n  return _baseGetAllKeys(object, keysIn_1, _getSymbolsIn);\n}\n\nvar _getAllKeysIn = getAllKeysIn;\n/** Used for built-in method references. */\n\nvar objectProto$1 = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty$1 = objectProto$1.hasOwnProperty;\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\n\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length); // Add properties assigned by `RegExp#exec`.\n\n  if (length && typeof array[0] == 'string' && hasOwnProperty$1.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n\n  return result;\n}\n\nvar _initCloneArray = initCloneArray;\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\n\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new _Uint8Array(result).set(new _Uint8Array(arrayBuffer));\n  return result;\n}\n\nvar _cloneArrayBuffer = cloneArrayBuffer;\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\n\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? _cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nvar _cloneDataView = cloneDataView;\n/** Used to match `RegExp` flags from their coerced string values. */\n\nvar reFlags = /\\w*$/;\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\n\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nvar _cloneRegExp = cloneRegExp;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = _Symbol ? _Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\n\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nvar _cloneSymbol = cloneSymbol;\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\n\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? _cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nvar _cloneTypedArray = cloneTypedArray;\n/** `Object#toString` result references. */\n\nvar boolTag$1 = '[object Boolean]',\n    dateTag$1 = '[object Date]',\n    mapTag$2 = '[object Map]',\n    numberTag$1 = '[object Number]',\n    regexpTag$1 = '[object RegExp]',\n    setTag$2 = '[object Set]',\n    stringTag$1 = '[object String]',\n    symbolTag$1 = '[object Symbol]';\nvar arrayBufferTag$1 = '[object ArrayBuffer]',\n    dataViewTag$1 = '[object DataView]',\n    float32Tag$1 = '[object Float32Array]',\n    float64Tag$1 = '[object Float64Array]',\n    int8Tag$1 = '[object Int8Array]',\n    int16Tag$1 = '[object Int16Array]',\n    int32Tag$1 = '[object Int32Array]',\n    uint8Tag$1 = '[object Uint8Array]',\n    uint8ClampedTag$1 = '[object Uint8ClampedArray]',\n    uint16Tag$1 = '[object Uint16Array]',\n    uint32Tag$1 = '[object Uint32Array]';\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\n\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n\n  switch (tag) {\n    case arrayBufferTag$1:\n      return _cloneArrayBuffer(object);\n\n    case boolTag$1:\n    case dateTag$1:\n      return new Ctor(+object);\n\n    case dataViewTag$1:\n      return _cloneDataView(object, isDeep);\n\n    case float32Tag$1:\n    case float64Tag$1:\n    case int8Tag$1:\n    case int16Tag$1:\n    case int32Tag$1:\n    case uint8Tag$1:\n    case uint8ClampedTag$1:\n    case uint16Tag$1:\n    case uint32Tag$1:\n      return _cloneTypedArray(object, isDeep);\n\n    case mapTag$2:\n      return new Ctor();\n\n    case numberTag$1:\n    case stringTag$1:\n      return new Ctor(object);\n\n    case regexpTag$1:\n      return _cloneRegExp(object);\n\n    case setTag$2:\n      return new Ctor();\n\n    case symbolTag$1:\n      return _cloneSymbol(object);\n  }\n}\n\nvar _initCloneByTag = initCloneByTag;\n/** Built-in value references. */\n\nvar objectCreate = Object.create;\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\n\nvar baseCreate = function () {\n  function object() {}\n\n  return function (proto) {\n    if (!isObject_1(proto)) {\n      return {};\n    }\n\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n\n    object.prototype = proto;\n    var result = new object();\n    object.prototype = undefined;\n    return result;\n  };\n}();\n\nvar _baseCreate = baseCreate;\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\n\nfunction initCloneObject(object) {\n  return typeof object.constructor == 'function' && !_isPrototype(object) ? _baseCreate(_getPrototype(object)) : {};\n}\n\nvar _initCloneObject = initCloneObject;\n/** `Object#toString` result references. */\n\nvar mapTag$1 = '[object Map]';\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\n\nfunction baseIsMap(value) {\n  return isObjectLike_1(value) && _getTag(value) == mapTag$1;\n}\n\nvar _baseIsMap = baseIsMap;\n/* Node.js helper references. */\n\nvar nodeIsMap = _nodeUtil && _nodeUtil.isMap;\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\n\nvar isMap = nodeIsMap ? _baseUnary(nodeIsMap) : _baseIsMap;\nvar isMap_1 = isMap;\n/** `Object#toString` result references. */\n\nvar setTag$1 = '[object Set]';\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\n\nfunction baseIsSet(value) {\n  return isObjectLike_1(value) && _getTag(value) == setTag$1;\n}\n\nvar _baseIsSet = baseIsSet;\n/* Node.js helper references. */\n\nvar nodeIsSet = _nodeUtil && _nodeUtil.isSet;\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\n\nvar isSet = nodeIsSet ? _baseUnary(nodeIsSet) : _baseIsSet;\nvar isSet_1 = isSet;\n/** Used to compose bitmasks for cloning. */\n\nvar CLONE_DEEP_FLAG$2 = 1,\n    CLONE_FLAT_FLAG$1 = 2,\n    CLONE_SYMBOLS_FLAG$2 = 4;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag$1 = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values supported by `_.clone`. */\n\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag$1] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\n\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG$2,\n      isFlat = bitmask & CLONE_FLAT_FLAG$1,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG$2;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n\n  if (result !== undefined) {\n    return result;\n  }\n\n  if (!isObject_1(value)) {\n    return value;\n  }\n\n  var isArr = isArray_1(value);\n\n  if (isArr) {\n    result = _initCloneArray(value);\n\n    if (!isDeep) {\n      return _copyArray(value, result);\n    }\n  } else {\n    var tag = _getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer_1(value)) {\n      return _cloneBuffer(value, isDeep);\n    }\n\n    if (tag == objectTag$1 || tag == argsTag || isFunc && !object) {\n      result = isFlat || isFunc ? {} : _initCloneObject(value);\n\n      if (!isDeep) {\n        return isFlat ? _copySymbolsIn(value, _baseAssignIn(result, value)) : _copySymbols(value, _baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n\n      result = _initCloneByTag(value, tag, isDeep);\n    }\n  } // Check for circular references and return its corresponding clone.\n\n\n  stack || (stack = new _Stack());\n  var stacked = stack.get(value);\n\n  if (stacked) {\n    return stacked;\n  }\n\n  stack.set(value, result);\n\n  if (isSet_1(value)) {\n    value.forEach(function (subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap_1(value)) {\n    value.forEach(function (subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull ? isFlat ? _getAllKeysIn : _getAllKeys : isFlat ? keysIn_1 : keys_1;\n  var props = isArr ? undefined : keysFunc(value);\n\n  _arrayEach(props || value, function (subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    } // Recursively populate clone (susceptible to call stack limits).\n\n\n    _assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n\n  return result;\n}\n\nvar _baseClone = baseClone;\n/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\n\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nvar last_1 = last;\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\n\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : length + start;\n  }\n\n  end = end > length ? length : end;\n\n  if (end < 0) {\n    end += length;\n  }\n\n  length = start > end ? 0 : end - start >>> 0;\n  start >>>= 0;\n  var result = Array(length);\n\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n\n  return result;\n}\n\nvar _baseSlice = baseSlice;\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\n\nfunction parent(object, path) {\n  return path.length < 2 ? object : _baseGet(object, _baseSlice(path, 0, -1));\n}\n\nvar _parent = parent;\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\n\nfunction baseUnset(object, path) {\n  path = _castPath(path, object);\n  object = _parent(object, path);\n  return object == null || delete object[_toKey(last_1(path))];\n}\n\nvar _baseUnset = baseUnset;\n/** `Object#toString` result references. */\n\nvar objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to infer the `Object` constructor. */\n\nvar objectCtorString = funcToString.call(Object);\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\n\nfunction isPlainObject$1(value) {\n  if (!isObjectLike_1(value) || _baseGetTag(value) != objectTag) {\n    return false;\n  }\n\n  var proto = _getPrototype(value);\n\n  if (proto === null) {\n    return true;\n  }\n\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;\n}\n\nvar isPlainObject_1 = isPlainObject$1;\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\n\nfunction customOmitClone(value) {\n  return isPlainObject_1(value) ? undefined : value;\n}\n\nvar _customOmitClone = customOmitClone;\n/** Built-in value references. */\n\nvar spreadableSymbol = _Symbol ? _Symbol.isConcatSpreadable : undefined;\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\n\nfunction isFlattenable(value) {\n  return isArray_1(value) || isArguments_1(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nvar _isFlattenable = isFlattenable;\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\n\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n  predicate || (predicate = _isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        _arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n\n  return result;\n}\n\nvar _baseFlatten = baseFlatten;\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\n\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? _baseFlatten(array, 1) : [];\n}\n\nvar flatten_1 = flatten;\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\n\nfunction flatRest(func) {\n  return _setToString(_overRest(func, undefined, flatten_1), func + '');\n}\n\nvar _flatRest = flatRest;\n/** Used to compose bitmasks for cloning. */\n\nvar CLONE_DEEP_FLAG$1 = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG$1 = 4;\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\n\nvar omit = _flatRest(function (object, paths) {\n  var result = {};\n\n  if (object == null) {\n    return result;\n  }\n\n  var isDeep = false;\n  paths = _arrayMap(paths, function (path) {\n    path = _castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n\n  _copyObject(object, _getAllKeysIn(object), result);\n\n  if (isDeep) {\n    result = _baseClone(result, CLONE_DEEP_FLAG$1 | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG$1, _customOmitClone);\n  }\n\n  var length = paths.length;\n\n  while (length--) {\n    _baseUnset(result, paths[length]);\n  }\n\n  return result;\n});\n\nvar omit_1 = omit;\nvar vanilla = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n\n  function create(createState) {\n    var state;\n    var listeners = new Set();\n\n    var setState = function setState(partial, replace) {\n      var nextState = typeof partial === 'function' ? partial(state) : partial;\n\n      if (nextState !== state) {\n        var _previousState = state;\n        state = replace ? nextState : Object.assign({}, state, nextState);\n        listeners.forEach(function (listener) {\n          return listener(state, _previousState);\n        });\n      }\n    };\n\n    var getState = function getState() {\n      return state;\n    };\n\n    var subscribeWithSelector = function subscribeWithSelector(listener, selector, equalityFn) {\n      if (selector === void 0) {\n        selector = getState;\n      }\n\n      if (equalityFn === void 0) {\n        equalityFn = Object.is;\n      }\n\n      var currentSlice = selector(state);\n\n      function listenerToAdd() {\n        var nextSlice = selector(state);\n\n        if (!equalityFn(currentSlice, nextSlice)) {\n          var _previousSlice = currentSlice;\n          listener(currentSlice = nextSlice, _previousSlice);\n        }\n      }\n\n      listeners.add(listenerToAdd);\n      return function () {\n        return listeners.delete(listenerToAdd);\n      };\n    };\n\n    var subscribe = function subscribe(listener, selector, equalityFn) {\n      if (selector || equalityFn) {\n        return subscribeWithSelector(listener, selector, equalityFn);\n      }\n\n      listeners.add(listener);\n      return function () {\n        return listeners.delete(listener);\n      };\n    };\n\n    var destroy = function destroy() {\n      return listeners.clear();\n    };\n\n    var api = {\n      setState: setState,\n      getState: getState,\n      subscribe: subscribe,\n      destroy: destroy\n    };\n    state = createState(setState, getState, api);\n    return api;\n  }\n\n  exports.default = create;\n});\nvar createVanillaStore = unwrapExports(vanilla);\n/**\n * Plate vanilla store.\n * @see zustand vanilla store\n */\n\nconst plateStore = createVanillaStore(() => ({}));\n/**\n * Plate store.\n * @see zustand store\n */\n\nconst usePlateStore = create(plateStore);\n/**\n * Store where the keys are event names and the values are editor ids.\n */\n\nconst eventEditorStore = createVanillaStore(() => ({}));\n/**\n * Store where the keys are event names and the values are editor ids.\n * @see zustand store\n */\n\nconst useEventEditorStore = create(eventEditorStore);\n\nconst getEventEditorState = () => eventEditorStore.getState();\n/**\n * - Get the last focused editor id if any\n * - Else, get the last blurred editor id if any\n * - Else, get the first editor id if any\n * - Else, `null`\n */\n\n\nconst getPlateId = () => {\n  const {\n    blur,\n    focus\n  } = getEventEditorState();\n  if (focus) return focus;\n  if (blur) return blur;\n  const state = plateStore.getState();\n  const keys = Object.keys(state);\n  if (!keys.length) return null;\n  return keys[0];\n};\n/**\n * If id is defined, get the state by id.\n * Else, get the first state.\n */\n\n\nconst getPlateState = id => {\n  const state = plateStore.getState();\n  if (id) return state[id];\n  const firstId = getPlateId();\n  if (firstId) return state[firstId];\n  return null;\n};\n\nconst getPlateEditorRef = id => {\n  var _getPlateState;\n\n  return (_getPlateState = getPlateState(id)) === null || _getPlateState === void 0 ? void 0 : _getPlateState.editor;\n};\n/**\n * Get editor ref which is never updated.\n */\n\n\nconst usePlateEditorRef = id => usePlateStore(() => getPlateEditorRef(id));\n\nconst usePlateKey = (key, id) => usePlateStore(useCallback(() => {\n  var _getPlateState;\n\n  return (_getPlateState = getPlateState(id)) === null || _getPlateState === void 0 ? void 0 : _getPlateState[key];\n}, [id, key]));\n\nconst DOM_HANDLERS = [// Clipboard Events\n'onCopy', 'onCopyCapture', 'onCut', 'onCutCapture', 'onPaste', 'onPasteCapture', // Composition Events\n'onCompositionEnd', 'onCompositionEndCapture', 'onCompositionStart', 'onCompositionStartCapture', 'onCompositionUpdate', 'onCompositionUpdateCapture', // Focus Events\n'onFocus', 'onFocusCapture', 'onBlur', 'onBlurCapture', // Form Events\n'onDOMBeforeInput', 'onBeforeInput', 'onBeforeInputCapture', 'onInput', 'onInputCapture', 'onReset', 'onResetCapture', 'onSubmit', 'onSubmitCapture', 'onInvalid', 'onInvalidCapture', // Image Events\n'onLoad', 'onLoadCapture', // Keyboard Events\n'onKeyDown', 'onKeyDownCapture', 'onKeyPress', 'onKeyPressCapture', 'onKeyUp', 'onKeyUpCapture', // Media Events\n'onAbort', 'onAbortCapture', 'onCanPlay', 'onCanPlayCapture', 'onCanPlayThrough', 'onCanPlayThroughCapture', 'onDurationChange', 'onDurationChangeCapture', 'onEmptied', 'onEmptiedCapture', 'onEncrypted', 'onEncryptedCapture', 'onEnded', 'onEndedCapture', 'onLoadedData', 'onLoadedDataCapture', 'onLoadedMetadata', 'onLoadedMetadataCapture', 'onLoadStart', 'onLoadStartCapture', 'onPause', 'onPauseCapture', 'onPlay', 'onPlayCapture', 'onPlaying', 'onPlayingCapture', 'onProgress', 'onProgressCapture', 'onRateChange', 'onRateChangeCapture', 'onSeeked', 'onSeekedCapture', 'onSeeking', 'onSeekingCapture', 'onStalled', 'onStalledCapture', 'onSuspend', 'onSuspendCapture', 'onTimeUpdate', 'onTimeUpdateCapture', 'onVolumeChange', 'onVolumeChangeCapture', 'onWaiting', 'onWaitingCapture', // MouseEvents\n'onAuxClick', 'onAuxClickCapture', 'onClick', 'onClickCapture', 'onContextMenu', 'onContextMenuCapture', 'onDoubleClick', 'onDoubleClickCapture', 'onDrag', 'onDragCapture', 'onDragEnd', 'onDragEndCapture', 'onDragEnter', 'onDragEnterCapture', 'onDragExit', 'onDragExitCapture', 'onDragLeave', 'onDragLeaveCapture', 'onDragOver', 'onDragOverCapture', 'onDragStart', 'onDragStartCapture', 'onDrop', 'onDropCapture', 'onMouseDown', 'onMouseDownCapture', 'onMouseEnter', 'onMouseLeave', 'onMouseMove', 'onMouseMoveCapture', 'onMouseOut', 'onMouseOutCapture', 'onMouseOver', 'onMouseOverCapture', 'onMouseUp', 'onMouseUpCapture', // Selection Events\n'onSelect', 'onSelectCapture', // Touch Events\n'onTouchCancel', 'onTouchCancelCapture', 'onTouchEnd', 'onTouchEndCapture', 'onTouchMove', 'onTouchMoveCapture', 'onTouchStart', 'onTouchStartCapture', // Pointer Events\n'onPointerDown', 'onPointerDownCapture', 'onPointerMove', 'onPointerMoveCapture', 'onPointerUp', 'onPointerUpCapture', 'onPointerCancel', 'onPointerCancelCapture', 'onPointerEnter', 'onPointerEnterCapture', 'onPointerLeave', 'onPointerLeaveCapture', 'onPointerOver', 'onPointerOverCapture', 'onPointerOut', 'onPointerOutCapture', 'onGotPointerCapture', 'onGotPointerCaptureCapture', 'onLostPointerCapture', 'onLostPointerCaptureCapture', // UI Events\n'onScroll', 'onScrollCapture', // Wheel Events\n'onWheel', 'onWheelCapture', // Animation Events\n'onAnimationStart', 'onAnimationStartCapture', 'onAnimationEnd', 'onAnimationEndCapture', 'onAnimationIteration', 'onAnimationIterationCapture', // Transition Events\n'onTransitionEnd', 'onTransitionEndCapture'];\n/**\n * @see {@link Decorate}.\n * Optimization: return undefined if empty list so Editable uses a memo.\n */\n\nconst pipeDecorate = editor => {\n  const decorates = editor.plugins.flatMap(plugin => {\n    var _plugin$decorate, _plugin$decorate2;\n\n    return (_plugin$decorate = (_plugin$decorate2 = plugin.decorate) === null || _plugin$decorate2 === void 0 ? void 0 : _plugin$decorate2.call(plugin, editor, plugin)) !== null && _plugin$decorate !== void 0 ? _plugin$decorate : [];\n  });\n  if (!decorates.length) return;\n  return entry => {\n    let ranges = [];\n\n    const addRanges = newRanges => {\n      if (newRanges !== null && newRanges !== void 0 && newRanges.length) ranges = [...ranges, ...newRanges];\n    };\n\n    decorates.forEach(decorate => {\n      addRanges(decorate(entry));\n    });\n    return ranges;\n  };\n};\n/**\n * Check if an event is overrided by a handler.\n */\n\n\nconst isEventHandled = (event, handler) => {\n  if (!handler) {\n    return false;\n  } // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n\n\n  const shouldTreatEventAsHandled = handler(event);\n\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled;\n  }\n\n  return event.isPropagationStopped();\n};\n/**\n * Generic pipe for handlers.\n * - Get all the plugins handlers by `handlerKey`.\n * - If there is no plugin handler or editable prop handler for this key, return `undefined`.\n * - Return a handler calling all the plugins handlers then the prop handler.\n * - Any handler returning true will stop the next handlers to be called, including slate internal handler.\n */\n\n\nconst pipeHandler = (editor, {\n  editableProps,\n  handlerKey\n}) => {\n  let pluginsHandlers = [];\n  pluginsHandlers = editor.plugins.flatMap(plugin => {\n    var _plugin$handlers$hand, _plugin$handlers, _plugin$handlers$hand2;\n\n    return (_plugin$handlers$hand = (_plugin$handlers = plugin.handlers) === null || _plugin$handlers === void 0 ? void 0 : (_plugin$handlers$hand2 = _plugin$handlers[handlerKey]) === null || _plugin$handlers$hand2 === void 0 ? void 0 : _plugin$handlers$hand2.call(_plugin$handlers, editor, plugin)) !== null && _plugin$handlers$hand !== void 0 ? _plugin$handlers$hand : [];\n  });\n  const propsHandler = editableProps === null || editableProps === void 0 ? void 0 : editableProps[handlerKey];\n  if (!pluginsHandlers.length && !propsHandler) return;\n  return event => {\n    const eventIsHandled = pluginsHandlers.some(handler => isEventHandled(event, handler));\n    if (eventIsHandled) return true;\n    return isEventHandled(event, propsHandler);\n  };\n};\n/**\n * Return if `element`, `text`, `nodeKey` is defined.\n * Return if `node.type` is not in `validTypes` (if defined).\n * Return if `value = node[nodeKey]` is not in `validNodeValues` (if defined).\n * If `classNames[value]` is defined, override `className` with it.\n * If `styleKey` is defined, override `style` with `[styleKey]: value`.\n */\n\n\nconst pluginInjectProps = (editor, {\n  key,\n  inject: {\n    props\n  }\n}, nodeProps) => {\n  var _transformNodeValue;\n\n  const {\n    element,\n    text,\n    className,\n    style\n  } = nodeProps;\n  const node = element !== null && element !== void 0 ? element : text;\n  if (!node) return;\n  if (!props) return;\n  const {\n    nodeKey = key,\n    styleKey = nodeKey,\n    validTypes,\n    classNames,\n    transformClassName,\n    transformNodeValue,\n    transformStyle,\n    validNodeValues,\n    defaultNodeValue\n  } = props;\n\n  if (validTypes && node.type && !validTypes.includes(node.type)) {\n    return;\n  }\n\n  const nodeValue = node[nodeKey]; // early return if there is now reason to add styles\n\n  if (!nodeValue || validNodeValues && !validNodeValues.includes(nodeValue) || nodeValue === defaultNodeValue) {\n    return;\n  }\n\n  const res = {};\n  const transformOptions = { ...nodeProps,\n    nodeValue\n  };\n  const value = (_transformNodeValue = transformNodeValue === null || transformNodeValue === void 0 ? void 0 : transformNodeValue(transformOptions)) !== null && _transformNodeValue !== void 0 ? _transformNodeValue : nodeValue;\n\n  if (element) {\n    res.className = clsx(className, `slate-${nodeKey}-${nodeValue}`);\n  }\n\n  if (classNames !== null && classNames !== void 0 && classNames[nodeValue] || transformClassName) {\n    var _transformClassName;\n\n    res.className = (_transformClassName = transformClassName === null || transformClassName === void 0 ? void 0 : transformClassName(transformOptions)) !== null && _transformClassName !== void 0 ? _transformClassName : clsx(className, classNames === null || classNames === void 0 ? void 0 : classNames[value]);\n  }\n\n  if (styleKey) {\n    var _transformStyle;\n\n    res.style = (_transformStyle = transformStyle === null || transformStyle === void 0 ? void 0 : transformStyle(transformOptions)) !== null && _transformStyle !== void 0 ? _transformStyle : { ...style,\n      [styleKey]: value\n    };\n  }\n\n  return res;\n};\n/**\n * Inject plugin props, editor.\n */\n\n\nconst pipeInjectProps = (editor, nodeProps) => {\n  editor.plugins.forEach(plugin => {\n    if (plugin.inject.props) {\n      const props = pluginInjectProps(editor, plugin, nodeProps);\n\n      if (props) {\n        nodeProps = { ...nodeProps,\n          ...props\n        };\n      }\n    }\n  });\n  return { ...nodeProps,\n    editor\n  };\n};\n/**\n * Get slate class name: slate-<type>\n */\n\n\nconst getSlateClass = type => `slate-${type}`;\n/**\n * Override node props with plugin props.\n * `props.element.attributes` are passed as `nodeProps`.\n * Extend the class name with the node type.\n */\n\n\nconst getRenderNodeProps = ({\n  attributes,\n  nodeProps,\n  props,\n  type\n}) => {\n  let newProps = {};\n\n  if (props) {\n    var _ref;\n\n    newProps = (_ref = typeof props === 'function' ? props(nodeProps) : props) !== null && _ref !== void 0 ? _ref : {};\n  }\n\n  if (!newProps.nodeProps && attributes) {\n    newProps.nodeProps = attributes;\n  }\n\n  nodeProps = { ...nodeProps,\n    ...newProps\n  };\n  const {\n    className\n  } = nodeProps;\n  return { ...nodeProps,\n    className: clsx(getSlateClass(type), className)\n  };\n};\n/**\n * Get a `Editable.renderElement` handler for `options.type`.\n * If the type is equals to the slate element type, render `options.component`.\n * Else, return `undefined` so the pipeline can check the next plugin.\n */\n\n\nconst pluginRenderElement = (editor, {\n  key,\n  type,\n  component: _component,\n  props\n}) => nodeProps => {\n  const {\n    element,\n    children: _children\n  } = nodeProps;\n\n  if (element.type === type) {\n    const Element = _component !== null && _component !== void 0 ? _component : DefaultElement;\n    const injectAboveComponents = editor.plugins.flatMap(o => {\n      var _o$inject$aboveCompon, _o$inject;\n\n      return (_o$inject$aboveCompon = (_o$inject = o.inject) === null || _o$inject === void 0 ? void 0 : _o$inject.aboveComponent) !== null && _o$inject$aboveCompon !== void 0 ? _o$inject$aboveCompon : [];\n    });\n    const injectBelowComponents = editor.plugins.flatMap(o => {\n      var _o$inject$belowCompon, _o$inject2;\n\n      return (_o$inject$belowCompon = (_o$inject2 = o.inject) === null || _o$inject2 === void 0 ? void 0 : _o$inject2.belowComponent) !== null && _o$inject$belowCompon !== void 0 ? _o$inject$belowCompon : [];\n    });\n    nodeProps = getRenderNodeProps({\n      attributes: element.attributes,\n      nodeProps,\n      props,\n      type\n    });\n    let children = _children;\n    injectBelowComponents.forEach(withHOC => {\n      const hoc = withHOC({ ...nodeProps,\n        key\n      });\n\n      if (hoc) {\n        children = hoc({ ...nodeProps,\n          children\n        });\n      }\n    });\n    let component = /*#__PURE__*/React.createElement(Element, nodeProps, children);\n    injectAboveComponents.forEach(withHOC => {\n      const hoc = withHOC({ ...nodeProps,\n        key\n      });\n\n      if (hoc) {\n        component = hoc({ ...nodeProps,\n          children: component\n        });\n      }\n    });\n    return component;\n  }\n};\n/**\n * @see {@link RenderElement}\n */\n\n\nconst pipeRenderElement = (editor, editableProps) => {\n  const renderElements = [];\n  editor.plugins.forEach(plugin => {\n    if (plugin.isElement) {\n      renderElements.push(pluginRenderElement(editor, plugin));\n    }\n  });\n  return nodeProps => {\n    const props = pipeInjectProps(editor, nodeProps);\n    let element;\n    renderElements.some(renderElement => {\n      element = renderElement(props);\n      return !!element;\n    });\n    if (element) return element;\n\n    if (editableProps !== null && editableProps !== void 0 && editableProps.renderElement) {\n      return editableProps.renderElement(props);\n    }\n\n    return /*#__PURE__*/React.createElement(DefaultElement, props);\n  };\n};\n/**\n * Get a `Editable.renderLeaf` handler for `options.type`.\n * If the type is equals to the slate leaf type and if the text is not empty, render `options.component`.\n * Else, return `children`.\n */\n\n\nconst pluginRenderLeaf = (editor, {\n  key,\n  type = key,\n  component,\n  props\n}) => nodeProps => {\n  const {\n    leaf,\n    children\n  } = nodeProps;\n\n  if (leaf[type] && !!leaf.text) {\n    const Leaf = component !== null && component !== void 0 ? component : DefaultLeaf;\n    nodeProps = getRenderNodeProps({\n      attributes: leaf.attributes,\n      props,\n      nodeProps,\n      type\n    });\n    return /*#__PURE__*/React.createElement(Leaf, nodeProps, children);\n  }\n\n  return children;\n};\n/**\n * @see {@link RenderLeaf}\n */\n\n\nconst pipeRenderLeaf = (editor, editableProps) => {\n  const renderLeafs = [];\n  editor.plugins.forEach(plugin => {\n    if (plugin.isLeaf && plugin.key) {\n      renderLeafs.push(pluginRenderLeaf(editor, plugin));\n    }\n  });\n  return nodeProps => {\n    const props = pipeInjectProps(editor, nodeProps);\n    renderLeafs.forEach(renderLeaf => {\n      const newChildren = renderLeaf(props);\n\n      if (newChildren !== undefined) {\n        props.children = newChildren;\n      }\n    });\n\n    if (editableProps !== null && editableProps !== void 0 && editableProps.renderLeaf) {\n      return editableProps.renderLeaf(props);\n    }\n\n    return /*#__PURE__*/React.createElement(DefaultLeaf, props);\n  };\n};\n\nconst useEditableProps = ({\n  id = 'main',\n  editableProps\n}) => {\n  const editor = usePlateEditorRef(id);\n  const keyPlugins = usePlateKey('keyPlugins', id);\n  const props = useMemo(() => {\n    if (!editor || !keyPlugins) return {};\n    const _props = {\n      decorate: pipeDecorate(editor),\n      renderElement: pipeRenderElement(editor, editableProps),\n      renderLeaf: pipeRenderLeaf(editor, editableProps)\n    };\n    DOM_HANDLERS.forEach(handlerKey => {\n      const handler = pipeHandler(editor, {\n        editableProps,\n        handlerKey\n      });\n\n      if (handler) {\n        _props[handlerKey] = handler;\n      }\n    });\n    return _props;\n  }, [editableProps, editor, keyPlugins]);\n  return useMemo(() => ({ ...omit_1(editableProps, [...DOM_HANDLERS, 'renderElement', 'renderLeaf']),\n    ...props\n  }), [editableProps, props]);\n};\n\nvar shallow_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n\n  function shallow(objA, objB) {\n    if (Object.is(objA, objB)) {\n      return true;\n    }\n\n    if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n      return false;\n    }\n\n    var keysA = Object.keys(objA);\n\n    if (keysA.length !== Object.keys(objB).length) {\n      return false;\n    }\n\n    for (var i = 0; i < keysA.length; i++) {\n      if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !Object.is(objA[keysA[i]], objB[keysA[i]])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  exports.default = shallow;\n});\nvar shallow = unwrapExports(shallow_1);\nconst set$2 = plateStore.setState;\n\nconst getStateById = (state, id) => {\n  var _state$id;\n\n  return (_state$id = state[id]) !== null && _state$id !== void 0 ? _state$id : {};\n};\n\nconst mergeState = (stateToMerge, stateId) => stateId && set$2(state => ({\n  [stateId]: { ...getStateById(state, stateId),\n    ...stateToMerge\n  }\n}));\n\nconst getSetStateByKey = (key, stateId) => (value, id = stateId) => id && set$2(state => {\n  if (!state[id]) return;\n  return {\n    [id]: { ...getStateById(state, id),\n      [key]: value\n    }\n  };\n});\n\nconst {\n  getState: get,\n  setState: set$1\n} = plateStore;\n\nconst usePlateActions = storeId => {\n  const storeKeys = usePlateStore(s => Object.keys(s), shallow);\n  const stateId = storeId !== null && storeId !== void 0 ? storeId : storeKeys[0];\n  return useMemo(() => {\n    const setEditor = getSetStateByKey('editor', stateId);\n    const setValue = getSetStateByKey('value', stateId);\n    return {\n      setEditor,\n      setValue,\n      clearState: (id = stateId) => id && set$1(state => {\n        delete state[id];\n      }),\n      setInitialState: ({\n        enabled = true,\n        value = [{\n          children: [{\n            text: ''\n          }]\n        }]\n      } = {}, id = stateId) => id && set$1(state => {\n        if (state[id]) return;\n        state[id] = {\n          enabled,\n          value\n        };\n      }),\n      resetEditor: (id = stateId) => {\n        const state = !!id && get()[id];\n        if (!state) return;\n        const {\n          editor\n        } = state;\n        setEditor(withPlate(createEditor$1(), {\n          id,\n          plugins: editor === null || editor === void 0 ? void 0 : editor.plugins\n        }), id);\n      },\n      setEnabled: getSetStateByKey('enabled', stateId)\n    };\n  }, [stateId]);\n};\n\nconst incrementKey = (key, id = getPlateId()) => {\n  var _state$key;\n\n  const state = getPlateState(id);\n  if (!state || !id) return;\n  const prev = (_state$key = state[key]) !== null && _state$key !== void 0 ? _state$key : 1;\n  plateStore.setState({\n    [id]: { ...state,\n      [key]: prev + 1\n    }\n  });\n};\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction assignMergeValue(object, key, value) {\n  if (value !== undefined && !eq_1(object[key], value) || value === undefined && !(key in object)) {\n    _baseAssignValue(object, key, value);\n  }\n}\n\nvar _assignMergeValue = assignMergeValue;\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\n\nfunction isArrayLikeObject(value) {\n  return isObjectLike_1(value) && isArrayLike_1(value);\n}\n\nvar isArrayLikeObject_1 = isArrayLikeObject;\n/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\n\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\nvar _safeGet = safeGet;\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\n\nfunction toPlainObject(value) {\n  return _copyObject(value, keysIn_1(value));\n}\n\nvar toPlainObject_1 = toPlainObject;\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\n\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = _safeGet(object, key),\n      srcValue = _safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    _assignMergeValue(object, key, stacked);\n\n    return;\n  }\n\n  var newValue = customizer ? customizer(objValue, srcValue, key + '', object, source, stack) : undefined;\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray_1(srcValue),\n        isBuff = !isArr && isBuffer_1(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray_1(srcValue);\n    newValue = srcValue;\n\n    if (isArr || isBuff || isTyped) {\n      if (isArray_1(objValue)) {\n        newValue = objValue;\n      } else if (isArrayLikeObject_1(objValue)) {\n        newValue = _copyArray(objValue);\n      } else if (isBuff) {\n        isCommon = false;\n        newValue = _cloneBuffer(srcValue, true);\n      } else if (isTyped) {\n        isCommon = false;\n        newValue = _cloneTypedArray(srcValue, true);\n      } else {\n        newValue = [];\n      }\n    } else if (isPlainObject_1(srcValue) || isArguments_1(srcValue)) {\n      newValue = objValue;\n\n      if (isArguments_1(objValue)) {\n        newValue = toPlainObject_1(objValue);\n      } else if (!isObject_1(objValue) || isFunction_1(objValue)) {\n        newValue = _initCloneObject(srcValue);\n      }\n    } else {\n      isCommon = false;\n    }\n  }\n\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n\n  _assignMergeValue(object, key, newValue);\n}\n\nvar _baseMergeDeep = baseMergeDeep;\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\n\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n\n  _baseFor(source, function (srcValue, key) {\n    stack || (stack = new _Stack());\n\n    if (isObject_1(srcValue)) {\n      _baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    } else {\n      var newValue = customizer ? customizer(_safeGet(object, key), srcValue, key + '', object, source, stack) : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n\n      _assignMergeValue(object, key, newValue);\n    }\n  }, keysIn_1);\n}\n\nvar _baseMerge = baseMerge;\n/**\n * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n * objects into destination objects that are passed thru.\n *\n * @private\n * @param {*} objValue The destination value.\n * @param {*} srcValue The source value.\n * @param {string} key The key of the property to merge.\n * @param {Object} object The parent object of `objValue`.\n * @param {Object} source The parent object of `srcValue`.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n * @returns {*} Returns the value to assign.\n */\n\nfunction customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n  if (isObject_1(objValue) && isObject_1(srcValue)) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, objValue);\n\n    _baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n\n    stack['delete'](srcValue);\n  }\n\n  return objValue;\n}\n\nvar _customDefaultsMerge = customDefaultsMerge;\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\n\nfunction createAssigner(assigner) {\n  return _baseRest(function (object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n    customizer = assigner.length > 3 && typeof customizer == 'function' ? (length--, customizer) : undefined;\n\n    if (guard && _isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n\n    object = Object(object);\n\n    while (++index < length) {\n      var source = sources[index];\n\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n\n    return object;\n  });\n}\n\nvar _createAssigner = createAssigner;\n/**\n * This method is like `_.merge` except that it accepts `customizer` which\n * is invoked to produce the merged values of the destination and source\n * properties. If `customizer` returns `undefined`, merging is handled by the\n * method instead. The `customizer` is invoked with six arguments:\n * (objValue, srcValue, key, object, source, stack).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} sources The source objects.\n * @param {Function} customizer The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @example\n *\n * function customizer(objValue, srcValue) {\n *   if (_.isArray(objValue)) {\n *     return objValue.concat(srcValue);\n *   }\n * }\n *\n * var object = { 'a': [1], 'b': [2] };\n * var other = { 'a': [3], 'b': [4] };\n *\n * _.mergeWith(object, other, customizer);\n * // => { 'a': [1, 3], 'b': [2, 4] }\n */\n\nvar mergeWith = _createAssigner(function (object, source, srcIndex, customizer) {\n  _baseMerge(object, source, srcIndex, customizer);\n});\n\nvar mergeWith_1 = mergeWith;\n/**\n * This method is like `_.defaults` except that it recursively assigns\n * default properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaults\n * @example\n *\n * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n * // => { 'a': { 'b': 2, 'c': 3 } }\n */\n\nvar defaultsDeep = _baseRest(function (args) {\n  args.push(undefined, _customDefaultsMerge);\n  return _apply(mergeWith_1, undefined, args);\n});\n\nvar defaultsDeep_1 = defaultsDeep;\n/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nvar _arrayAggregator = arrayAggregator;\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  _baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n\n  return accumulator;\n}\n\nvar _baseAggregator = baseAggregator;\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray_1(collection) ? _arrayAggregator : _baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, _baseIteratee(iteratee), accumulator);\n  };\n}\n\nvar _createAggregator = createAggregator;\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\nvar keyBy = _createAggregator(function (result, value, key) {\n  _baseAssignValue(result, key, value);\n});\n\nvar keyBy_1 = keyBy;\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\n\nvar merge = _createAssigner(function (object, source, srcIndex) {\n  _baseMerge(object, source, srcIndex);\n});\n\nvar merge_1 = merge;\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\n\nfunction baseValues(object, props) {\n  return _arrayMap(props, function (key) {\n    return object[key];\n  });\n}\n\nvar _baseValues = baseValues;\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\n\nfunction values(object) {\n  return object == null ? [] : _baseValues(object, keys_1(object));\n}\n\nvar values_1 = values;\n/**\n * Recursively merge nested plugins into the root plugins\n */\n\nconst mergeDeepPlugins = (editor, _plugin) => {\n  const plugin = { ..._plugin\n  };\n  const {\n    then\n  } = plugin;\n\n  if (then) {\n    delete plugin.then;\n    const {\n      plugins: pluginPlugins\n    } = plugin;\n    const pluginThen = mergeDeepPlugins(editor, defaultsDeep_1(then(editor, plugin), plugin)); // merge plugins by key\n\n    if (pluginPlugins && pluginThen.plugins) {\n      const merged = merge_1(keyBy_1(pluginPlugins, 'key'), keyBy_1(pluginThen.plugins, 'key'));\n      pluginThen.plugins = values_1(merged);\n    }\n\n    return pluginThen;\n  }\n\n  return plugin;\n};\n\nconst setDefaultPlugin = plugin => {\n  if (plugin.type === undefined) plugin.type = plugin.key;\n  if (!plugin.options) plugin.options = {};\n  if (!plugin.inject) plugin.inject = {};\n  if (!plugin.editor) plugin.editor = {};\n  return plugin;\n};\n/**\n * Recursively merge plugin.plugins into editor.plugins and editor.pluginsByKey\n */\n\n\nconst flattenDeepPlugins = (editor, plugins) => {\n  if (!plugins) return;\n  plugins.forEach(plugin => {\n    let p = setDefaultPlugin(plugin);\n    p = mergeDeepPlugins(editor, p);\n    editor.plugins.push(p);\n    editor.pluginsByKey[p.key] = p;\n    flattenDeepPlugins(editor, p.plugins);\n  });\n};\n/**\n * Recursive deep merge of each plugin from `overrideByKey`\n * into plugin with same key (plugin > plugin.plugins).\n */\n\n\nconst overridePluginsByKey = (plugin, overrideByKey = {}, nested) => {\n  var _overrideByKey$plugin;\n\n  if (overrideByKey[plugin.key]) {\n    const {\n      plugins: pluginOverridesPlugins,\n      then: pluginOverridesThen,\n      ...pluginOverrides\n    } = overrideByKey[plugin.key]; // override plugin\n\n    plugin = defaultsDeep_1(pluginOverrides, plugin);\n\n    if (!nested) {\n      // concat new pluginOverrides.plugins to plugin.plugins\n      pluginOverridesPlugins === null || pluginOverridesPlugins === void 0 ? void 0 : pluginOverridesPlugins.forEach(pOverrides => {\n        if (!plugin.plugins) plugin.plugins = [];\n        const found = plugin.plugins.find(p => p.key === pOverrides.key);\n        if (!found) plugin.plugins.push(pOverrides);\n      });\n    }\n  }\n\n  if (plugin.plugins) {\n    // override plugin.plugins\n    plugin.plugins = plugin.plugins.map(p => overridePluginsByKey(p, overrideByKey, true));\n  }\n\n  const {\n    then\n  } = plugin;\n\n  if (then) {\n    // override plugin.then\n    plugin.then = (editor, p) => {\n      const pluginThen = {\n        key: plugin.key,\n        ...then(editor, p)\n      };\n      return defaultsDeep_1(overridePluginsByKey(pluginThen, overrideByKey), pluginThen);\n    };\n  } else if ((_overrideByKey$plugin = overrideByKey[plugin.key]) !== null && _overrideByKey$plugin !== void 0 && _overrideByKey$plugin.then) {\n    // TODO: recursvie\n    plugin.then = overrideByKey[plugin.key].then;\n  }\n\n  return plugin;\n};\n/**\n * Flatten deep plugins then set editor.plugins and editor.pluginsByKey\n */\n\n\nconst setPlatePlugins = (editor, plugins) => {\n  editor.plugins = [];\n  editor.pluginsByKey = {};\n  flattenDeepPlugins(editor, plugins); // override all the plugins one by one, so plugin.overrideByKey effects can be overridden by the next plugin\n\n  editor.plugins.forEach(plugin => {\n    if (plugin.overrideByKey) {\n      const newPlugins = editor.plugins.map(p => {\n        return overridePluginsByKey(p, plugin.overrideByKey);\n      });\n      editor.plugins = [];\n      editor.pluginsByKey = {}; // flatten again the overrides\n\n      flattenDeepPlugins(editor, newPlugins);\n    }\n  });\n  incrementKey('keyPlugins', editor.id);\n};\n/**\n * Create plugin factory with a default plugin.\n * - first param is the default plugin.\n * - the only required property of the default plugin is `key`.\n * - returns a plugin factory:\n *   - first param `override` can be used to (deeply) override the default plugin.\n *   - second param `overrideByKey` can be used to (deeply) override by key a nested plugin (in plugin.plugins).\n */\n\n\nconst createPluginFactory = defaultPlugin => (override, overrideByKey = {}) => {\n  overrideByKey[defaultPlugin.key] = override;\n  return overridePluginsByKey({ ...defaultPlugin\n  }, overrideByKey);\n};\n/**\n * Convert HTML string into HTML element.\n */\n\n\nconst htmlStringToDOMNode = (rawHtml, stripWhitespace = true) => {\n  const node = document.createElement('body');\n  node.innerHTML = rawHtml;\n\n  if (stripWhitespace) {\n    node.innerHTML = node.innerHTML.replace(/(\\r\\n|\\n|\\r|\\t)/gm, '');\n  }\n\n  return node;\n};\n/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n\nfunction isObject(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isPlainObject(o) {\n  var ctor, prot;\n  if (isObject(o) === false) return false; // If has modified constructor\n\n  ctor = o.constructor;\n  if (ctor === undefined) return true; // If has modified prototype\n\n  prot = ctor.prototype;\n  if (isObject(prot) === false) return false; // If constructor does not have an Object-specific method\n\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  } // Most likely a plain Object\n\n\n  return true;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\r\n * A weak map to hold anchor tokens.\r\n */\n\n\nvar ANCHOR = new WeakMap();\n/**\r\n * A weak map to hold focus tokens.\r\n */\n\nvar FOCUS = new WeakMap();\n/**\r\n * All tokens inherit from a single constructor for `instanceof` checking.\r\n */\n\nclass Token {}\n/**\r\n * Anchor tokens represent the selection's anchor point.\r\n */\n\n\nclass AnchorToken extends Token {\n  constructor() {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n    var {\n      offset,\n      path\n    } = props;\n    this.offset = offset;\n    this.path = path;\n  }\n\n}\n/**\r\n * Focus tokens represent the selection's focus point.\r\n */\n\n\nclass FocusToken extends Token {\n  constructor() {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n    var {\n      offset,\n      path\n    } = props;\n    this.offset = offset;\n    this.path = path;\n  }\n\n}\n/**\r\n * Add an anchor token to the end of a text node.\r\n */\n\n\nvar addAnchorToken = (text, token) => {\n  var offset = text.text.length;\n  ANCHOR.set(text, [offset, token]);\n};\n/**\r\n * Get the offset if a text node has an associated anchor token.\r\n */\n\n\nvar getAnchorOffset = text => {\n  return ANCHOR.get(text);\n};\n/**\r\n * Add a focus token to the end of a text node.\r\n */\n\n\nvar addFocusToken = (text, token) => {\n  var offset = text.text.length;\n  FOCUS.set(text, [offset, token]);\n};\n/**\r\n * Get the offset if a text node has an associated focus token.\r\n */\n\n\nvar getFocusOffset = text => {\n  return FOCUS.get(text);\n};\n\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys$1(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$1(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n/**\r\n * Resolve the descedants of a node by normalizing the children that can be\r\n * passed into a hyperscript creator function.\r\n */\n\n\nvar STRINGS = new WeakSet();\n\nvar resolveDescendants = children => {\n  var nodes = [];\n\n  var addChild = child => {\n    if (child == null) {\n      return;\n    }\n\n    var prev = nodes[nodes.length - 1];\n\n    if (typeof child === 'string') {\n      var text = {\n        text: child\n      };\n      STRINGS.add(text);\n      child = text;\n    }\n\n    if (Text.isText(child)) {\n      var c = child; // HACK: fix typescript complaining\n\n      if (Text.isText(prev) && STRINGS.has(prev) && STRINGS.has(c) && Text.equals(prev, c, {\n        loose: true\n      })) {\n        prev.text += c.text;\n      } else {\n        nodes.push(c);\n      }\n    } else if (Element.isElement(child)) {\n      nodes.push(child);\n    } else if (child instanceof Token) {\n      var n = nodes[nodes.length - 1];\n\n      if (!Text.isText(n)) {\n        addChild('');\n        n = nodes[nodes.length - 1];\n      }\n\n      if (child instanceof AnchorToken) {\n        addAnchorToken(n, child);\n      } else if (child instanceof FocusToken) {\n        addFocusToken(n, child);\n      }\n    } else {\n      throw new Error(\"Unexpected hyperscript child object: \".concat(child));\n    }\n  };\n\n  for (var child of children.flat(Infinity)) {\n    addChild(child);\n  }\n\n  return nodes;\n};\n/**\r\n * Create an anchor token.\r\n */\n\n\nfunction createAnchor(tagName, attributes, children) {\n  return new AnchorToken(attributes);\n}\n/**\r\n * Create an anchor and a focus token.\r\n */\n\n\nfunction createCursor(tagName, attributes, children) {\n  return [new AnchorToken(attributes), new FocusToken(attributes)];\n}\n/**\r\n * Create an `Element` object.\r\n */\n\n\nfunction createElement(tagName, attributes, children) {\n  return _objectSpread$1(_objectSpread$1({}, attributes), {}, {\n    children: resolveDescendants(children)\n  });\n}\n/**\r\n * Create a focus token.\r\n */\n\n\nfunction createFocus(tagName, attributes, children) {\n  return new FocusToken(attributes);\n}\n/**\r\n * Create a fragment.\r\n */\n\n\nfunction createFragment(tagName, attributes, children) {\n  return resolveDescendants(children);\n}\n/**\r\n * Create a `Selection` object.\r\n */\n\n\nfunction createSelection(tagName, attributes, children) {\n  var anchor = children.find(c => c instanceof AnchorToken);\n  var focus = children.find(c => c instanceof FocusToken);\n\n  if (!anchor || anchor.offset == null || anchor.path == null) {\n    throw new Error(\"The <selection> hyperscript tag must have an <anchor> tag as a child with `path` and `offset` attributes defined.\");\n  }\n\n  if (!focus || focus.offset == null || focus.path == null) {\n    throw new Error(\"The <selection> hyperscript tag must have a <focus> tag as a child with `path` and `offset` attributes defined.\");\n  }\n\n  return _objectSpread$1({\n    anchor: {\n      offset: anchor.offset,\n      path: anchor.path\n    },\n    focus: {\n      offset: focus.offset,\n      path: focus.path\n    }\n  }, attributes);\n}\n/**\r\n * Create a `Text` object.\r\n */\n\n\nfunction createText(tagName, attributes, children) {\n  var nodes = resolveDescendants(children);\n\n  if (nodes.length > 1) {\n    throw new Error(\"The <text> hyperscript tag must only contain a single node's worth of children.\");\n  }\n\n  var [node] = nodes;\n\n  if (node == null) {\n    node = {\n      text: ''\n    };\n  }\n\n  if (!Text.isText(node)) {\n    throw new Error(\"\\n    The <text> hyperscript tag can only contain text content as children.\");\n  } // COMPAT: If they used the <text> tag we want to guarantee that it won't be\n  // merge with other string children.\n\n\n  STRINGS.delete(node);\n  Object.assign(node, attributes);\n  return node;\n}\n/**\r\n * Create a top-level `Editor` object.\r\n */\n\n\nvar createEditor = makeEditor => (tagName, attributes, children) => {\n  var otherChildren = [];\n  var selectionChild;\n\n  for (var child of children) {\n    if (Range.isRange(child)) {\n      selectionChild = child;\n    } else {\n      otherChildren.push(child);\n    }\n  }\n\n  var descendants = resolveDescendants(otherChildren);\n  var selection = {};\n  var editor = makeEditor();\n  Object.assign(editor, attributes);\n  editor.children = descendants; // Search the document's texts to see if any of them have tokens associated\n  // that need incorporated into the selection.\n\n  for (var [node, path] of Node$1.texts(editor)) {\n    var anchor = getAnchorOffset(node);\n    var focus = getFocusOffset(node);\n\n    if (anchor != null) {\n      var [offset] = anchor;\n      selection.anchor = {\n        path,\n        offset\n      };\n    }\n\n    if (focus != null) {\n      var [_offset] = focus;\n      selection.focus = {\n        path,\n        offset: _offset\n      };\n    }\n  }\n\n  if (selection.anchor && !selection.focus) {\n    throw new Error(\"Slate hyperscript ranges must have both `<anchor />` and `<focus />` defined if one is defined, but you only defined `<anchor />`. For collapsed selections, use `<cursor />` instead.\");\n  }\n\n  if (!selection.anchor && selection.focus) {\n    throw new Error(\"Slate hyperscript ranges must have both `<anchor />` and `<focus />` defined if one is defined, but you only defined `<focus />`. For collapsed selections, use `<cursor />` instead.\");\n  }\n\n  if (selectionChild != null) {\n    editor.selection = selectionChild;\n  } else if (Range.isRange(selection)) {\n    editor.selection = selection;\n  }\n\n  return editor;\n};\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n/**\r\n * The default creators for Slate objects.\r\n */\n\n\nvar DEFAULT_CREATORS = {\n  anchor: createAnchor,\n  cursor: createCursor,\n  editor: createEditor(createEditor$1),\n  element: createElement,\n  focus: createFocus,\n  fragment: createFragment,\n  selection: createSelection,\n  text: createText\n};\n/**\r\n * Create a Slate hyperscript function with `options`.\r\n */\n\nvar createHyperscript = function createHyperscript() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var {\n    elements = {}\n  } = options;\n  var elementCreators = normalizeElements(elements);\n\n  var creators = _objectSpread(_objectSpread(_objectSpread({}, DEFAULT_CREATORS), elementCreators), options.creators);\n\n  var jsx = createFactory(creators);\n  return jsx;\n};\n/**\r\n * Create a Slate hyperscript function with `options`.\r\n */\n\n\nvar createFactory = creators => {\n  var jsx = function jsx(tagName, attributes) {\n    for (var _len = arguments.length, children = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      children[_key - 2] = arguments[_key];\n    }\n\n    var creator = creators[tagName];\n\n    if (!creator) {\n      throw new Error(\"No hyperscript creator found for tag: <\".concat(tagName, \">\"));\n    }\n\n    if (attributes == null) {\n      attributes = {};\n    }\n\n    if (!isPlainObject(attributes)) {\n      children = [attributes].concat(children);\n      attributes = {};\n    }\n\n    children = children.filter(child => Boolean(child)).flat();\n    var ret = creator(tagName, attributes, children);\n    return ret;\n  };\n\n  return jsx;\n};\n/**\r\n * Normalize a dictionary of element shorthands into creator functions.\r\n */\n\n\nvar normalizeElements = elements => {\n  var creators = {};\n\n  var _loop = function _loop(tagName) {\n    var props = elements[tagName];\n\n    if (typeof props !== 'object') {\n      throw new Error(\"Properties specified for a hyperscript shorthand should be an object, but for the custom element <\".concat(tagName, \">  tag you passed: \").concat(props));\n    }\n\n    creators[tagName] = (tagName, attributes, children) => {\n      return createElement('element', _objectSpread(_objectSpread({}, props), attributes), children);\n    };\n  };\n\n  for (var tagName in elements) {\n    _loop(tagName);\n  }\n\n  return creators;\n};\n/**\r\n * The default hyperscript factory that ships with Slate, without custom tags.\r\n */\n\n\nvar jsx = createHyperscript();\n\nconst deserializeHtmlNodeChildren = (editor, node) => {\n  return Array.from(node.childNodes).map(deserializeHtmlNode(editor)).flat();\n};\n/**\n * Deserialize HTML body element to Fragment.\n */\n\n\nconst htmlBodyToFragment = (editor, element) => {\n  if (element.nodeName === 'BODY') {\n    return jsx('fragment', {}, deserializeHtmlNodeChildren(editor, element));\n  }\n};\n/**\n * Deserialize HTML to break line.\n */\n\n\nconst htmlBrToNewLine = node => {\n  if (node.nodeName === 'BR') {\n    return '\\n';\n  }\n};\n/**\n * Get a deserializer by type, node names, class names and styles.\n */\n\n\nconst pluginDeserializeHtml = (plugin, {\n  element: el,\n  deserializeLeaf\n}) => {\n  const {\n    deserializeHtml: _deserializeHtml,\n    isElement: isElementRoot,\n    isLeaf: isLeafRoot,\n    type\n  } = plugin;\n  if (!_deserializeHtml) return;\n  let node;\n  const deserializeHtmls = castArray_1(_deserializeHtml);\n  const deserialized = deserializeHtmls.find(deserializeHtml => {\n    const {\n      validNodeName: nodeName = '*',\n      validStyle,\n      validClassName,\n      validAttribute,\n      attributeNames,\n      query,\n      isLeaf: isLeafRule,\n      isElement: isElementRule\n    } = deserializeHtml;\n    let {\n      getNode\n    } = deserializeHtml;\n    const isElement = isElementRule || isElementRoot;\n    const isLeaf = isLeafRule || isLeafRoot;\n\n    if (!deserializeLeaf && !isElement) {\n      return;\n    }\n\n    if (deserializeLeaf && !isLeaf) {\n      return;\n    }\n\n    if (query && !query(el)) {\n      return;\n    }\n\n    if (!getNode) {\n      if (isElement) {\n        getNode = () => ({\n          type\n        });\n      } else if (isLeaf) {\n        getNode = () => ({\n          [type]: true\n        });\n      } else {\n        return;\n      }\n    }\n\n    if (nodeName) {\n      const validNodeName = castArray_1(nodeName); // Ignore if el nodeName is not included in rule validNodeName (except *).\n\n      if (validNodeName.length && !validNodeName.includes(el.nodeName) && nodeName !== '*') return false;\n    } // Ignore if the rule className is not in el class list.\n\n\n    if (validClassName && !el.className.includes(validClassName)) return false;\n\n    if (validStyle) {\n      for (const [key, value] of Object.entries(validStyle)) {\n        var _plugin$inject$props;\n\n        const values = castArray_1(value); // Ignore if el style value is not included in rule style values (except *)\n\n        if (!values.includes(el.style[key]) && value !== '*') return false; // Ignore if el style value is falsy (for value *)\n\n        if (value === '*' && !el.style[key]) return false;\n        const defaultNodeValue = (_plugin$inject$props = plugin.inject.props) === null || _plugin$inject$props === void 0 ? void 0 : _plugin$inject$props.defaultNodeValue; // Ignore if the style value = plugin.inject.props.defaultNodeValue\n\n        if (defaultNodeValue && defaultNodeValue === el.style[key]) {\n          return false;\n        }\n      }\n    }\n\n    if (validAttribute) {\n      if (typeof validAttribute === 'string') {\n        if (!el.getAttributeNames().includes(validAttribute)) return false;\n      } else {\n        for (const [attributeName, attributeValue] of Object.entries(validAttribute)) {\n          const attributeValues = castArray_1(attributeValue);\n          const elAttribute = el.getAttribute(attributeName);\n          if (!elAttribute || !attributeValues.includes(elAttribute)) return false;\n        }\n      }\n    }\n\n    node = getNode(el);\n    if (!node) return;\n\n    if (attributeNames) {\n      const elementAttributes = {};\n      const elementAttributeNames = el.getAttributeNames();\n\n      for (const elementAttributeName of elementAttributeNames) {\n        if (attributeNames.includes(elementAttributeName)) {\n          elementAttributes[elementAttributeName] = el.getAttribute(elementAttributeName);\n        }\n      }\n\n      if (Object.keys(elementAttributes).length) {\n        node.attributes = elementAttributes;\n      }\n    }\n\n    return true;\n  });\n\n  if (deserialized) {\n    return { ...deserialized,\n      node: node\n    };\n  }\n};\n\nconst pipeDeserializeHtmlElement = (editor, element) => {\n  let result;\n  editor.plugins.reverse().some(plugin => {\n    result = pluginDeserializeHtml(plugin, {\n      element\n    });\n    return !!result;\n  });\n  return result;\n};\n/**\n * Deserialize HTML to Element.\n */\n\n\nconst htmlElementToElement = (editor, element) => {\n  const deserialized = pipeDeserializeHtmlElement(editor, element);\n\n  if (deserialized) {\n    var _node$children;\n\n    const {\n      node,\n      withoutChildren\n    } = deserialized;\n    let descendants = (_node$children = node.children) !== null && _node$children !== void 0 ? _node$children : deserializeHtmlNodeChildren(editor, element);\n\n    if (!descendants.length || withoutChildren) {\n      descendants = [{\n        text: ''\n      }];\n    }\n\n    return jsx('element', node, descendants);\n  }\n};\n/**\n * Recursively merge a source object to children nodes with a query.\n */\n\n\nconst mergeDeepToNodes = options => {\n  applyDeepToNodes({ ...options,\n    apply: merge_1\n  });\n};\n\nconst pipeDeserializeHtmlLeaf = (editor, element) => {\n  let node = {};\n  editor.plugins.reverse().forEach(plugin => {\n    const deserialized = pluginDeserializeHtml(plugin, {\n      element,\n      deserializeLeaf: true\n    });\n    if (!deserialized) return;\n    node = { ...node,\n      ...deserialized.node\n    };\n  });\n  return node;\n};\n/**\n * Deserialize HTML to TDescendant[] with marks on Text.\n * Build the leaf from the leaf deserializers of each plugin.\n */\n\n\nconst htmlElementToLeaf = (editor, element) => {\n  const node = pipeDeserializeHtmlLeaf(editor, element);\n  return deserializeHtmlNodeChildren(editor, element).reduce((arr, child) => {\n    if (!child) return arr;\n\n    if (isElement(child)) {\n      if (Object.keys(node).length) {\n        mergeDeepToNodes({\n          node: child,\n          source: node,\n          query: {\n            filter: ([n]) => Text.isText(n)\n          }\n        });\n      }\n\n      arr.push(child);\n    } else {\n      const attributes = { ...node\n      }; // attributes should not override child attributes\n\n      if (child.text) {\n        Object.keys(attributes).forEach(key => {\n          if (attributes[key] && child[key]) {\n            attributes[key] = child[key];\n          }\n        });\n      }\n\n      arr.push(jsx('text', attributes, child));\n    }\n\n    return arr;\n  }, []);\n};\n\nconst isHtmlText = node => node.nodeType === Node.TEXT_NODE;\n/**\n * Deserialize HTML text node to text.\n */\n//   if (isHtmlText(node)) {\n//     return node.nodeValue === '\\n' && null : node.textContent;\n//   }\n// };\n\n\nconst htmlTextNodeToString = node => {\n  if (isHtmlText(node)) {\n    return node.nodeValue === '\\n' ? null : node.textContent;\n  }\n};\n\nconst isHtmlElement = node => node.nodeType === Node.ELEMENT_NODE;\n/**\n * Deserialize HTML element or child node.\n */\n\n\nconst deserializeHtmlNode = editor => node => {\n  const textNode = htmlTextNodeToString(node);\n  if (textNode) return textNode;\n  if (!isHtmlElement(node)) return null; // break line\n\n  const breakLine = htmlBrToNewLine(node);\n  if (breakLine) return breakLine; // body\n\n  const fragment = htmlBodyToFragment(editor, node);\n  if (fragment) return fragment; // element\n\n  const element = htmlElementToElement(editor, node);\n  if (element) return element; // leaf\n\n  return htmlElementToLeaf(editor, node);\n};\n/**\n * Deserialize HTML element to fragment.\n */\n\n\nconst deserializeHtmlElement = (editor, element) => {\n  return deserializeHtmlNode(editor)(element);\n};\n/**\n * Deserialize HTML element to a valid document fragment.\n */\n\n\nconst deserializeHtml = (editor, {\n  element,\n  stripWhitespace = true\n}) => {\n  // for serializer\n  if (typeof element === 'string') {\n    element = htmlStringToDOMNode(element, stripWhitespace);\n  }\n\n  const fragment = deserializeHtmlElement(editor, element);\n  return normalizeDescendantsToDocumentFragment(editor, {\n    descendants: fragment\n  });\n};\n\nconst parseHtmlDocument = html => {\n  return new DOMParser().parseFromString(html, 'text/html');\n};\n\nconst KEY_DESERIALIZE_HTML = 'deserializeHtml';\n/**\n * Enables support for deserializing inserted content from HTML format to Slate format.\n */\n\nconst createDeserializeHtmlPlugin = createPluginFactory({\n  key: KEY_DESERIALIZE_HTML,\n  then: editor => ({\n    editor: {\n      insertData: {\n        format: 'text/html',\n        getFragment: ({\n          data\n        }) => {\n          const document = parseHtmlDocument(data);\n          return deserializeHtml(editor, {\n            element: document.body\n          });\n        }\n      }\n    }\n  })\n});\nconst KEY_DESERIALIZE_AST = 'deserializeAst';\n/**\n * Enables support for deserializing inserted content from Slate Ast format to Slate format\n * while apply a small bug fix.\n */\n\nconst createDeserializeAstPlugin = createPluginFactory({\n  key: KEY_DESERIALIZE_AST,\n  editor: {\n    insertData: {\n      format: 'application/x-slate-fragment',\n      getFragment: ({\n        data\n      }) => {\n        const decoded = decodeURIComponent(window.atob(data));\n        return JSON.parse(decoded);\n      }\n    }\n  }\n});\nconst {\n  setState: set\n} = eventEditorStore;\n/**\n * Set an editor id by event key.\n */\n\nconst setEventEditorId = (event, value) => set(() => ({\n  [event]: value\n}));\n\nconst KEY_EVENT_EDITOR = 'event-editor';\nconst createEventEditorPlugin = createPluginFactory({\n  key: KEY_EVENT_EDITOR,\n  handlers: {\n    onFocus: editor => () => {\n      setEventEditorId('focus', editor.id);\n    },\n    onBlur: editor => () => {\n      setEventEditorId('blur', editor.id);\n    }\n  }\n});\n/**\n * @see {@link withHistory}\n */\n\nconst createHistoryPlugin = createPluginFactory({\n  key: 'history',\n  withOverrides: withHistory\n});\nconst KEY_INLINE_VOID = 'inline-void';\n/**\n * Merge and register all the inline types and void types from the plugins and options,\n * using `editor.isInline` and `editor.isVoid`\n */\n\nconst withInlineVoid = editor => {\n  const {\n    isInline\n  } = editor;\n  const {\n    isVoid\n  } = editor;\n  const inlineTypes = [];\n  const voidTypes = [];\n  editor.plugins.forEach(plugin => {\n    if (!plugin.key) return;\n\n    if (plugin.isInline) {\n      inlineTypes.push(plugin.key);\n    }\n\n    if (plugin.isVoid) {\n      voidTypes.push(plugin.key);\n    }\n  });\n\n  editor.isInline = element => {\n    return inlineTypes.includes(element.type) ? true : isInline(element);\n  };\n\n  editor.isVoid = element => voidTypes.includes(element.type) ? true : isVoid(element);\n\n  return editor;\n};\n/**\n * @see {@link withInlineVoid}\n */\n\n\nconst createInlineVoidPlugin = createPluginFactory({\n  key: KEY_INLINE_VOID,\n  withOverrides: withInlineVoid\n});\n/**\n * Get all plugins having a defined `inject.pluginsByKey[plugin.key]`.\n * It includes `plugin` itself.\n */\n\nconst getInjectedPlugins = (editor, plugin) => {\n  const injectedPlugins = [];\n  editor.plugins.forEach(p => {\n    var _p$inject$pluginsByKe;\n\n    const injectedPlugin = (_p$inject$pluginsByKe = p.inject.pluginsByKey) === null || _p$inject$pluginsByKe === void 0 ? void 0 : _p$inject$pluginsByKe[plugin.key];\n    if (injectedPlugin) injectedPlugins.push(injectedPlugin);\n  });\n  return [plugin, ...injectedPlugins];\n};\n/**\n * Is the plugin disabled by another plugin.\n */\n\n\nconst pipeInsertDataQuery = (plugins, {\n  data,\n  dataTransfer\n}) => plugins.every(p => {\n  var _p$editor, _p$editor$insertData;\n\n  const query = (_p$editor = p.editor) === null || _p$editor === void 0 ? void 0 : (_p$editor$insertData = _p$editor.insertData) === null || _p$editor$insertData === void 0 ? void 0 : _p$editor$insertData.query;\n  return !query || query({\n    data,\n    dataTransfer\n  });\n});\n/**\n * Pipe preInsert then insertFragment.\n */\n\n\nconst pipeInsertFragment = (editor, injectedPlugins, {\n  fragment,\n  ...options\n}) => {\n  Editor.withoutNormalizing(editor, () => {\n    injectedPlugins.some(p => {\n      var _p$editor, _p$editor$insertData, _p$editor$insertData$;\n\n      return ((_p$editor = p.editor) === null || _p$editor === void 0 ? void 0 : (_p$editor$insertData = _p$editor.insertData) === null || _p$editor$insertData === void 0 ? void 0 : (_p$editor$insertData$ = _p$editor$insertData.preInsert) === null || _p$editor$insertData$ === void 0 ? void 0 : _p$editor$insertData$.call(_p$editor$insertData, fragment, options)) === true;\n    });\n    editor.insertFragment(fragment);\n  });\n};\n/**\n * Pipe editor.insertData.transformData\n */\n\n\nconst pipeTransformData = (plugins, {\n  data,\n  dataTransfer\n}) => {\n  plugins.forEach(p => {\n    var _p$editor, _p$editor$insertData;\n\n    const transformData = (_p$editor = p.editor) === null || _p$editor === void 0 ? void 0 : (_p$editor$insertData = _p$editor.insertData) === null || _p$editor$insertData === void 0 ? void 0 : _p$editor$insertData.transformData;\n    if (!transformData) return;\n    data = transformData(data, {\n      dataTransfer\n    });\n  });\n  return data;\n};\n/**\n * Pipe editor.insertData.transformFragment\n */\n\n\nconst pipeTransformFragment = (plugins, {\n  fragment,\n  ...options\n}) => {\n  plugins.forEach(p => {\n    var _p$editor, _p$editor$insertData;\n\n    const transformFragment = (_p$editor = p.editor) === null || _p$editor === void 0 ? void 0 : (_p$editor$insertData = _p$editor.insertData) === null || _p$editor$insertData === void 0 ? void 0 : _p$editor$insertData.transformFragment;\n    if (!transformFragment) return;\n    fragment = transformFragment(fragment, options);\n  });\n  return fragment;\n};\n\nconst withInsertData = editor => {\n  const {\n    insertData\n  } = editor;\n\n  editor.insertData = dataTransfer => {\n    const inserted = editor.plugins.reverse().some(plugin => {\n      var _fragment;\n\n      const insertDataOptions = plugin.editor.insertData;\n      if (!insertDataOptions) return false;\n      const injectedPlugins = getInjectedPlugins(editor, plugin);\n      const {\n        format,\n        getFragment\n      } = insertDataOptions;\n      if (!format) return false;\n      let data = dataTransfer.getData(format);\n      if (!data) return;\n\n      if (!pipeInsertDataQuery(injectedPlugins, {\n        data,\n        dataTransfer\n      })) {\n        return false;\n      }\n\n      data = pipeTransformData(injectedPlugins, {\n        data,\n        dataTransfer\n      });\n      let fragment = getFragment === null || getFragment === void 0 ? void 0 : getFragment({\n        data,\n        dataTransfer\n      });\n      if (!((_fragment = fragment) !== null && _fragment !== void 0 && _fragment.length)) return false;\n      fragment = pipeTransformFragment(injectedPlugins, {\n        fragment,\n        data,\n        dataTransfer\n      });\n      if (!fragment.length) return false;\n      pipeInsertFragment(editor, injectedPlugins, {\n        fragment,\n        data,\n        dataTransfer\n      });\n      return true;\n    });\n    if (inserted) return;\n    insertData(dataTransfer);\n  };\n\n  return editor;\n};\n\nconst KEY_INSERT_DATA = 'insertData';\nconst createInsertDataPlugin = createPluginFactory({\n  key: KEY_INSERT_DATA,\n  withOverrides: withInsertData\n});\n/**\n * @see {@link withReact}\n */\n\nconst createReactPlugin = createPluginFactory({\n  key: 'react',\n  withOverrides: withReact\n});\n/**\n * Apply `withInlineVoid` and all plate plugins `withOverrides`.\n * Overrides:\n * - `id`: id of the editor.\n * - `key`: random key for the <Slate> component so each time the editor is created, the component resets.\n * - `options`: Plate options\n */\n\nconst withPlate = (e, {\n  id = 'main',\n  plugins = [],\n  disableCorePlugins\n} = {}) => {\n  let editor = e;\n  editor.id = id;\n\n  if (!editor.key) {\n    editor.key = Math.random();\n  }\n\n  let allPlugins = [];\n\n  if (disableCorePlugins !== true) {\n    if (typeof disableCorePlugins !== 'object') {\n      allPlugins = [createReactPlugin(), createHistoryPlugin(), createEventEditorPlugin(), createInlineVoidPlugin(), createInsertDataPlugin(), createDeserializeAstPlugin(), createDeserializeHtmlPlugin()];\n    } else {\n      if (!disableCorePlugins.react) {\n        allPlugins.push(createReactPlugin());\n      }\n\n      if (!disableCorePlugins.history) {\n        allPlugins.push(createHistoryPlugin());\n      }\n\n      if (!disableCorePlugins.eventEditor) {\n        allPlugins.push(createEventEditorPlugin());\n      }\n\n      if (!disableCorePlugins.inlineVoid) {\n        allPlugins.push(createInlineVoidPlugin());\n      }\n\n      if (!disableCorePlugins.insertData) {\n        allPlugins.push(createInsertDataPlugin());\n      }\n\n      if (!disableCorePlugins.deserializeAst) {\n        allPlugins.push(createDeserializeAstPlugin());\n      }\n\n      if (!disableCorePlugins.deserializeHtml) {\n        allPlugins.push(createDeserializeHtmlPlugin());\n      }\n    }\n  }\n\n  allPlugins = [...allPlugins, ...plugins];\n  setPlatePlugins(editor, allPlugins); // withOverrides\n\n  editor.plugins.forEach(plugin => {\n    if (plugin.withOverrides) {\n      editor = plugin.withOverrides(editor, plugin);\n    }\n  });\n  return editor;\n};\n\nconst getPlateEnabled = id => {\n  var _getPlateState;\n\n  return (_getPlateState = getPlateState(id)) === null || _getPlateState === void 0 ? void 0 : _getPlateState.enabled;\n};\n\nconst usePlateEnabled = id => usePlateStore(useCallback(() => getPlateEnabled(id), [id]));\n/**\n * Effects to update the plate store from the options.\n * Dynamically updating the options will update the store state.\n */\n\n\nconst usePlateEffects = ({\n  id = 'main',\n  value,\n  editor: editorProp,\n  enabled: enabledProp = true,\n  initialValue,\n  normalizeInitialValue,\n  plugins,\n  disableCorePlugins\n}) => {\n  const {\n    setInitialState,\n    setValue,\n    setEditor,\n    setEnabled,\n    clearState\n  } = usePlateActions(id);\n  const enabled = usePlateEnabled(id);\n  const editor = usePlateEditorRef(id);\n  const prevEditorRef = useRef(editor); // Clear the state on unmount.\n\n  useEffect(() => () => {\n    clearState();\n  }, [clearState, id]); // Set initial state on mount\n\n  useEffect(() => {\n    setInitialState({\n      enabled: true,\n      value: []\n    });\n  }, [id, setInitialState]); // Set initialValue once\n\n  useEffect(() => {\n    initialValue && setValue(initialValue); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setValue]); // Slate.value\n\n  useEffect(() => {\n    value && setValue(value);\n    !initialValue && !value && setValue([{\n      children: [{\n        text: ''\n      }]\n    }]);\n  }, [initialValue, setValue, value]); // Dynamic enabled\n\n  useEffect(() => {\n    setEnabled(enabledProp);\n  }, [enabledProp, setEnabled]); // Unset the editor if enabled gets false\n\n  useEffect(() => {\n    if (editor && !enabled) {\n      setEditor(undefined);\n    }\n  }, [enabled, editor, setEditor]); // Set the editor if enabled and editor are defined\n\n  useEffect(() => {\n    if (!editor && enabled) {\n      const baseEditor = editorProp !== null && editorProp !== void 0 ? editorProp : createEditor$1();\n      setEditor(withPlate(baseEditor, {\n        id,\n        plugins: plugins,\n        disableCorePlugins\n      }));\n    }\n  }, [editorProp, id, plugins, setEditor, editor, enabled, disableCorePlugins]); // Dynamic plugins, no called when setting the editor\n\n  useEffect(() => {\n    const hasEditorUpdated = prevEditorRef.current === editor;\n\n    if (editor && hasEditorUpdated && plugins) {\n      setPlatePlugins(editor, plugins);\n    }\n  }, [plugins, editor]); // Force editor normalization\n\n  useEffect(() => {\n    if (editor && normalizeInitialValue) {\n      Editor.normalize(editor, {\n        force: true\n      });\n    }\n  }, [editor, normalizeInitialValue]); // Store previous editor\n\n  useEffect(() => {\n    prevEditorRef.current = editor;\n  }, [editor]);\n};\n\nconst getPlateValue = id => {\n  var _getPlateState;\n\n  return (_getPlateState = getPlateState(id)) === null || _getPlateState === void 0 ? void 0 : _getPlateState.value;\n};\n\nconst usePlateValue = id => usePlateStore(useCallback(() => getPlateValue(id), [id]));\n\nconst pipeOnChange = editor => {\n  const onChanges = editor.plugins.flatMap(plugin => {\n    var _plugin$handlers$onCh, _plugin$handlers, _plugin$handlers$onCh2;\n\n    return (_plugin$handlers$onCh = (_plugin$handlers = plugin.handlers) === null || _plugin$handlers === void 0 ? void 0 : (_plugin$handlers$onCh2 = _plugin$handlers.onChange) === null || _plugin$handlers$onCh2 === void 0 ? void 0 : _plugin$handlers$onCh2.call(_plugin$handlers, editor, plugin)) !== null && _plugin$handlers$onCh !== void 0 ? _plugin$handlers$onCh : [];\n  });\n  return nodes => {\n    return onChanges.some(handler => {\n      if (!handler) {\n        return false;\n      } // The custom event handler may return a boolean to specify whether the event\n      // shall be treated as being handled or not.\n\n\n      const shouldTreatEventAsHandled = handler(nodes);\n\n      if (shouldTreatEventAsHandled != null) {\n        return shouldTreatEventAsHandled;\n      }\n\n      return false;\n    });\n  };\n};\n/**\n * Get Slate props stored in a global store.\n */\n\n\nconst useSlateProps = ({\n  id,\n  onChange: _onChange\n} = {}) => {\n  const {\n    setValue\n  } = usePlateActions(id);\n  const editor = usePlateEditorRef(id);\n  const keyPlugins = usePlateKey('keyPlugins', id);\n  const value = usePlateValue(id);\n  const onChange = useCallback(newValue => {\n    if (!editor || !keyPlugins) return;\n    const eventIsHandled = pipeOnChange(editor)(newValue);\n\n    if (!eventIsHandled) {\n      _onChange === null || _onChange === void 0 ? void 0 : _onChange(newValue);\n    }\n\n    setValue(newValue);\n  }, [_onChange, editor, keyPlugins, setValue]);\n  return useMemo(() => ({\n    key: editor === null || editor === void 0 ? void 0 : editor.key,\n    editor,\n    onChange,\n    value\n  }), [editor, onChange, value]);\n};\n/**\n * Run `usePlateEffects` and props getter for `Slate` and `Editable` components.\n * Use `usePlateStore` to select store state.\n */\n\n\nconst usePlate = ({\n  id,\n  editor,\n  initialValue,\n  value,\n  plugins,\n  onChange,\n  editableProps,\n  normalizeInitialValue\n}) => {\n  usePlateEffects({\n    id,\n    plugins,\n    initialValue,\n    editor,\n    value,\n    normalizeInitialValue\n  });\n  return {\n    slateProps: useSlateProps({\n      id,\n      onChange\n    }),\n    editableProps: useEditableProps({\n      id,\n      editableProps\n    })\n  };\n};\n/**\n * {@link Editable} with plugins support.\n */\n\n\nconst EditablePlugins = props => {\n  const {\n    editableProps\n  } = usePlate(props);\n  return /*#__PURE__*/React.createElement(Editable, editableProps);\n};\n/**\n * Typed {@link useSlate} & PlateEditor.\n * Needs to be called in a child component of `Plate`.\n * Else, use `usePlateEditorState`.\n */\n\n\nconst useEditorState = () => useSlate();\n\nconst EditorStateEffect = /*#__PURE__*/memo(({\n  id\n}) => {\n  const editorState = useEditorState();\n  useEffect(() => {\n    incrementKey('keyEditor', id);\n  });\n  useEffect(() => {\n    incrementKey('keySelection', id);\n  }, [editorState.selection, id]);\n  return null;\n});\n\nconst Plate = ({\n  children,\n  renderEditable,\n  ...options\n}) => {\n  const {\n    slateProps,\n    editableProps\n  } = usePlate(options);\n  if (!slateProps.editor) return null;\n  const editable = /*#__PURE__*/React.createElement(Editable, editableProps);\n  return /*#__PURE__*/React.createElement(Slate, slateProps, children, /*#__PURE__*/React.createElement(EditorStateEffect, {\n    id: options.id\n  }), renderEditable ? renderEditable(editable) : editable);\n};\n/**\n * Typed {@link useSlateStatic} & PlateEditor.\n * Needs to be called in a child component of `Plate`.\n * Else, use `usePlateEditorRef`.\n */\n\n\nconst useEditorRef = () => useSlateStatic();\n\nconst isHtmlComment = node => node.nodeType === Node.COMMENT_NODE;\n\nconst parseHtmlElement = html => {\n  const {\n    body\n  } = parseHtmlDocument(html);\n  return body.firstElementChild;\n};\n/**\n * Create a React element wrapped in a Slate provider.\n * By default, it will use an empty editor.\n * TODO: allow other providers\n */\n\n\nconst createElementWithSlate = slateProps => {\n  const {\n    editor = withReact(createEditor$1()),\n    value = [],\n    onChange = () => {},\n    children,\n    ...props\n  } = slateProps || {};\n  return /*#__PURE__*/React.createElement(Slate, {\n    editor,\n    value,\n    onChange,\n    ...props\n  }, children);\n};\n/**\n * Remove all class names that do not start with one of preserveClassNames (`slate-` by default)\n */\n\n\nconst stripClassNames = (html, {\n  preserveClassNames = ['slate-']\n}) => {\n  const allClasses = html.split(/(class=\"[^\"]*\")/g);\n  let filteredHtml = '';\n  allClasses.forEach((item, index) => {\n    if (index % 2 === 0) {\n      return filteredHtml += item;\n    }\n\n    const preserveRegExp = new RegExp(preserveClassNames.map(cn => `${cn}[^\"\\\\s]*`).join('|'), 'g');\n    const slateClassNames = item.match(preserveRegExp);\n\n    if (slateClassNames) {\n      filteredHtml += `class=\"${slateClassNames.join(' ')}\"`;\n    }\n  });\n  return filteredHtml;\n};\n\nconst elementToHtml = (editor, {\n  props,\n  slateProps,\n  preserveClassNames\n}) => {\n  let html = `<div>${props.children}</div>`; // If no type provided we wrap children with div tag\n\n  if (!props.element.type) {\n    return html;\n  }\n\n  props = pipeInjectProps(editor, props); // Search for matching plugin based on element type\n\n  editor.plugins.some(plugin => {\n    var _plugin$serializeHtml, _plugin$serializeHtml2;\n\n    if (!plugin.isElement || plugin.serializeHtml === null || props.element.type !== plugin.type) return false; // Render element using picked plugins renderElement function and ReactDOM\n\n    html = renderToStaticMarkup(createElementWithSlate({ ...slateProps,\n      children: (_plugin$serializeHtml = (_plugin$serializeHtml2 = plugin.serializeHtml) === null || _plugin$serializeHtml2 === void 0 ? void 0 : _plugin$serializeHtml2.call(plugin, props)) !== null && _plugin$serializeHtml !== void 0 ? _plugin$serializeHtml : pluginRenderElement(editor, plugin)(props)\n    }));\n    html = stripClassNames(html, {\n      preserveClassNames\n    });\n    return true;\n  });\n  return html;\n};\n\nconst leafToHtml = (editor, {\n  props,\n  slateProps,\n  preserveClassNames\n}) => {\n  const {\n    children\n  } = props;\n  return editor.plugins.reduce((result, plugin) => {\n    var _plugin$serializeHtml, _plugin$serializeHtml2;\n\n    if (!plugin.isLeaf) return result;\n    props = { ...pipeInjectProps(editor, props),\n      children: encodeURIComponent(result)\n    };\n    const serialized = (_plugin$serializeHtml = (_plugin$serializeHtml2 = plugin.serializeHtml) === null || _plugin$serializeHtml2 === void 0 ? void 0 : _plugin$serializeHtml2.call(plugin, props)) !== null && _plugin$serializeHtml !== void 0 ? _plugin$serializeHtml : pluginRenderLeaf(editor, plugin)(props);\n    if (serialized === children) return result;\n    let html = decodeURIComponent(renderToStaticMarkup(createElementWithSlate({ ...slateProps,\n      children: serialized\n    })));\n    html = stripClassNames(html, {\n      preserveClassNames\n    });\n    return html;\n  }, children);\n};\n\nconst isEncoded = (str = '') => {\n  try {\n    return str !== decodeURIComponent(str);\n  } catch (error) {\n    return false;\n  }\n}; // Remove redundant data attributes\n\n\nconst stripSlateDataAttributes = rawHtml => rawHtml.replace(/( data-slate)(-node|-type|-leaf)=\"[^\"]+\"/gm, '').replace(/( data-testid)=\"[^\"]+\"/gm, ''); // Remove extra whitespace generated by ReactDOMServer\n\n\nconst trimWhitespace = rawHtml => rawHtml.replace(/(\\r\\n|\\n|\\r|\\t)/gm, '');\n/**\n * Convert Slate Nodes into HTML string\n */\n\n\nconst serializeHtml = (editor, {\n  nodes,\n  slateProps,\n  stripDataAttributes = true,\n  preserveClassNames,\n  stripWhitespace = true\n}) => {\n  let result = nodes.map(node => {\n    if (Text.isText(node)) {\n      return leafToHtml(editor, {\n        props: {\n          leaf: node,\n          text: node,\n          children: isEncoded(node.text) ? node.text : encodeURIComponent(node.text),\n          attributes: {\n            'data-slate-leaf': true\n          },\n          editor\n        },\n        slateProps,\n        preserveClassNames\n      });\n    }\n\n    return elementToHtml(editor, {\n      props: {\n        element: node,\n        children: encodeURIComponent(serializeHtml(editor, {\n          nodes: node.children,\n          preserveClassNames,\n          stripWhitespace\n        })),\n        attributes: {\n          'data-slate-node': 'element',\n          ref: null\n        },\n        editor\n      },\n      slateProps,\n      preserveClassNames\n    });\n  }).join('');\n\n  if (isEncoded(result)) {\n    result = decodeURIComponent(result);\n  }\n\n  if (stripWhitespace) {\n    result = trimWhitespace(result);\n  }\n\n  if (stripDataAttributes) {\n    result = stripSlateDataAttributes(result);\n  }\n\n  return result;\n};\n\nconst getPlateEventId = event => getEventEditorState()[event];\n/**\n * Get plate id by `event` key.\n */\n\n\nconst usePlateEventId = event => useEventEditorStore(() => getPlateEventId(event));\n/**\n * Get editor state which is updated on editor change.\n */\n\n\nconst usePlateEditorState = id => {\n  usePlateStore(() => {\n    var _getPlateState;\n\n    return (_getPlateState = getPlateState(id)) === null || _getPlateState === void 0 ? void 0 : _getPlateState.keyEditor;\n  });\n  return usePlateEditorRef(id);\n};\n\nconst getPlatePlugins = id => {\n  var _getPlateEditorRef;\n\n  return (_getPlateEditorRef = getPlateEditorRef(id)) === null || _getPlateEditorRef === void 0 ? void 0 : _getPlateEditorRef.plugins;\n};\n\nconst usePlatePlugins = id => {\n  usePlateKey('keyPlugins', id);\n  return getPlatePlugins(id);\n};\n/**\n * Get the editor selection which is updated on editor change.\n */\n\n\nconst usePlateSelection = id => {\n  var _usePlateEditorRef;\n\n  usePlateKey('keySelection', id);\n  return (_usePlateEditorRef = usePlateEditorRef(id)) === null || _usePlateEditorRef === void 0 ? void 0 : _usePlateEditorRef.selection;\n};\n\nconst usePlateState = id => usePlateStore(useCallback(() => getPlateState(id), [id]), shallow);\n\nconst isDescendant = node => isElement(node) || isText(node);\n/** Used to compose bitmasks for cloning. */\n\n\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\n\nfunction cloneDeep(value) {\n  return _baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nvar cloneDeep_1 = cloneDeep;\n/**\n * Creates a new array of plugins by overriding the plugins in the original array.\n * Components can be overridden by key using `components` in the second param.\n * Any other properties can be overridden by key using `overrideByKey` in the second param.\n */\n\nconst createPlugins = (plugins, {\n  components,\n  overrideByKey\n} = {}) => {\n  let allOverrideByKey = {};\n\n  if (overrideByKey) {\n    allOverrideByKey = cloneDeep_1(overrideByKey);\n  }\n\n  if (components) {\n    Object.keys(components).forEach(key => {\n      if (!allOverrideByKey[key]) allOverrideByKey[key] = {};\n      allOverrideByKey[key].component = components[key];\n    });\n  }\n\n  if (Object.keys(allOverrideByKey).length) {\n    return plugins.map(plugin => {\n      return overridePluginsByKey(plugin, allOverrideByKey);\n    });\n  }\n\n  return plugins;\n};\n/**\n * Create a plate editor with:\n * - `createEditor` or custom `editor`\n * - `withPlate`\n * - custom `components`\n */\n\n\nconst createPlateEditor = ({\n  editor = createEditor$1(),\n  plugins = [],\n  components,\n  overrideByKey,\n  ...withPlateOptions\n} = {}) => {\n  plugins = createPlugins(plugins, {\n    components,\n    overrideByKey\n  });\n  return withPlate(editor, {\n    plugins,\n    ...withPlateOptions\n  });\n};\n\nconst getPluginInjectProps = (editor, key) => {\n  var _getPlugin$inject$pro, _getPlugin$inject;\n\n  return (_getPlugin$inject$pro = (_getPlugin$inject = getPlugin(editor, key).inject) === null || _getPlugin$inject === void 0 ? void 0 : _getPlugin$inject.props) !== null && _getPlugin$inject$pro !== void 0 ? _getPlugin$inject$pro : {};\n};\n\nconst getPluginOptions = (editor, key) => {\n  var _getPlugin$options;\n\n  return (_getPlugin$options = getPlugin(editor, key).options) !== null && _getPlugin$options !== void 0 ? _getPlugin$options : {};\n};\n/**\n * Get `editor.plugins`\n */\n\n\nconst getPlugins = editor => {\n  var _editor$plugins;\n\n  return (_editor$plugins = editor === null || editor === void 0 ? void 0 : editor.plugins) !== null && _editor$plugins !== void 0 ? _editor$plugins : [];\n};\n\nconst mockPlugin = plugin => ({\n  key: '',\n  type: '',\n  editor: {},\n  inject: {},\n  options: {},\n  ...plugin\n});\n\nfunction pipe(x, ...fns) {\n  return fns.reduce((y, fn) => fn(y), x);\n}\n\nexport { DOM_HANDLERS, DefaultLeaf, ELEMENT_DEFAULT, EditablePlugins, EditorStateEffect, KEY_DESERIALIZE_AST, KEY_DESERIALIZE_HTML, KEY_EVENT_EDITOR, KEY_INLINE_VOID, KEY_INSERT_DATA, Plate, applyDeepToNodes, createDeserializeAstPlugin, createDeserializeHtmlPlugin, createDocumentNode, createElementWithSlate, createEventEditorPlugin, createHistoryPlugin, createInlineVoidPlugin, createInsertDataPlugin, createNode, createNodeHOC, createNodesHOC, createNodesWithHOC, createPlateEditor, createPluginFactory, createPlugins, createReactPlugin, defaultsDeepToNodes, deleteFragment, deserializeHtml, deserializeHtmlElement, deserializeHtmlNode, deserializeHtmlNodeChildren, elementToHtml, escapeRegExp, eventEditorStore, findDescendant, findHtmlParentElement, findNode, findNodePath, flattenDeepPlugins, getAbove, getBlockAbove, getChildren, getEventEditorState, getHandler, getInjectedPlugins, getLastChild$1 as getLastChild, getLastChildPath, getLastNode, getMark, getNextSiblingNodes, getNode, getNodes, getParent, getPlateEditorRef, getPlateEnabled, getPlateEventId, getPlateId, getPlatePlugins, getPlateState, getPlateValue, getPlugin, getPluginInjectProps, getPluginOptions, getPluginType, getPlugins, getPluginsByKey, getPointBefore, getPointFromLocation, getPointNextToVoid, getPreventDefaultHandler, getPreviousBlockById, getPreviousPath, getQueryOptions, getRangeBefore, getRangeFromBlockStart, getRenderNodeProps, getSelectionText, getSetStateByKey, getSlateClass, getStateById, getText, hasSingleChild, htmlBodyToFragment, htmlBrToNewLine, htmlElementToElement, htmlElementToLeaf, htmlStringToDOMNode, htmlTextNodeToString, incrementKey, insertEmptyElement, insertNodes, isAncestor, isAncestorEmpty, isBlockAboveEmpty, isBlockTextEmptyAfterSelection, isCollapsed, isDefined, isDescendant, isElement, isEncoded, isEnd, isEventHandled, isExpanded, isFirstChild, isHtmlComment, isHtmlElement, isHtmlText, isLastChild, isMarkActive, isNull, isPointAtWordEnd, isRangeAcrossBlocks, isRangeInSingleText, isSelectionAtBlockEnd, isSelectionAtBlockStart, isSelectionExpanded, isStart, isText, isTextByPath, isType, isUndefined, isUndefinedOrNull, isUrl, isWordAfterTrigger, leafToHtml, match, matchPredicate, mergeDeepPlugins, mergeDeepToNodes, mergeNodes, mergeState, mockPlugin, moveChildren, normalizeDescendantsToDocumentFragment, onKeyDownToggleElement, onKeyDownToggleMark, overridePluginsByKey, parseHtmlDocument, parseHtmlElement, pipe, pipeDecorate, pipeDeserializeHtmlElement, pipeDeserializeHtmlLeaf, pipeHandler, pipeInjectProps, pipeInsertDataQuery, pipeInsertFragment, pipeOnChange, pipeRenderElement, pipeRenderLeaf, pipeTransformData, pipeTransformFragment, plateStore, pluginDeserializeHtml, pluginInjectProps, pluginRenderElement, pluginRenderLeaf, queryEditor, queryNode, removeMark, selectEditor, selectEndOfBlockAboveSelection, serializeHtml, setDefaultPlugin, setEventEditorId, setMarks, setNodes, setPlatePlugins, someNode, stripClassNames, stripSlateDataAttributes, toggleMark, toggleNodeType, toggleWrapNodes, trimWhitespace, unhangRange, unsetNodes, unwrapNodes, useEditableProps, useEditorRef, useEditorState, useEventEditorStore, usePlate, usePlateActions, usePlateEditorRef, usePlateEditorState, usePlateEffects, usePlateEnabled, usePlateEventId, usePlateKey, usePlatePlugins, usePlateSelection, usePlateState, usePlateStore, usePlateValue, useSlateProps, withInlineVoid, withInsertData, withPlate, withProps, withProviders, wrapNodes };","map":{"version":3,"sources":["../src/common/hoc/createNodeHOC.tsx","../../../node_modules/lodash/isArray.js","../../../node_modules/lodash/castArray.js","../src/common/hoc/createNodesHOC.tsx","../src/common/hoc/withProps.tsx","../src/common/hoc/withProviders.tsx","../src/common/queries/match.ts","../src/common/queries/findDescendant.ts","../src/common/transforms/unhangRange.ts","../src/common/queries/getNodes.ts","../src/common/queries/findNode.ts","../src/common/queries/findNodePath.ts","../src/common/queries/getAbove.ts","../src/common/queries/getBlockAbove.ts","../src/common/queries/getChildren.ts","../src/common/queries/getLastChild.ts","../src/types/slate/TElement.ts","../src/types/slate/TAncestor.ts","../src/common/queries/getLastNode.ts","../src/common/queries/getMark.ts","../src/common/queries/getNextSiblingNodes.ts","../src/common/queries/getNode.ts","../src/common/queries/getParent.ts","../../../node_modules/lodash/_arrayMap.js","../../../node_modules/lodash/_listCacheClear.js","../../../node_modules/lodash/eq.js","../../../node_modules/lodash/_assocIndexOf.js","../../../node_modules/lodash/_listCacheDelete.js","../../../node_modules/lodash/_listCacheGet.js","../../../node_modules/lodash/_listCacheHas.js","../../../node_modules/lodash/_listCacheSet.js","../../../node_modules/lodash/_ListCache.js","../../../node_modules/lodash/_stackClear.js","../../../node_modules/lodash/_stackDelete.js","../../../node_modules/lodash/_stackGet.js","../../../node_modules/lodash/_stackHas.js","../../../node_modules/lodash/_freeGlobal.js","../../../node_modules/lodash/_root.js","../../../node_modules/lodash/_Symbol.js","../../../node_modules/lodash/_getRawTag.js","../../../node_modules/lodash/_objectToString.js","../../../node_modules/lodash/_baseGetTag.js","../../../node_modules/lodash/isObject.js","../../../node_modules/lodash/isFunction.js","../../../node_modules/lodash/_coreJsData.js","../../../node_modules/lodash/_isMasked.js","../../../node_modules/lodash/_toSource.js","../../../node_modules/lodash/_baseIsNative.js","../../../node_modules/lodash/_getValue.js","../../../node_modules/lodash/_getNative.js","../../../node_modules/lodash/_Map.js","../../../node_modules/lodash/_nativeCreate.js","../../../node_modules/lodash/_hashClear.js","../../../node_modules/lodash/_hashDelete.js","../../../node_modules/lodash/_hashGet.js","../../../node_modules/lodash/_hashHas.js","../../../node_modules/lodash/_hashSet.js","../../../node_modules/lodash/_Hash.js","../../../node_modules/lodash/_mapCacheClear.js","../../../node_modules/lodash/_isKeyable.js","../../../node_modules/lodash/_getMapData.js","../../../node_modules/lodash/_mapCacheDelete.js","../../../node_modules/lodash/_mapCacheGet.js","../../../node_modules/lodash/_mapCacheHas.js","../../../node_modules/lodash/_mapCacheSet.js","../../../node_modules/lodash/_MapCache.js","../../../node_modules/lodash/_stackSet.js","../../../node_modules/lodash/_Stack.js","../../../node_modules/lodash/_setCacheAdd.js","../../../node_modules/lodash/_setCacheHas.js","../../../node_modules/lodash/_SetCache.js","../../../node_modules/lodash/_arraySome.js","../../../node_modules/lodash/_cacheHas.js","../../../node_modules/lodash/_equalArrays.js","../../../node_modules/lodash/_Uint8Array.js","../../../node_modules/lodash/_mapToArray.js","../../../node_modules/lodash/_setToArray.js","../../../node_modules/lodash/_equalByTag.js","../../../node_modules/lodash/_arrayPush.js","../../../node_modules/lodash/_baseGetAllKeys.js","../../../node_modules/lodash/_arrayFilter.js","../../../node_modules/lodash/stubArray.js","../../../node_modules/lodash/_getSymbols.js","../../../node_modules/lodash/_baseTimes.js","../../../node_modules/lodash/isObjectLike.js","../../../node_modules/lodash/_baseIsArguments.js","../../../node_modules/lodash/isArguments.js","../../../node_modules/lodash/stubFalse.js","../../../node_modules/lodash/isBuffer.js","../../../node_modules/lodash/_isIndex.js","../../../node_modules/lodash/isLength.js","../../../node_modules/lodash/_baseIsTypedArray.js","../../../node_modules/lodash/_baseUnary.js","../../../node_modules/lodash/_nodeUtil.js","../../../node_modules/lodash/isTypedArray.js","../../../node_modules/lodash/_arrayLikeKeys.js","../../../node_modules/lodash/_isPrototype.js","../../../node_modules/lodash/_overArg.js","../../../node_modules/lodash/_nativeKeys.js","../../../node_modules/lodash/_baseKeys.js","../../../node_modules/lodash/isArrayLike.js","../../../node_modules/lodash/keys.js","../../../node_modules/lodash/_getAllKeys.js","../../../node_modules/lodash/_equalObjects.js","../../../node_modules/lodash/_DataView.js","../../../node_modules/lodash/_Promise.js","../../../node_modules/lodash/_Set.js","../../../node_modules/lodash/_WeakMap.js","../../../node_modules/lodash/_getTag.js","../../../node_modules/lodash/_baseIsEqualDeep.js","../../../node_modules/lodash/_baseIsEqual.js","../../../node_modules/lodash/_baseIsMatch.js","../../../node_modules/lodash/_isStrictComparable.js","../../../node_modules/lodash/_getMatchData.js","../../../node_modules/lodash/_matchesStrictComparable.js","../../../node_modules/lodash/_baseMatches.js","../../../node_modules/lodash/isSymbol.js","../../../node_modules/lodash/_isKey.js","../../../node_modules/lodash/memoize.js","../../../node_modules/lodash/_memoizeCapped.js","../../../node_modules/lodash/_stringToPath.js","../../../node_modules/lodash/_baseToString.js","../../../node_modules/lodash/toString.js","../../../node_modules/lodash/_castPath.js","../../../node_modules/lodash/_toKey.js","../../../node_modules/lodash/_baseGet.js","../../../node_modules/lodash/get.js","../../../node_modules/lodash/_baseHasIn.js","../../../node_modules/lodash/_hasPath.js","../../../node_modules/lodash/hasIn.js","../../../node_modules/lodash/_baseMatchesProperty.js","../../../node_modules/lodash/identity.js","../../../node_modules/lodash/_baseProperty.js","../../../node_modules/lodash/_basePropertyDeep.js","../../../node_modules/lodash/property.js","../../../node_modules/lodash/_baseIteratee.js","../../../node_modules/lodash/_createBaseFor.js","../../../node_modules/lodash/_baseFor.js","../../../node_modules/lodash/_baseForOwn.js","../../../node_modules/lodash/_createBaseEach.js","../../../node_modules/lodash/_baseEach.js","../../../node_modules/lodash/_baseMap.js","../../../node_modules/lodash/map.js","../src/common/queries/isRangeAcrossBlocks.ts","../src/common/queries/getPointBefore.ts","../src/common/queries/getPointFromLocation.ts","../src/common/queries/getPointNextToVoid.ts","../src/common/queries/queryNode.ts","../src/common/queries/getPreviousBlockById.ts","../src/common/queries/getPreviousPath.ts","../src/common/queries/getRangeBefore.ts","../src/common/queries/getRangeFromBlockStart.ts","../src/common/queries/getText.ts","../src/common/queries/getSelectionText.ts","../src/common/queries/hasSingleChild.ts","../src/common/queries/isAncestorEmpty.ts","../src/common/queries/isBlockAboveEmpty.ts","../src/types/slate/TText.ts","../src/common/queries/isBlockTextEmptyAfterSelection.ts","../src/common/queries/isCollapsed.ts","../src/common/queries/isEnd.ts","../src/common/queries/isExpanded.ts","../src/common/queries/isFirstChild.ts","../src/common/utils/types.utils.ts","../src/common/queries/isMarkActive.ts","../src/common/queries/isPointAtWordEnd.ts","../src/common/queries/isRangeInSingleText.ts","../src/common/queries/isSelectionAtBlockEnd.ts","../src/common/queries/isStart.ts","../src/common/queries/isSelectionAtBlockStart.ts","../src/common/queries/isSelectionExpanded.ts","../src/common/queries/isTextByPath.ts","../src/utils/getPluginsByKey.ts","../src/utils/getPlugin.ts","../src/utils/getPluginType.ts","../src/common/queries/isType.ts","../src/common/utils/escapeRegexp.ts","../src/common/queries/isWordAfterTrigger.ts","../src/common/queries/someNode.ts","../src/common/queries/queryEditor.ts","../src/common/queries/unsetNodes.ts","../../../node_modules/lodash/_apply.js","../../../node_modules/lodash/_overRest.js","../../../node_modules/lodash/constant.js","../../../node_modules/lodash/_defineProperty.js","../../../node_modules/lodash/_baseSetToString.js","../../../node_modules/lodash/_shortOut.js","../../../node_modules/lodash/_setToString.js","../../../node_modules/lodash/_baseRest.js","../../../node_modules/lodash/_isIterateeCall.js","../../../node_modules/lodash/_nativeKeysIn.js","../../../node_modules/lodash/_baseKeysIn.js","../../../node_modules/lodash/keysIn.js","../../../node_modules/lodash/defaults.js","../src/utils/applyDeepToNodes.ts","../src/common/transforms/defaultsDeepToNodes.ts","../src/common/transforms/mergeNodes.ts","../src/common/transforms/deleteFragment.ts","../src/common/transforms/insertNodes.ts","../src/common/transforms/insertEmptyElement.ts","../src/common/transforms/moveChildren.ts","../src/common/transforms/removeMark.ts","../src/common/transforms/selectEditor.ts","../src/common/transforms/selectEndOfBlockAboveSelection.ts","../src/common/transforms/setMarks.ts","../src/common/transforms/setNodes.ts","../src/common/transforms/toggleMark.ts","../src/common/types/node.types.ts","../src/common/transforms/toggleNodeType.ts","../src/common/transforms/unwrapNodes.ts","../src/common/transforms/wrapNodes.ts","../src/common/transforms/toggleWrapNodes.ts","../src/common/utils/createDocumentNode.ts","../src/common/utils/createNode.ts","../src/common/utils/findHtmlParentElement.ts","../src/common/utils/getHandler.ts","../src/common/utils/getPreventDefaultHandler.ts","../src/common/utils/isUrl.ts","../src/common/utils/normalizeDescendantsToDocumentFragment.ts","../../../node_modules/is-hotkey/lib/index.js","../src/common/utils/onKeyDown/onKeyDownToggleElement.ts","../src/common/utils/onKeyDown/onKeyDownToggleMark.ts","../src/components/DefaultLeaf.tsx","../../../node_modules/lodash/_arrayEach.js","../../../node_modules/lodash/_baseAssignValue.js","../../../node_modules/lodash/_assignValue.js","../../../node_modules/lodash/_copyObject.js","../../../node_modules/lodash/_baseAssign.js","../../../node_modules/lodash/_baseAssignIn.js","../../../node_modules/lodash/_cloneBuffer.js","../../../node_modules/lodash/_copyArray.js","../../../node_modules/lodash/_copySymbols.js","../../../node_modules/lodash/_getPrototype.js","../../../node_modules/lodash/_getSymbolsIn.js","../../../node_modules/lodash/_copySymbolsIn.js","../../../node_modules/lodash/_getAllKeysIn.js","../../../node_modules/lodash/_initCloneArray.js","../../../node_modules/lodash/_cloneArrayBuffer.js","../../../node_modules/lodash/_cloneDataView.js","../../../node_modules/lodash/_cloneRegExp.js","../../../node_modules/lodash/_cloneSymbol.js","../../../node_modules/lodash/_cloneTypedArray.js","../../../node_modules/lodash/_initCloneByTag.js","../../../node_modules/lodash/_baseCreate.js","../../../node_modules/lodash/_initCloneObject.js","../../../node_modules/lodash/_baseIsMap.js","../../../node_modules/lodash/isMap.js","../../../node_modules/lodash/_baseIsSet.js","../../../node_modules/lodash/isSet.js","../../../node_modules/lodash/_baseClone.js","../../../node_modules/lodash/last.js","../../../node_modules/lodash/_baseSlice.js","../../../node_modules/lodash/_parent.js","../../../node_modules/lodash/_baseUnset.js","../../../node_modules/lodash/isPlainObject.js","../../../node_modules/lodash/_customOmitClone.js","../../../node_modules/lodash/_isFlattenable.js","../../../node_modules/lodash/_baseFlatten.js","../../../node_modules/lodash/flatten.js","../../../node_modules/lodash/_flatRest.js","../../../node_modules/lodash/omit.js","../node_modules/zustand/vanilla.js","../src/stores/plate/plate.store.ts","../src/stores/event-editor/event-editor.store.ts","../src/stores/event-editor/selectors/getEventEditorState.ts","../src/stores/plate/selectors/getPlateId.ts","../src/stores/plate/selectors/getPlateState.ts","../src/stores/plate/selectors/usePlateEditorRef.ts","../src/stores/plate/selectors/usePlateKey.ts","../src/utils/dom-attributes.ts","../src/utils/pipeDecorate.ts","../src/utils/pipeHandler.ts","../src/utils/pluginInjectProps.ts","../src/utils/pipeInjectProps.tsx","../src/utils/getSlateClass.ts","../src/utils/getRenderNodeProps.ts","../src/utils/pluginRenderElement.tsx","../src/utils/pipeRenderElement.tsx","../src/utils/pluginRenderLeaf.tsx","../src/utils/pipeRenderLeaf.tsx","../src/hooks/usePlate/useEditableProps.ts","../node_modules/zustand/shallow.js","../src/stores/zustand.utils.ts","../src/stores/plate/plate.actions.ts","../../../node_modules/lodash/_assignMergeValue.js","../../../node_modules/lodash/isArrayLikeObject.js","../../../node_modules/lodash/_safeGet.js","../../../node_modules/lodash/toPlainObject.js","../../../node_modules/lodash/_baseMergeDeep.js","../../../node_modules/lodash/_baseMerge.js","../../../node_modules/lodash/_customDefaultsMerge.js","../../../node_modules/lodash/_createAssigner.js","../../../node_modules/lodash/mergeWith.js","../../../node_modules/lodash/defaultsDeep.js","../../../node_modules/lodash/_arrayAggregator.js","../../../node_modules/lodash/_baseAggregator.js","../../../node_modules/lodash/_createAggregator.js","../../../node_modules/lodash/keyBy.js","../../../node_modules/lodash/merge.js","../../../node_modules/lodash/_baseValues.js","../../../node_modules/lodash/values.js","../src/utils/mergeDeepPlugins.ts","../src/utils/setDefaultPlugin.ts","../src/utils/flattenDeepPlugins.ts","../src/utils/overridePluginsByKey.ts","../src/utils/setPlatePlugins.ts","../src/utils/createPluginFactory.ts","../src/plugins/html-serializer/utils/htmlStringToDOMNode.ts","../../../node_modules/is-plain-object/dist/is-plain-object.mjs","../../../node_modules/slate-hyperscript/dist/index.es.js","../src/plugins/html-deserializer/utils/deserializeHtmlNodeChildren.ts","../src/plugins/html-deserializer/utils/htmlBodyToFragment.ts","../src/plugins/html-deserializer/utils/htmlBrToNewLine.ts","../src/plugins/html-deserializer/utils/pluginDeserializeHtml.ts","../src/plugins/html-deserializer/utils/pipeDeserializeHtmlElement.ts","../src/plugins/html-deserializer/utils/htmlElementToElement.ts","../src/utils/mergeDeepToNodes.ts","../src/plugins/html-deserializer/utils/pipeDeserializeHtmlLeaf.ts","../src/plugins/html-deserializer/utils/htmlElementToLeaf.ts","../src/plugins/html-deserializer/utils/isHtmlText.ts","../src/plugins/html-deserializer/utils/htmlTextNodeToString.ts","../src/plugins/html-deserializer/utils/isHtmlElement.ts","../src/plugins/html-deserializer/utils/deserializeHtmlNode.ts","../src/plugins/html-deserializer/utils/deserializeHtmlElement.ts","../src/plugins/html-deserializer/utils/deserializeHtml.ts","../src/plugins/html-deserializer/utils/parseHtmlDocument.ts","../src/plugins/html-deserializer/createDeserializeHtmlPlugin.ts","../src/plugins/createDeserializeAstPlugin.ts","../src/stores/event-editor/actions/setEventEditorId.ts","../src/plugins/createEventEditorPlugin.ts","../src/plugins/createHistoryPlugin.ts","../src/plugins/createInlineVoidPlugin.ts","../src/utils/getInjectedPlugins.ts","../src/utils/pipeInsertDataQuery.ts","../src/utils/pipeInsertFragment.ts","../src/utils/pipeTransformData.ts","../src/utils/pipeTransformFragment.ts","../src/plugins/createInsertDataPlugin.ts","../src/plugins/createReactPlugin.ts","../src/plugins/withPlate.ts","../src/stores/plate/selectors/usePlateEnabled.ts","../src/hooks/usePlate/usePlateEffects.ts","../src/stores/plate/selectors/usePlateValue.ts","../src/utils/pipeOnChange.ts","../src/hooks/usePlate/useSlateProps.ts","../src/hooks/usePlate/usePlate.ts","../src/components/EditablePlugins.tsx","../src/hooks/useEditorState.ts","../src/components/EditorStateEffect.tsx","../src/components/Plate.tsx","../src/hooks/useEditorRef.ts","../src/plugins/html-deserializer/utils/isHtmlComment.ts","../src/plugins/html-deserializer/utils/parseHtmlElement.ts","../src/plugins/html-serializer/utils/createElementWithSlate.ts","../src/plugins/html-serializer/utils/stripClassNames.ts","../src/plugins/html-serializer/elementToHtml.ts","../src/plugins/html-serializer/leafToHtml.ts","../src/plugins/html-serializer/utils/isEncoded.ts","../src/plugins/html-serializer/utils/stripSlateDataAttributes.ts","../src/plugins/html-serializer/utils/trimWhitespace.ts","../src/plugins/html-serializer/serializeHtml.ts","../src/stores/event-editor/selectors/usePlateEventId.ts","../src/stores/plate/selectors/usePlateEditorState.ts","../src/stores/plate/selectors/usePlatePlugins.ts","../src/stores/plate/selectors/usePlateSelection.ts","../src/stores/plate/selectors/usePlateState.ts","../src/types/slate/TDescendant.ts","../../../node_modules/lodash/cloneDeep.js","../src/utils/createPlugins.tsx","../src/utils/createPlateEditor.ts","../src/utils/getPluginInjectProps.ts","../src/utils/getPluginOptions.ts","../src/utils/getPlugins.ts","../src/utils/mockPlugin.ts","../src/utils/pipe.ts"],"names":["createNodeHOC","HOC","childrenProps","isArray","createHOC","withHOC","_components","components","optionsByKey","optionsList","_castArray","opt","_keys","key","keys","Object","_key","createNodesHOC","createNodesWithHOC","withProps","_props","withProviders","WrappedComponent","props","Provider","Array","prov","match","values","obj","predicate","matchPredicate","getQueryOptions","n","options","Editor","findDescendant","at","editor","reverse","voids","Span","Range","first","edge","last","from","to","root","Path","nodeEntries","pass","unhangRange","unhang","getNodes","findNode","findNodePath","ReactEditor","getAbove","getBlockAbove","block","getChildren","nodeEntry","children","node","childPath","path","getLastChild","getLastChildPath","lastChild","isLastChild","lastChildPath","isElement","Element","isAncestor","level","lastNode","getLastNode","lastPath","getMark","getNextSiblingNodes","leafIndex","ancestorPath","siblings","ancestor","i","getNode","Node","getParent","eq","assocIndexOf","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","global","freeGlobal","Symbol","objectProto","hasOwnProperty","nativeObjectToString","symToStringTag","getRawTag","objectToString","isObject","funcTag","genTag","baseGetTag","coreJsData","funcProto","funcToString","isMasked","isFunction","toSource","getValue","baseIsNative","getNative","nativeCreate","HASH_UNDEFINED","hashClear","hashDelete","hashGet","hashHas","hashSet","Hash","Map","isKeyable","getMapData","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","stackClear","stackDelete","stackGet","stackHas","stackSet","setCacheAdd","setCacheHas","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","SetCache","arraySome","cacheHas","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","Uint8Array","mapToArray","setToArray","equalArrays","arrayPush","propertyIsEnumerable","nativeGetSymbols","stubArray","arrayFilter","argsTag","isObjectLike","baseIsArguments","stubFalse","MAX_SAFE_INTEGER","arrayTag","objectTag","weakMapTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","isLength","nodeUtil","baseUnary","baseIsTypedArray","isArguments","isBuffer","isTypedArray","baseTimes","isIndex","overArg","isPrototype","nativeKeys","isArrayLike","arrayLikeKeys","baseKeys","baseGetAllKeys","getSymbols","getAllKeys","Promise","Set","WeakMap","DataView","getTag","Stack","equalByTag","equalObjects","baseIsEqualDeep","baseIsEqual","isStrictComparable","getMatchData","matchesStrictComparable","baseIsMatch","isSymbol","memoize","memoizeCapped","INFINITY","arrayMap","baseToString","isKey","stringToPath","toString","castPath","toKey","get","baseGet","hasPath","baseHasIn","hasIn","baseProperty","basePropertyDeep","identity","baseMatchesProperty","baseMatches","property","createBaseFor","baseFor","createBaseEach","baseForOwn","baseEach","baseMap","baseIteratee","isRangeAcrossBlocks","startBlock","endBlock","getPointBefore","unitOffset","matchStrings","castArray","matchString","beforeAt","previousBeforePoint","stackLength","stack","count","beforePoint","anchor","focus","beforeString","beforeStringToMatch","point","text","map","getPointFromLocation","Point","offset","getPointNextToVoid","after","startVoid","mode","blockAbove","nextPoint","queryNode","exclude","filter","allows","entry","excludes","getPreviousBlockById","id","prevEntry","found","_n","firstNodeEntry","getPreviousPath","getRangeBefore","getRangeFromBlockStart","start","getText","getSelectionText","hasSingleChild","Text","isAncestorEmpty","isBlockAboveEmpty","isText","isBlockTextEmptyAfterSelection","cursor","selectionParentEntry","siblingNodes","siblingNode","isCollapsed","range","isEnd","isExpanded","isFirstChild","isUndefined","isNull","isUndefinedOrNull","isMarkActive","isDefined","AFTER_MATCH_REGEX","isPointAtWordEnd","afterRange","afterText","isRangeInSingleText","end","isSelectionAtBlockEnd","isStart","isSelectionAtBlockStart","isSelectionExpanded","isTextByPath","getPluginsByKey","plugins","getPlugin","getPluginType","isType","escapeRegExp","isWordAfterTrigger","trigger","wordBefore","unit","before","beforeRange","beforeText","escapedTrigger","beforeRegex","someNode","queryEditor","selectionAtBlockStart","selectionAtBlockEnd","type","unsetNodes","Transforms","apply","defineProperty","constant","shortOut","baseSetToString","setToString","overRest","nativeKeysIn","baseKeysIn","baseRest","isIterateeCall","keysIn","applyDeepToNodes","query","source","child","defaultsDeepToNodes","defaults","mergeNodes","selection","hanging","parent","pointRef","prev","prevPath","newPath","commonPath","isPreviousSibling","levels","emptyAncestor","emptyRef","rest","position","prevNode","properties","JSON","emptyPath","removeEmptyAncestor","mergeNode","deleteFragment","distance","furthestVoid","opts","target","isAcrossBlocks","isSingleText","endVoid","matches","pathRefs","startRef","endRef","pathRef","insertNodes","insertEmptyElement","moveChildren","fromStartIndex","moved","parentPath","parentNode","childNode","removeMark","shouldChange","split","marks","k","selectEditor","location","selectEndOfBlockAboveSelection","setMarks","clear","clears","setNodes","toggleMark","isActive","ELEMENT_DEFAULT","toggleNodeType","inactiveType","activeType","unwrapNodes","wrapNodes","toggleWrapNodes","createDocumentNode","remaining","createNode","findHtmlParentElement","el","getHandler","cb","getPreventDefaultHandler","event","protocolAndDomainRE","localhostDomainRE","nonLocalhostDomainRE","isUrl","string","everythingAfterProtocol","isInlineNode","makeBlockLazy","hasDifferentChildNodes","prevDescendant","arr","index","isInline","normalizeDifferentNodeTypes","hasDifferentNodes","fragment","memo","makeDefaultBlock","precedingBlock","normalizeEmptyChildren","descendants","normalize","normalizeDescendantsToDocumentFragment","defaultType","onKeyDownToggleElement","hotkey","e","hotkeys","isHotkey","onKeyDownToggleMark","DefaultLeaf","baseAssignValue","assignValue","copyObject","getPrototype","getSymbolsIn","cloneArrayBuffer","cloneDataView","cloneTypedArray","cloneRegExp","cloneSymbol","baseCreate","baseIsMap","baseIsSet","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","initCloneArray","copyArray","cloneBuffer","initCloneObject","copySymbolsIn","baseAssignIn","copySymbols","baseAssign","initCloneByTag","isSet","isMap","getAllKeysIn","arrayEach","baseSlice","isPlainObject","isFlattenable","baseFlatten","flatten","flatRest","baseClone","customOmitClone","baseUnset","plateStore","createVanillaStore","usePlateStore","create","eventEditorStore","useEventEditorStore","getEventEditorState","getPlateId","state","getPlateState","firstId","getPlateEditorRef","usePlateEditorRef","usePlateKey","useCallback","DOM_HANDLERS","pipeDecorate","decorates","plugin","ranges","addRanges","newRanges","decorate","isEventHandled","shouldTreatEventAsHandled","handler","pipeHandler","handlerKey","pluginsHandlers","propsHandler","editableProps","eventIsHandled","pluginInjectProps","inject","style","element","nodeKey","styleKey","defaultNodeValue","validTypes","nodeValue","validNodeValues","res","transformOptions","value","transformNodeValue","clsx","classNames","transformClassName","transformStyle","pipeInjectProps","nodeProps","getSlateClass","getRenderNodeProps","newProps","className","pluginRenderElement","component","_children","_component","injectAboveComponents","o","injectBelowComponents","attributes","hoc","pipeRenderElement","renderElements","renderElement","pluginRenderLeaf","leaf","Leaf","pipeRenderLeaf","renderLeafs","renderLeaf","newChildren","useEditableProps","keyPlugins","useMemo","omit","set","getStateById","mergeState","stateId","stateToMerge","getSetStateByKey","getState","setState","usePlateActions","storeId","storeKeys","s","setEditor","setValue","clearState","setInitialState","enabled","resetEditor","withPlate","createEditor","setEnabled","incrementKey","safeGet","assignMergeValue","isArrayLikeObject","toPlainObject","baseMergeDeep","baseMerge","createAssigner","customDefaultsMerge","mergeWith","arrayAggregator","baseAggregator","createAggregator","baseValues","mergeDeepPlugins","_plugin","then","pluginPlugins","pluginThen","defaultsDeep","merged","merge","keyBy","setDefaultPlugin","flattenDeepPlugins","p","overridePluginsByKey","overrideByKey","pluginOverrides","pluginOverridesPlugins","pOverrides","setPlatePlugins","newPlugins","createPluginFactory","defaultPlugin","htmlStringToDOMNode","stripWhitespace","document","deserializeHtmlNodeChildren","deserializeHtmlNode","htmlBodyToFragment","jsx","htmlBrToNewLine","pluginDeserializeHtml","deserializeLeaf","deserializeHtml","isLeaf","deserializeHtmls","deserialized","validNodeName","nodeName","isElementRule","isLeafRule","validClassName","attributeValues","elAttribute","elementAttributes","elementAttributeNames","attributeNames","pipeDeserializeHtmlElement","result","htmlElementToElement","withoutChildren","mergeDeepToNodes","pipeDeserializeHtmlLeaf","htmlElementToLeaf","isHtmlText","TEXT_NODE","htmlTextNodeToString","isHtmlElement","ELEMENT_NODE","textNode","breakLine","deserializeHtmlElement","parseHtmlDocument","html","KEY_DESERIALIZE_HTML","createDeserializeHtmlPlugin","insertData","format","getFragment","data","body","KEY_DESERIALIZE_AST","createDeserializeAstPlugin","decoded","decodeURIComponent","window","setEventEditorId","KEY_EVENT_EDITOR","createEventEditorPlugin","handlers","onFocus","onBlur","createHistoryPlugin","withOverrides","withHistory","KEY_INLINE_VOID","withInlineVoid","isVoid","inlineTypes","voidTypes","createInlineVoidPlugin","getInjectedPlugins","injectedPlugins","injectedPlugin","pipeInsertDataQuery","dataTransfer","pipeInsertFragment","pipeTransformData","transformData","pipeTransformFragment","transformFragment","withInsertData","inserted","insertDataOptions","KEY_INSERT_DATA","createInsertDataPlugin","createReactPlugin","withReact","disableCorePlugins","Math","allPlugins","getPlateEnabled","usePlateEnabled","usePlateEffects","enabledProp","prevEditorRef","useRef","useEffect","initialValue","baseEditor","editorProp","hasEditorUpdated","force","getPlateValue","usePlateValue","pipeOnChange","onChanges","nodes","useSlateProps","onChange","_onChange","newValue","usePlate","normalizeInitialValue","slateProps","EditablePlugins","useEditorState","useSlate","EditorStateEffect","editorState","Plate","editable","renderEditable","useEditorRef","useSlateStatic","isHtmlComment","COMMENT_NODE","parseHtmlElement","createElementWithSlate","stripClassNames","preserveClassNames","allClasses","filteredHtml","preserveRegExp","cn","slateClassNames","item","elementToHtml","renderToStaticMarkup","leafToHtml","encodeURIComponent","serialized","isEncoded","str","stripSlateDataAttributes","rawHtml","trimWhitespace","serializeHtml","stripDataAttributes","ref","getPlateEventId","usePlateEventId","usePlateEditorState","getPlatePlugins","usePlatePlugins","usePlateSelection","usePlateState","isDescendant","createPlugins","allOverrideByKey","_cloneDeep","createPlateEditor","withPlateOptions","getPluginInjectProps","getPluginOptions","getPlugins","mockPlugin","fns","fn"],"mappings":"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","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { PlateRenderElementProps } from '../../types/PlateRenderElementProps';\n\nexport const createNodeHOC = <T,>(HOC: FunctionComponent<T>) => (\n  Component: any,\n  props: T\n) => (childrenProps: PlateRenderElementProps) => (\n  <HOC {...childrenProps} {...props}>\n    <Component {...childrenProps} />\n  </HOC>\n);\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var isArray = require('./isArray');\n\n/**\n * Casts `value` as an array if it's not one.\n *\n * @static\n * @memberOf _\n * @since 4.4.0\n * @category Lang\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast array.\n * @example\n *\n * _.castArray(1);\n * // => [1]\n *\n * _.castArray({ 'a': 1 });\n * // => [{ 'a': 1 }]\n *\n * _.castArray('abc');\n * // => ['abc']\n *\n * _.castArray(null);\n * // => [null]\n *\n * _.castArray(undefined);\n * // => [undefined]\n *\n * _.castArray();\n * // => []\n *\n * var array = [1, 2, 3];\n * console.log(_.castArray(array) === array);\n * // => true\n */\nfunction castArray() {\n  if (!arguments.length) {\n    return [];\n  }\n  var value = arguments[0];\n  return isArray(value) ? value : [value];\n}\n\nmodule.exports = castArray;\n","import { FunctionComponent } from 'react';\nimport { castArray } from 'lodash';\nimport { AnyObject } from '../../types/utility/AnyObject';\nimport { createNodeHOC } from './createNodeHOC';\n\nexport type Options<T> = Partial<T> &\n  AnyObject & {\n    /**\n     * Set HOC by key.\n     */\n    key?: string;\n\n    /**\n     * Set HOC by key.\n     */\n    keys?: string[];\n  };\n\nconst createHOC = <T,>(withHOC: any) => {\n  return (components: any, options: Options<T> | Options<T>[]) => {\n    const _components = { ...components };\n    const optionsByKey = {};\n\n    const optionsList = castArray<Options<T>>(options);\n\n    optionsList.forEach(({ key, keys, ...opt }) => {\n      const _keys: string[] = key ? [key] : keys ?? Object.keys(_components);\n\n      _keys.forEach((_key) => {\n        optionsByKey[_key] = { ...optionsByKey[_key], ...opt };\n      });\n    });\n\n    Object.keys(optionsByKey).forEach((key) => {\n      if (!_components[key]) return;\n\n      _components[key] = withHOC(_components[key], optionsByKey[key]);\n    });\n\n    return _components;\n  };\n};\n\n/**\n * Create components HOC by plugin key.\n */\nexport const createNodesHOC = <T,>(HOC: FunctionComponent<T>) => {\n  return createHOC<T>(createNodeHOC(HOC));\n};\n\n/**\n * Create components HOC by plugin key with a custom HOC.\n */\nexport const createNodesWithHOC = <T,>(\n  withHOC: (component: any, props: T) => any\n) => {\n  return createHOC<T>(withHOC);\n};\n","import React, { FunctionComponent } from 'react';\n\n/**\n * HOC adding props.\n */\nexport const withProps: <T>(\n  Component: FunctionComponent<T>,\n  props: Partial<T>\n) => FunctionComponent<any> = (Component, props) => (_props) => (\n  <Component {..._props} {...props} />\n);\n","import React, { FunctionComponent } from 'react';\n\n/**\n * Wrap a component into multiple providers.\n * If there are any props that you want a provider to receive,\n * you can simply pass an array.\n */\nexport const withProviders = (...providers: any[]) => <T,>(\n  WrappedComponent: FunctionComponent<T>\n) => (props: T) =>\n  providers.reduceRight((acc, prov) => {\n    let Provider = prov;\n    if (Array.isArray(prov)) {\n      [Provider] = prov;\n      return <Provider {...prov[1]}>{acc}</Provider>;\n    }\n\n    return <Provider>{acc}</Provider>;\n  }, <WrappedComponent {...props} />);\n","import { castArray } from 'lodash';\nimport { Editor } from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\n\nexport type PredicateObj<T> = Partial<Record<keyof T, any | any[]>>;\nexport type PredicateFn<T> = (obj: T) => boolean;\nexport type Predicate<T> = PredicateObj<T> | PredicateFn<T>;\n\n/**\n * Match the object with a predicate object or function.\n * If predicate is:\n * - object: every predicate key/value should be in obj.\n * - function: it should return true.\n */\nexport const match = <T>(obj: T, predicate?: Predicate<T>): boolean => {\n  if (!predicate) return true;\n\n  if (typeof predicate === 'object') {\n    return Object.entries(predicate).every(([key, value]) => {\n      const values = castArray<any>(value);\n\n      return values.includes(obj[key]);\n    });\n  }\n\n  return predicate(obj);\n};\n\nexport const matchPredicate = <T>(predicate?: Predicate<T>) => (obj: T) =>\n  match(obj, predicate);\n\n/**\n * Extended query options for slate queries:\n * - `match` can be an object predicate where one of the values should include the node value.\n * Example: { type: ['1', '2'] } will match the nodes having one of these 2 types.\n */\nexport const getQueryOptions = <T>(editor: TEditor, options: any) => {\n  return {\n    ...options,\n    match: (n: T) =>\n      match<T>(n, options.match) &&\n      (!options?.block || Editor.isBlock(editor, n)),\n  };\n};\n","/**\n * Iterate through all of the nodes in the editor and return the first match. If\n * no match is found, return undefined.\n */\nimport { Editor, Node, NodeEntry, Path, Range, Span } from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\nimport { TNode } from '../../types/slate/TNode';\nimport { FindNodeOptions } from './findNode';\nimport { match } from './match';\n\n/**\n * Get the first descendant node matching the condition.\n */\nexport const findDescendant = <T extends TNode = TNode>(\n  editor: TEditor,\n  options: FindNodeOptions<T>\n): NodeEntry<T> | undefined => {\n  // Slate throws when things aren't found so we wrap in a try catch and return undefined on throw.\n  try {\n    const {\n      match: _match,\n      at = editor.selection,\n      reverse = false,\n      voids = false,\n    } = options;\n\n    if (!at) return;\n\n    let from;\n    let to;\n    if (Span.isSpan(at)) {\n      [from, to] = at;\n    } else if (Range.isRange(at)) {\n      const first = Editor.path(editor, at, { edge: 'start' });\n      const last = Editor.path(editor, at, { edge: 'end' });\n      from = reverse ? last : first;\n      to = reverse ? first : last;\n    }\n\n    let root: NodeEntry = [editor, []];\n    if (Path.isPath(at)) {\n      root = Editor.node(editor, at);\n    }\n\n    const nodeEntries = Node.descendants(root[0], {\n      reverse,\n      from,\n      to,\n      pass: ([n]) => (voids ? false : Editor.isVoid(editor, n)),\n    });\n\n    for (const [node, path] of nodeEntries) {\n      if (match<Node>(node, _match)) {\n        return [node as any, (at as Path).concat(path)];\n      }\n    }\n  } catch (error) {\n    return undefined;\n  }\n};\n","import { Editor, Path, Point, Range, Span } from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\n\nexport interface UnhangRangeOptions {\n  at?: Range | Path | Point | Span;\n  voids?: boolean;\n  unhang?: boolean;\n}\n\n/**\n * Return {@link Editor.unhangRange} if `unhang` is true and if `at` (default: selection) is a range.\n */\nexport const unhangRange = (\n  editor: TEditor,\n  options: UnhangRangeOptions = {}\n) => {\n  const { at = editor.selection, voids, unhang = true } = options;\n\n  if (Range.isRange(at) && unhang) {\n    options.at = Editor.unhangRange(editor, at, { voids });\n  }\n};\n","import { Editor } from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\nimport { TNode } from '../../types/slate/TNode';\nimport { unhangRange, UnhangRangeOptions } from '../transforms/unhangRange';\nimport { EditorNodesOptions } from '../types/Editor.types';\nimport { getQueryOptions } from './match';\n\nexport const getNodes = <T extends TNode>(\n  editor: TEditor,\n  options: EditorNodesOptions & UnhangRangeOptions = {}\n) => {\n  unhangRange(editor, options);\n\n  return Editor.nodes<T>(editor, getQueryOptions(editor, options));\n};\n","import { NodeEntry } from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\nimport { TNode } from '../../types/slate/TNode';\nimport { EditorNodesOptions } from '../types/index';\nimport { getNodes } from './getNodes';\nimport { getQueryOptions } from './match';\n\nexport type FindNodeOptions<T extends TNode = TNode> = EditorNodesOptions<T>;\n\n/**\n * Find node matching the condition.\n */\nexport const findNode = <T extends TNode = TNode>(\n  editor: TEditor,\n  options: FindNodeOptions<T> = {}\n): NodeEntry<T> | undefined => {\n  // Slate throws when things aren't found so we wrap in a try catch and return undefined on throw.\n  try {\n    const nodeEntries = getNodes<T>(editor, {\n      at: editor.selection || [],\n      ...getQueryOptions(editor, options),\n    });\n\n    for (const [node, path] of nodeEntries) {\n      return [node, path];\n    }\n  } catch (error) {\n    return undefined;\n  }\n};\n","import { Path } from 'slate';\nimport { ReactEditor } from 'slate-react';\nimport { TNode } from '../../types/slate/TNode';\n\n/**\n * @see {@link ReactEditor.findPath}\n */\nexport const findNodePath = (\n  editor: ReactEditor,\n  node: TNode\n): Path | undefined => {\n  try {\n    return ReactEditor.findPath(editor, node);\n  } catch (e) {}\n};\n","import { Editor } from 'slate';\nimport { TAncestor } from '../../types/slate/TAncestor';\nimport { TEditor } from '../../types/slate/TEditor';\nimport { EditorAboveOptions } from '../types/Editor.types';\nimport { getQueryOptions } from './match';\n\n/**\n * Get node above a location (default: selection).\n */\nexport const getAbove = <T extends TAncestor = TAncestor>(\n  editor: TEditor,\n  options: EditorAboveOptions<T> = {}\n) => {\n  return Editor.above<T>(editor, getQueryOptions(editor, options));\n};\n","import { TAncestor } from '../../types/slate/TAncestor';\nimport { TEditor } from '../../types/slate/TEditor';\nimport { EditorAboveOptions } from '../types/Editor.types';\nimport { getAbove } from './getAbove';\n\n/**\n * Get the block above a location (default: selection).\n */\nexport const getBlockAbove = <T extends TAncestor = TAncestor>(\n  editor: TEditor,\n  options: EditorAboveOptions<T> = {}\n) =>\n  getAbove<T>(editor, {\n    ...options,\n    block: true,\n  });\n","import { NodeEntry, Path } from 'slate';\nimport { TAncestor } from '../../types/slate/TAncestor';\nimport { TDescendant } from '../../types/slate/TDescendant';\n\n/**\n * Get children node entries of a node entry.\n * TODO: try Node.children\n */\nexport const getChildren = <T extends TAncestor>(nodeEntry: NodeEntry<T>) => {\n  const [node, path] = nodeEntry;\n\n  const children = node.children || [];\n\n  return children.map((child, index) => {\n    const childPath: Path = path.concat([index]);\n    return [child, childPath] as NodeEntry<TDescendant>;\n  });\n};\n","import { NodeEntry, Path } from 'slate';\nimport { TAncestor } from '../../types/slate/TAncestor';\nimport { TDescendant } from '../../types/slate/TDescendant';\n\n/**\n * Get the last child of a node or null if no children.\n */\nexport const getLastChild = (\n  nodeEntry: NodeEntry<TAncestor>\n): NodeEntry<TDescendant> | null => {\n  const [node, path] = nodeEntry;\n\n  if (!node.children.length) return null;\n\n  return [\n    node.children[node.children.length - 1],\n    path.concat([node.children.length - 1]),\n  ];\n};\n\n/**\n * Get last child path. If there is no child, last index is 0.\n */\nexport const getLastChildPath = (nodeEntry: NodeEntry<TAncestor>): Path => {\n  const lastChild = getLastChild(nodeEntry);\n\n  if (!lastChild) return nodeEntry[1].concat([-1]);\n\n  return lastChild[1];\n};\n\n/**\n * Is the child path the last one of the parent.\n */\nexport const isLastChild = (\n  parentEntry: NodeEntry<TAncestor>,\n  childPath: Path\n): boolean => {\n  const lastChildPath = getLastChildPath(parentEntry);\n\n  return Path.equals(lastChildPath, childPath);\n};\n","import { Element } from 'slate';\nimport { AnyObject } from '../utility/AnyObject';\nimport { TDescendant } from './TDescendant';\n\nexport type TElement<TExtension = AnyObject> = Element &\n  TExtension &\n  AnyObject & {\n    type: string;\n    children: TDescendant[];\n  };\n\nexport const isElement: <TExtension = AnyObject>(\n  value: any\n) => value is TElement<TExtension> = Element.isElement as any;\n","import { Editor } from 'slate';\nimport { AnyObject } from '../utility/AnyObject';\nimport { TEditor } from './TEditor';\nimport { isElement, TElement } from './TElement';\n\nexport type TAncestor<TExtension = AnyObject> =\n  | TEditor<TExtension>\n  | TElement<TExtension>;\n\nexport const isAncestor: (value: any) => value is TAncestor = ((node: any) =>\n  Editor.isEditor(node) || isElement(node)) as any;\n","import { Editor, NodeEntry } from 'slate';\nimport { isAncestor } from '../../types/slate/TAncestor';\nimport { TDescendant } from '../../types/slate/TDescendant';\nimport { TEditor } from '../../types/slate/TEditor';\nimport { TNode } from '../../types/slate/TNode';\n\nconst getLastChild = (node: TNode, level: number): TDescendant => {\n  if (!(level + 1) || !isAncestor(node)) return node;\n\n  const { children } = node;\n\n  const lastNode = children[children.length - 1];\n\n  return getLastChild(lastNode, level - 1);\n};\n\n/**\n * Get the last node at a given level.\n */\nexport const getLastNode = (\n  editor: TEditor,\n  level: number\n): NodeEntry<TDescendant> | undefined => {\n  const { children } = editor;\n\n  const lastNode = children[children.length - 1];\n\n  if (!lastNode) return;\n\n  const [, lastPath] = Editor.last(editor, []);\n\n  return [getLastChild(lastNode, level - 1), lastPath.slice(0, level + 1)];\n};\n","import { Editor } from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\n\n/**\n * Get selected mark by type.\n */\nexport const getMark = (editor: TEditor, type: string): any => {\n  if (!editor) return;\n\n  return Editor.marks(editor)?.[type];\n};\n","import { NodeEntry, Path } from 'slate';\nimport { TAncestor } from '../../types/slate/TAncestor';\nimport { TDescendant } from '../../types/slate/TDescendant';\n\n/**\n * Get the next sibling nodes after a path.\n * @param ancestorEntry Ancestor of the sibling nodes\n * @param path Path of the reference node\n */\nexport const getNextSiblingNodes = (\n  ancestorEntry: NodeEntry<TAncestor>,\n  path: Path\n) => {\n  const [ancestor, ancestorPath] = ancestorEntry;\n\n  const leafIndex = path[ancestorPath.length];\n\n  const siblings: TDescendant[] = [];\n\n  if (leafIndex + 1 < ancestor.children.length) {\n    for (let i = leafIndex + 1; i < ancestor.children.length; i++) {\n      siblings.push(ancestor.children[i]);\n    }\n  }\n\n  return siblings;\n};\n","import { Node, Path } from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\n\n/**\n * Get the descendant node referred to by a specific path.\n * If the path is an empty array, it refers to the root node itself.\n * If the node is not found, return null.\n */\nexport const getNode = <T extends Node>(editor: TEditor, path: Path) => {\n  try {\n    return Node.get(editor, path) as T;\n  } catch (err) {\n    return null;\n  }\n};\n","import { Editor, Location, NodeEntry } from 'slate';\nimport { TAncestor } from '../../types/slate/TAncestor';\nimport { TEditor } from '../../types/slate/TEditor';\nimport { EditorParentOptions } from '../types/Editor.types';\n\n/**\n * See {@link Editor.parent}.\n * Returns undefined if there is no parent.\n */\nexport const getParent = <T extends TAncestor = TAncestor>(\n  editor: TEditor,\n  at: Location,\n  options?: EditorParentOptions\n): NodeEntry<T> | undefined => {\n  try {\n    return Editor.parent(editor, at, options) as NodeEntry<T> | undefined;\n  } catch (err) {}\n};\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n","var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n","var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n","import { Path, Range } from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\nimport { EditorAboveOptions } from '../types/Editor.types';\nimport { getBlockAbove } from './getBlockAbove';\n\n/**\n * Is the range (default: selection) across blocks.\n */\nexport const isRangeAcrossBlocks = (\n  editor: TEditor,\n  {\n    at,\n    ...options\n  }: Omit<EditorAboveOptions, 'at' | 'match'> & { at?: Range | null } = {}\n) => {\n  if (!at) at = editor.selection;\n  if (!at) return false;\n\n  const [start, end] = Range.edges(at);\n  const startBlock = getBlockAbove(editor, {\n    at: start,\n    ...options,\n  });\n  const endBlock = getBlockAbove(editor, {\n    at: end,\n    ...options,\n  });\n\n  return startBlock && endBlock && !Path.equals(startBlock[1], endBlock[1]);\n};\n","/* eslint-disable no-constant-condition */\nimport castArray from 'lodash/castArray';\nimport map from 'lodash/map';\nimport { Editor, Location, Path, Point } from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\nimport { isRangeAcrossBlocks } from './isRangeAcrossBlocks';\n\nexport interface BeforeOptions {\n  distance?: number | undefined;\n  unit?: 'character' | 'word' | 'line' | 'block' | 'offset' | undefined;\n}\n\nexport interface PointBeforeOptions extends BeforeOptions {\n  /**\n   * Lookup before the location for `matchString`.\n   */\n  matchString?: string | string[];\n\n  /**\n   * Lookup before the location until this predicate is true\n   */\n  match?: (value: {\n    beforeString: string;\n    beforePoint: Point;\n    at: Location;\n  }) => boolean;\n\n  /**\n   * If true, get the point after the matching point.\n   * If false, get the matching point.\n   */\n  afterMatch?: boolean;\n\n  /**\n   * If true, lookup until the start of the editor value.\n   * If false, lookup until the first invalid character.\n   */\n  skipInvalid?: boolean;\n}\n\n/**\n * {@link Editor.before} with additional options.\n * TODO: support for sequence of any characters.\n */\nexport const getPointBefore = (\n  editor: TEditor,\n  at: Location,\n  options?: PointBeforeOptions\n) => {\n  if (!options || (!options.match && !options.matchString)) {\n    return Editor.before(editor, at, options);\n  }\n\n  const unitOffset = !options.unit || options.unit === 'offset';\n\n  const matchStrings: string[] = options.matchString\n    ? castArray(options.matchString)\n    : [''];\n\n  let point: any;\n\n  matchStrings.some((matchString) => {\n    let beforeAt = at;\n    let previousBeforePoint = Editor.point(editor, at, { edge: 'end' });\n\n    const stackLength = matchString.length + 1;\n    const stack = Array(stackLength);\n\n    let count = 0;\n\n    while (true) {\n      const beforePoint = Editor.before(editor, beforeAt, options);\n\n      // not found\n      if (!beforePoint) return;\n\n      // stop looking outside of current block\n      if (\n        isRangeAcrossBlocks(editor, {\n          at: {\n            anchor: beforePoint,\n            focus: previousBeforePoint,\n          },\n        })\n      ) {\n        return;\n      }\n\n      const beforeString = Editor.string(editor, {\n        anchor: beforePoint,\n        focus: previousBeforePoint,\n      });\n\n      let beforeStringToMatch = beforeString;\n\n      if (unitOffset && stackLength) {\n        stack.unshift({\n          point: beforePoint,\n          text: beforeString,\n        });\n        stack.pop();\n\n        beforeStringToMatch = map(stack.slice(0, -1), 'text').join('');\n      }\n\n      if (\n        matchString === beforeStringToMatch ||\n        options.match?.({ beforeString: beforeStringToMatch, beforePoint, at })\n      ) {\n        if (options.afterMatch) {\n          if (stackLength && unitOffset) {\n            point = stack[stack.length - 1]?.point;\n            return !!point;\n          }\n          point = previousBeforePoint;\n          return true;\n        }\n        point = beforePoint;\n        return true;\n      }\n\n      previousBeforePoint = beforePoint;\n      beforeAt = beforePoint;\n\n      count += 1;\n\n      if (!options.skipInvalid) {\n        if (!matchString || count > matchString.length) return;\n      }\n    }\n  });\n\n  return point;\n};\n","import { Location, Path, Point, Range } from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\n\n/**\n * Get the point from a location (default: selection).\n * If the location is a range, get the anchor point.\n * If the location is a path, get the point at this path with offset 0.\n * If `focus` is true, get the focus point.\n */\nexport const getPointFromLocation = (\n  editor: TEditor,\n  {\n    at = editor.selection,\n    focus,\n  }: {\n    at?: Location | null;\n    focus?: boolean;\n  } = {}\n) => {\n  let point: Point | undefined;\n  if (Range.isRange(at)) point = !focus ? at.anchor : at.focus;\n  if (Point.isPoint(at)) point = at;\n  if (Path.isPath(at)) point = { path: at, offset: 0 };\n\n  return point;\n};\n","import { Editor, Path, Point } from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\nimport { getBlockAbove } from './getBlockAbove';\n\n/**\n * If the start point is inside an inline void, get the point before or after it.\n */\nexport const getPointNextToVoid = (\n  editor: TEditor,\n  {\n    at,\n    after,\n  }: {\n    at: Point;\n    /**\n     * Get the point after (instead of before) the void node.\n     */\n    after?: boolean;\n  }\n) => {\n  const startVoid = Editor.void(editor, { at, mode: 'highest' });\n\n  if (startVoid) {\n    const blockAbove = getBlockAbove(editor, { at });\n\n    if (blockAbove) {\n      let nextPoint: Point | undefined;\n      if (after) {\n        nextPoint = Editor.after(editor, at);\n      } else {\n        nextPoint = Editor.before(editor, at);\n      }\n\n      if (\n        nextPoint &&\n        blockAbove &&\n        Path.isAncestor(blockAbove[1], nextPoint.path)\n      ) {\n        at = nextPoint;\n      }\n    }\n  }\n\n  return at;\n};\n","import castArray from 'lodash/castArray';\nimport { NodeEntry } from 'slate';\nimport { TNode } from '../../types/slate/TNode';\nimport { QueryNodeOptions } from '../types/QueryNodeOptions';\n\n/**\n * Query the node entry.\n */\nexport const queryNode = <T extends TNode>(\n  entry?: NodeEntry<T>,\n  { filter, allow, exclude }: QueryNodeOptions = {}\n) => {\n  if (!entry) return false;\n\n  if (filter && !filter(entry)) {\n    return false;\n  }\n\n  if (allow) {\n    const allows = castArray(allow);\n\n    if (allows.length && !allows.includes(entry[0].type)) {\n      return false;\n    }\n  }\n\n  if (exclude) {\n    const excludes = castArray(exclude);\n\n    if (excludes.length && excludes.includes(entry[0].type)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","import { Editor, Node, NodeEntry } from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\nimport { TNode } from '../../types/slate/TNode';\nimport { QueryNodeOptions } from '../types/QueryNodeOptions';\nimport { findNode } from './findNode';\nimport { queryNode } from './queryNode';\n\n/**\n * Find the block before a block by id.\n * If not found, find the first block by id and return [null, its previous path]\n */\nexport const getPreviousBlockById = (\n  editor: TEditor,\n  id: string,\n  query?: QueryNodeOptions\n): NodeEntry<Node> | undefined => {\n  const entry = findNode(editor, { match: { id } });\n  if (entry) {\n    const prevEntry = Editor.previous<TNode>(editor, { at: entry[1] });\n    if (prevEntry && prevEntry[0].id && Editor.isBlock(editor, prevEntry[0])) {\n      return prevEntry;\n    }\n  }\n  let found = false;\n  const nodeEntries = [\n    ...Editor.nodes(editor, {\n      mode: 'highest',\n      reverse: true,\n      match: (_n) => {\n        const n = _n as TNode;\n\n        // filter nodes that are not blocks and without id.\n        if (!Editor.isBlock(editor, n) || !n.id) return false;\n\n        // find the block then take the previous one.\n        if (n.id === id) {\n          found = true;\n          return false;\n        }\n\n        return found && n.id !== id && queryNode([n, []], query);\n      },\n      at: [],\n    }),\n  ];\n  if (nodeEntries.length) {\n    return nodeEntries[0];\n  }\n  if (!found) return;\n\n  const firstNodeEntry = [\n    ...Editor.nodes(editor, {\n      mode: 'highest',\n      match: (_n) => {\n        const n = _n as TNode;\n\n        return Editor.isBlock(editor, n) && !!n.id && queryNode([n, []], query);\n      },\n      at: [],\n    }),\n  ];\n\n  if (firstNodeEntry.length) {\n    const [, path] = firstNodeEntry[0];\n\n    path[path.length - 1] = path[path.length - 1] - 1;\n\n    return [null, path] as any;\n  }\n};\n","import { Path } from 'slate';\n\nexport const getPreviousPath = (path: Path): Path | undefined => {\n  if (path.length === 0) return;\n\n  const last = path[path.length - 1];\n\n  if (last <= 0) return;\n\n  return path.slice(0, -1).concat(last - 1);\n};\n","import { Editor, Location, Range } from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\nimport { getPointBefore, PointBeforeOptions } from './getPointBefore';\n\nexport interface RangeBeforeOptions extends PointBeforeOptions {}\n\n/**\n * Get range from {@link getPointBefore} to the end point of `at`.\n */\nexport const getRangeBefore = (\n  editor: TEditor,\n  at: Location,\n  options?: RangeBeforeOptions\n): Range | undefined => {\n  const anchor = getPointBefore(editor, at, options);\n  if (!anchor) return;\n\n  const focus = Editor.point(editor, at, { edge: 'end' });\n\n  return {\n    anchor,\n    focus,\n  };\n};\n","import { Editor } from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\nimport { EditorAboveOptions } from '../types/Editor.types';\nimport { getBlockAbove } from './getBlockAbove';\nimport { getPointFromLocation } from './getPointFromLocation';\n\n/**\n * Get the range from the start of the block above a location (default: selection) to the location.\n */\nexport const getRangeFromBlockStart = (\n  editor: TEditor,\n  options: Omit<EditorAboveOptions, 'match'> = {}\n) => {\n  const path = getBlockAbove(editor, options)?.[1];\n  if (!path) return;\n\n  const start = Editor.start(editor, path);\n\n  const focus = getPointFromLocation(editor, options);\n\n  if (!focus) return;\n\n  return { anchor: start, focus };\n};\n","import { Editor, Location } from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\n\n/**\n * See {@link Editor.string}.\n * If `at` is not defined, return an empty string.\n */\nexport const getText = (editor: TEditor, at?: Location | null) =>\n  (at && Editor.string(editor, at)) ?? '';\n","import { TEditor } from '../../types/slate/TEditor';\nimport { getText } from './getText';\n\n/**\n * Get the selected text.\n * Return empty string if no selection.\n */\nexport const getSelectionText = (editor: TEditor) =>\n  getText(editor, editor.selection);\n","import { Node, Text } from 'slate';\n\nexport const hasSingleChild = (node: Node): boolean => {\n  if (Text.isText(node)) {\n    return true;\n  }\n  return node.children.length === 1 && hasSingleChild(node.children[0]);\n};\n","import { Ancestor, Editor, Node } from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\n\n/**\n * Is an ancestor empty (empty text and no inline children).\n */\nexport const isAncestorEmpty = (editor: TEditor, node: Ancestor) =>\n  !Node.string(node) && !node.children.some((n) => Editor.isInline(editor, n));\n","import { TEditor } from '../../types/slate/TEditor';\nimport { getBlockAbove } from './getBlockAbove';\nimport { isAncestorEmpty } from './isAncestorEmpty';\n\n/**\n * Is the block above the selection empty.\n */\nexport const isBlockAboveEmpty = (editor: TEditor) => {\n  const block = getBlockAbove(editor)?.[0];\n  if (!block) return false;\n  return isAncestorEmpty(editor, block);\n};\n","import { Text } from 'slate';\nimport { AnyObject } from '../utility/AnyObject';\n\nexport type TText<TExtension = AnyObject> = Text & TExtension & AnyObject;\n\nexport const isText: <TExtension = AnyObject>(\n  value: any\n) => value is TText<TExtension> = Text.isText as any;\n","import { Editor } from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\nimport { isText } from '../../types/slate/TText';\nimport { getBlockAbove } from './getBlockAbove';\nimport { getNextSiblingNodes } from './getNextSiblingNodes';\nimport { getParent } from './getParent';\n\n/**\n * Is there empty text after the selection.\n * If there is no leaf after the selected leaf, return {@link Editor.isEnd}.\n * Else, check if the next leaves are empty.\n */\nexport const isBlockTextEmptyAfterSelection = (editor: TEditor) => {\n  if (!editor.selection) return false;\n\n  const blockAbove = getBlockAbove(editor);\n  if (!blockAbove) return false;\n\n  const cursor = editor.selection.focus;\n\n  const selectionParentEntry = getParent(editor, editor.selection);\n  if (!selectionParentEntry) return false;\n  const [, selectionParentPath] = selectionParentEntry;\n\n  if (!Editor.isEnd(editor, cursor, selectionParentPath)) return false;\n\n  const siblingNodes = getNextSiblingNodes(blockAbove, cursor.path);\n\n  if (siblingNodes.length) {\n    for (const siblingNode of siblingNodes) {\n      if (isText(siblingNode) && siblingNode.text) {\n        return false;\n      }\n    }\n  } else {\n    return Editor.isEnd(editor, cursor, blockAbove[1]);\n  }\n\n  return true;\n};\n","import { Range } from 'slate';\n\n/**\n * See {@link Range.isCollapsed}.\n * Return false if `range` is not defined.\n */\nexport const isCollapsed = (range?: Range | null) =>\n  !!range && Range.isCollapsed(range);\n","import { Editor, Location, Point } from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\n\n/**\n * {@link Editor.isEnd}. If point is null, return false.\n */\nexport const isEnd = (\n  editor: TEditor,\n  point: Point | null | undefined,\n  at: Location\n): boolean => !!point && Editor.isEnd(editor, point, at);\n","import { Range } from 'slate';\n\n/**\n * See {@link Range.isExpanded}.\n * Return false if `range` is not defined.\n */\nexport const isExpanded = (range?: Range | null) =>\n  !!range && Range.isExpanded(range);\n","import { Path } from 'slate';\n\n/**\n * Is it the first child of the parent\n */\nexport const isFirstChild = (path: Path) => path[path.length - 1] === 0;\n","/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: any): obj is undefined {\n  return typeof obj === 'undefined';\n}\n\nexport function isNull(obj: any): obj is null {\n  return obj === null;\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: any): obj is undefined | null {\n  return isUndefined(obj) || isNull(obj);\n}\n\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined<T>(arg: T | null | undefined): arg is T {\n  return !isUndefinedOrNull(arg);\n}\n","import { TEditor } from '../../types/slate/TEditor';\nimport { isDefined } from '../utils/types.utils';\nimport { getMark } from './getMark';\n\n/**\n * Is the mark defined in the selection.\n */\nexport const isMarkActive = (editor: TEditor, type: string) => {\n  return isDefined(getMark(editor, type));\n};\n","import { Editor, Point } from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\nimport { getText } from './getText';\n\n// Starts with whitespace char or nothing\nconst AFTER_MATCH_REGEX = /^(\\s|$)/;\n\n/**\n * Is a point at the end of a word\n */\nexport const isPointAtWordEnd = (editor: TEditor, { at }: { at: Point }) => {\n  // Point after at\n  const after = Editor.after(editor, at);\n\n  // From at to after\n  const afterRange = Editor.range(editor, at, after);\n  const afterText = getText(editor, afterRange);\n\n  // Match regex on after text\n  return !!afterText.match(AFTER_MATCH_REGEX);\n};\n","import { Path, Range } from 'slate';\n\n/**\n * Is the range in the same single text path.\n */\nexport const isRangeInSingleText = (at: Range) => {\n  const [start, end] = Range.edges(at);\n  return Path.equals(start.path, end.path);\n};\n","import { TEditor } from '../../types/slate/TEditor';\nimport { getBlockAbove } from './getBlockAbove';\nimport { isEnd } from './isEnd';\n\n/**\n * Is the selection focus at the end of its parent block.\n */\nexport const isSelectionAtBlockEnd = (editor: TEditor): boolean => {\n  const path = getBlockAbove(editor)?.[1];\n\n  return !!path && isEnd(editor, editor.selection?.focus, path);\n};\n","import { Editor, Location, Point } from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\n\n/**\n * {@link Editor.isStart}. If point is null, return false.\n */\nexport const isStart = (\n  editor: TEditor,\n  point: Point | null | undefined,\n  at: Location\n): boolean => !!point && Editor.isStart(editor, point, at);\n","import { TAncestor } from '../../types/slate/TAncestor';\nimport { TEditor } from '../../types/slate/TEditor';\nimport { AnyObject } from '../../types/utility/AnyObject';\nimport { EditorAboveOptions } from '../types/Editor.types';\nimport { getBlockAbove } from './getBlockAbove';\nimport { isStart } from './isStart';\n\n/**\n * Is the selection focus at the start of its parent block.\n *\n * Supports the same options provided by {@link getBlockAbove}.\n */\nexport const isSelectionAtBlockStart = (\n  editor: TEditor,\n  options?: EditorAboveOptions<TAncestor<AnyObject>>\n) => {\n  const path = getBlockAbove(editor, options)?.[1];\n\n  return !!path && isStart(editor, editor.selection?.focus, path);\n};\n","import { TEditor } from '../../types/slate/TEditor';\nimport { isExpanded } from './isExpanded';\n\n/**\n * Is the selection expanded.\n */\nexport const isSelectionExpanded = (editor: TEditor) =>\n  isExpanded(editor.selection);\n","import { Node, Path, Text } from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\n\nexport const isTextByPath = (editor: TEditor, path: Path) => {\n  const node = Node.get(editor, path);\n\n  return Text.isText(node);\n};\n","import { PlateEditor } from '../types/PlateEditor';\nimport { WithPlatePlugin } from '../types/plugins/PlatePlugin';\nimport { PluginKey } from '../types/plugins/PlatePluginKey';\n\n/**\n * Get `editor.pluginsByKey`\n */\nexport const getPluginsByKey = <T = {}, P = {}>(\n  editor?: PlateEditor<T>\n): Record<PluginKey, WithPlatePlugin<T, P>> => {\n  const plugins = {};\n\n  if (editor?.pluginsByKey) {\n    return editor.pluginsByKey as Record<PluginKey, WithPlatePlugin<T, P>>;\n  }\n\n  return plugins;\n};\n","import { PlateEditor } from '../types/PlateEditor';\nimport { WithPlatePlugin } from '../types/plugins/PlatePlugin';\nimport { PluginKey } from '../types/plugins/PlatePluginKey';\nimport { getPluginsByKey } from './getPluginsByKey';\n\n/**\n * Get plugin options by plugin key.\n */\nexport const getPlugin = <P = {}, T = {}>(\n  editor: PlateEditor<T>,\n  key: PluginKey\n): WithPlatePlugin<T, P> => getPluginsByKey<T, P>(editor)[key] ?? { key };\n","import { PlateEditor } from '../types/PlateEditor';\nimport { getPlugin } from './getPlugin';\n\n/**\n * Get plugin type option by plugin key.\n */\nexport const getPluginType = <T = {}>(\n  editor: PlateEditor<T>,\n  key: string\n): string => getPlugin(editor, key).type ?? key ?? '';\n","import castArray from 'lodash/castArray';\nimport { PlateEditor } from '../../types/PlateEditor';\nimport { getPluginType } from '../../utils/getPluginType';\n\n/**\n * Does the node match the type provided.\n */\nexport const isType = (\n  editor: PlateEditor,\n  node: any,\n  key?: string | string[]\n) => {\n  const keys = castArray(key);\n  keys.forEach((_key) => {\n    if (node?.type === getPluginType(editor, _key)) return true;\n  });\n  return false;\n};\n","export const escapeRegExp = (text: string) => {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\\\s]/g, '\\\\$&');\n};\n","import { Editor, Point } from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\nimport { escapeRegExp } from '../utils/escapeRegexp';\nimport { getText } from './getText';\n\n/**\n * Is the word at the point after a trigger (punctuation character)\n * https://github.com/ianstormtaylor/slate/blob/main/packages/slate/src/utils/string.ts#L6\n */\nexport const isWordAfterTrigger = (\n  editor: TEditor,\n  { at, trigger }: { at: Point; trigger: string }\n) => {\n  // Point at the start of previous word (excluding punctuation)\n  const wordBefore = Editor.before(editor, at, { unit: 'word' });\n\n  // Point before wordBefore\n  const before = wordBefore && Editor.before(editor, wordBefore);\n\n  // Range from before to start\n  const beforeRange = before && Editor.range(editor, before, at);\n\n  // Before text\n  const beforeText = getText(editor, beforeRange);\n\n  // Starts with char and ends with word characters\n  const escapedTrigger = escapeRegExp(trigger);\n\n  const beforeRegex = new RegExp(\n    `^${escapedTrigger}([\\\\w|À-ÖØ-öø-ÿ|а-яА-ЯёЁ]+)$`\n  );\n\n  // Match regex on before text\n  const match = !!beforeText && beforeText.match(beforeRegex);\n\n  return {\n    range: beforeRange,\n    match,\n  };\n};\n","import { TEditor } from '../../types/slate/TEditor';\nimport { TNode } from '../../types/slate/TNode';\nimport { findNode, FindNodeOptions } from './findNode';\n\n/**\n * Iterate through all of the nodes in the editor and break early for the first truthy match. Otherwise\n * returns false.\n */\nexport const someNode = <T extends TNode = TNode>(\n  editor: TEditor,\n  options: FindNodeOptions<T>\n) => {\n  return !!findNode<T>(editor, options);\n};\n","import castArray from 'lodash/castArray';\nimport { TEditor } from '../../types/slate/TEditor';\nimport { QueryEditorOptions } from '../types/QueryEditorOptions';\nimport { isSelectionAtBlockEnd } from './isSelectionAtBlockEnd';\nimport { isSelectionAtBlockStart } from './isSelectionAtBlockStart';\nimport { someNode } from './someNode';\n\n/**\n * Query the editor state.\n */\nexport const queryEditor = (\n  editor: TEditor,\n  {\n    filter,\n    selectionAtBlockStart,\n    selectionAtBlockEnd,\n    allow,\n    exclude,\n    at = editor.selection || [],\n  }: QueryEditorOptions = {}\n) => {\n  if (\n    (filter && !filter(editor)) ||\n    (selectionAtBlockStart && !isSelectionAtBlockStart(editor)) ||\n    (selectionAtBlockEnd && !isSelectionAtBlockEnd(editor))\n  ) {\n    return false;\n  }\n\n  const allows = castArray(allow);\n  if (allows.length && !someNode(editor, { at, match: { type: allows } })) {\n    return false;\n  }\n\n  const excludes = castArray(exclude);\n  if (excludes.length && someNode(editor, { at, match: { type: excludes } })) {\n    return false;\n  }\n\n  return true;\n};\n","import { Transforms } from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\nimport { TNode } from '../../types/slate/TNode';\nimport { SetNodesOptions } from '../types/Transforms.types';\n\nexport const unsetNodes = <T extends TNode = TNode>(\n  editor: TEditor,\n  props:\n    | keyof Omit<T, 'children' | 'text'>\n    | (keyof Omit<T, 'children' | 'text'>)[],\n  options: SetNodesOptions = {}\n) => {\n  return Transforms.unsetNodes<T>(editor, props as any, options as any);\n};\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n","var baseRest = require('./_baseRest'),\n    eq = require('./eq'),\n    isIterateeCall = require('./_isIterateeCall'),\n    keysIn = require('./keysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar defaults = baseRest(function(object, sources) {\n  object = Object(object);\n\n  var index = -1;\n  var length = sources.length;\n  var guard = length > 2 ? sources[2] : undefined;\n\n  if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n    length = 1;\n  }\n\n  while (++index < length) {\n    var source = sources[index];\n    var props = keysIn(source);\n    var propsIndex = -1;\n    var propsLength = props.length;\n\n    while (++propsIndex < propsLength) {\n      var key = props[propsIndex];\n      var value = object[key];\n\n      if (value === undefined ||\n          (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        object[key] = source[key];\n      }\n    }\n  }\n\n  return object;\n});\n\nmodule.exports = defaults;\n","import { NodeEntry } from 'slate';\nimport { queryNode } from '../common/queries/index';\nimport { QueryNodeOptions } from '../common/types/QueryNodeOptions';\nimport { isAncestor } from '../types/slate/TAncestor';\nimport { TDescendant } from '../types/slate/TDescendant';\nimport { TNode } from '../types/slate/TNode';\n\nexport interface ApplyDeepToNodesOptions {\n  // The destination node object.\n  node: TNode;\n  // The source object. Can be a factory.\n  source: Record<string, any> | (() => Record<string, any>);\n  // Function to call on each node following the query.\n  apply: (\n    node: TNode,\n    source: Record<string, any> | (() => Record<string, any>)\n  ) => void;\n  // Query to filter the nodes.\n  query?: QueryNodeOptions;\n}\n\n/**\n * Recursively apply an operation to children nodes with a query.\n */\nexport const applyDeepToNodes = ({\n  node,\n  source,\n  apply,\n  query,\n}: ApplyDeepToNodesOptions) => {\n  const entry: NodeEntry<TNode> = [node, []];\n\n  if (queryNode(entry, query)) {\n    if (source instanceof Function) {\n      apply(node, source());\n    } else {\n      apply(node, source);\n    }\n  }\n\n  if (!isAncestor(node)) return;\n\n  node.children.forEach((child: TDescendant) => {\n    applyDeepToNodes({ node: child, source, apply, query });\n  });\n};\n","import defaults from 'lodash/defaults';\nimport {\n  applyDeepToNodes,\n  ApplyDeepToNodesOptions,\n} from '../../utils/applyDeepToNodes';\n\n/**\n * Recursively merge a source object to children nodes with a query.\n */\nexport const defaultsDeepToNodes = (\n  options: Omit<ApplyDeepToNodesOptions, 'apply'>\n) => {\n  applyDeepToNodes({ ...options, apply: defaults });\n};\n","import {\n  Editor,\n  Element,\n  Location,\n  Node,\n  Path,\n  Range,\n  Text,\n  Transforms,\n} from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\nimport { hasSingleChild } from '../queries/hasSingleChild';\n\n/**\n * Merge a node at a location with the previous node of the same depth,\n * removing any empty containing nodes after the merge if necessary.\n */\nexport const mergeNodes = (\n  editor: TEditor,\n  options: {\n    at?: Location;\n    // match?: NodeMatch;\n    match?: (n: Node) => boolean;\n    mode?: 'highest' | 'lowest';\n    hanging?: boolean;\n    voids?: boolean;\n    /**\n     * Default: if the node isn't already the next sibling of the previous node, move\n     * it so that it is before merging.\n     */\n    mergeNode?: (editor: TEditor, options: { at: Path; to: Path }) => void;\n    /**\n     * Default: if there was going to be an empty ancestor of the node that was merged,\n     * we remove it from the tree.\n     */\n    removeEmptyAncestor?: (editor: TEditor, options: { at: Path }) => void;\n  } = {}\n): void => {\n  Editor.withoutNormalizing(editor, () => {\n    let { match, at = editor.selection } = options;\n    const {\n      mergeNode,\n      removeEmptyAncestor,\n      hanging = false,\n      voids = false,\n      mode = 'lowest',\n    } = options;\n\n    if (!at) {\n      return;\n    }\n\n    if (match == null) {\n      if (Path.isPath(at)) {\n        const [parent] = Editor.parent(editor, at);\n        match = (n) => parent.children.includes(n);\n      } else {\n        match = (n) => Editor.isBlock(editor, n);\n      }\n    }\n\n    if (!hanging && Range.isRange(at)) {\n      at = Editor.unhangRange(editor, at);\n    }\n\n    if (Range.isRange(at)) {\n      if (Range.isCollapsed(at)) {\n        at = at.anchor;\n      } else {\n        const [, end] = Range.edges(at);\n        const pointRef = Editor.pointRef(editor, end);\n        Transforms.delete(editor, { at });\n        at = pointRef.unref()!;\n\n        if (options.at == null) {\n          Transforms.select(editor, at);\n        }\n      }\n    }\n\n    const [current] = Editor.nodes(editor, { at, match, voids, mode });\n    const prev = Editor.previous(editor, { at, match, voids, mode });\n\n    if (!current || !prev) {\n      return;\n    }\n\n    const [node, path] = current;\n    const [prevNode, prevPath] = prev;\n\n    if (path.length === 0 || prevPath.length === 0) {\n      return;\n    }\n\n    const newPath = Path.next(prevPath);\n    const commonPath = Path.common(path, prevPath);\n    const isPreviousSibling = Path.isSibling(path, prevPath);\n    const levels = Array.from(Editor.levels(editor, { at: path }), ([n]) => n)\n      .slice(commonPath.length)\n      .slice(0, -1);\n\n    // Determine if the merge will leave an ancestor of the path empty as a\n    // result, in which case we'll want to remove it after merging.\n    const emptyAncestor = Editor.above(editor, {\n      at: path,\n      mode: 'highest',\n      match: (n) =>\n        levels.includes(n) && Element.isElement(n) && hasSingleChild(n),\n    });\n\n    const emptyRef = emptyAncestor && Editor.pathRef(editor, emptyAncestor[1]);\n    let properties;\n    let position;\n\n    // Ensure that the nodes are equivalent, and figure out what the position\n    // and extra properties of the merge will be.\n    if (Text.isText(node) && Text.isText(prevNode)) {\n      const { text, ...rest } = node;\n      position = prevNode.text.length;\n      properties = rest as Partial<Text>;\n    } else if (Element.isElement(node) && Element.isElement(prevNode)) {\n      const { children, ...rest } = node;\n      position = prevNode.children.length;\n      properties = rest as Partial<Element>;\n    } else {\n      throw new Error(\n        `Cannot merge the node at path [${path}] with the previous sibling because it is not the same kind: ${JSON.stringify(\n          node\n        )} ${JSON.stringify(prevNode)}`\n      );\n    }\n\n    // If the node isn't already the next sibling of the previous node, move\n    // it so that it is before merging.\n    if (!isPreviousSibling) {\n      // DIFF\n      if (!mergeNode) {\n        Transforms.moveNodes(editor, { at: path, to: newPath, voids });\n      }\n    }\n\n    // If there was going to be an empty ancestor of the node that was merged,\n    // we remove it from the tree.\n    if (emptyRef) {\n      // DIFF: start\n      if (!removeEmptyAncestor) {\n        Transforms.removeNodes(editor, { at: emptyRef.current!, voids });\n      } else {\n        const emptyPath = emptyRef.current;\n        emptyPath && removeEmptyAncestor(editor, { at: emptyPath });\n      }\n      // DIFF: end\n    }\n\n    // If the target node that we're merging with is empty, remove it instead\n    // of merging the two. This is a common rich text editor behavior to\n    // prevent losing formatting when deleting entire nodes when you have a\n    // hanging selection.\n    // DIFF: start\n    if (mergeNode) {\n      mergeNode(editor, { at: path, to: newPath });\n      // DIFF: end\n    } else if (\n      (Element.isElement(prevNode) && Editor.isEmpty(editor, prevNode)) ||\n      (Text.isText(prevNode) && prevNode.text === '')\n    ) {\n      Transforms.removeNodes(editor, { at: prevPath, voids });\n    } else {\n      editor.apply({\n        type: 'merge_node',\n        path: newPath,\n        position,\n        properties,\n      });\n    }\n\n    if (emptyRef) {\n      emptyRef.unref();\n    }\n  });\n};\n","import {\n  Editor,\n  Location,\n  NodeEntry,\n  Path,\n  Point,\n  Range,\n  Transforms,\n} from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\nimport { mergeNodes } from './mergeNodes';\n\nexport const deleteFragment = (\n  editor: TEditor,\n  options: {\n    at?: Location;\n    distance?: number;\n    unit?: 'character' | 'word' | 'line' | 'block';\n    reverse?: boolean;\n    hanging?: boolean;\n    voids?: boolean;\n    test?: any;\n  } = {}\n): void => {\n  Editor.withoutNormalizing(editor, () => {\n    const {\n      reverse = false,\n      unit = 'character',\n      distance = 1,\n      voids = false,\n    } = options;\n    let { at = editor.selection, hanging = false } = options;\n\n    if (!at) {\n      return;\n    }\n\n    if (Range.isRange(at) && Range.isCollapsed(at)) {\n      at = at.anchor;\n    }\n\n    if (Point.isPoint(at)) {\n      const furthestVoid = Editor.void(editor, { at, mode: 'highest' });\n\n      if (!voids && furthestVoid) {\n        const [, voidPath] = furthestVoid;\n        at = voidPath;\n      } else {\n        const opts = { unit, distance };\n        const target = reverse\n          ? Editor.before(editor, at, opts) || Editor.start(editor, [])\n          : Editor.after(editor, at, opts) || Editor.end(editor, []);\n        at = { anchor: at, focus: target };\n        hanging = true;\n      }\n    }\n\n    if (Path.isPath(at)) {\n      Transforms.removeNodes(editor, { at, voids });\n      return;\n    }\n\n    if (Range.isCollapsed(at)) {\n      return;\n    }\n\n    if (!hanging) {\n      at = Editor.unhangRange(editor, at, { voids });\n    }\n\n    let [start, end] = Range.edges(at);\n    const startBlock = Editor.above(editor, {\n      match: (n) => Editor.isBlock(editor, n),\n      at: start,\n      voids,\n    });\n    const endBlock = Editor.above(editor, {\n      match: (n) => Editor.isBlock(editor, n),\n      at: end,\n      voids,\n    });\n    const isAcrossBlocks =\n      startBlock && endBlock && !Path.equals(startBlock[1], endBlock[1]);\n    const isSingleText = Path.equals(start.path, end.path);\n    const startVoid = voids\n      ? null\n      : Editor.void(editor, { at: start, mode: 'highest' });\n    const endVoid = voids\n      ? null\n      : Editor.void(editor, { at: end, mode: 'highest' });\n\n    // If the start or end points are inside an inline void, nudge them out.\n    if (startVoid) {\n      const before = Editor.before(editor, start);\n\n      if (before && startBlock && Path.isAncestor(startBlock[1], before.path)) {\n        start = before;\n      }\n    }\n\n    if (endVoid) {\n      const after = Editor.after(editor, end);\n\n      if (after && endBlock && Path.isAncestor(endBlock[1], after.path)) {\n        end = after;\n      }\n    }\n\n    // Get the highest nodes that are completely inside the range, as well as\n    // the start and end nodes.\n    const matches: NodeEntry[] = [];\n    let lastPath: Path | undefined;\n\n    for (const entry of Editor.nodes(editor, { at, voids })) {\n      const [node, path] = entry;\n\n      if (lastPath && Path.compare(path, lastPath) === 0) {\n        continue;\n      }\n\n      if (\n        (!voids && Editor.isVoid(editor, node)) ||\n        (!Path.isCommon(path, start.path) && !Path.isCommon(path, end.path))\n      ) {\n        matches.push(entry);\n        lastPath = path;\n      }\n    }\n\n    const pathRefs = Array.from(matches, ([, p]) => Editor.pathRef(editor, p));\n    const startRef = Editor.pointRef(editor, start);\n    const endRef = Editor.pointRef(editor, end);\n\n    if (!isSingleText && !startVoid) {\n      const point = startRef.current!;\n      const [node] = Editor.leaf(editor, point);\n      const { path } = point;\n      const { offset } = start;\n      const text = node.text.slice(offset);\n      editor.apply({ type: 'remove_text', path, offset, text });\n    }\n\n    for (const pathRef of pathRefs) {\n      const path = pathRef.unref()!;\n      Transforms.removeNodes(editor, { at: path, voids });\n    }\n\n    if (!endVoid) {\n      const point = endRef.current!;\n      const [node] = Editor.leaf(editor, point);\n      const { path } = point;\n      const offset = isSingleText ? start.offset : 0;\n      const text = node.text.slice(offset, end.offset);\n      editor.apply({ type: 'remove_text', path, offset, text });\n    }\n\n    if (!isSingleText && isAcrossBlocks && endRef.current && startRef.current) {\n      // DIFF: allow custom mergeNodes\n      mergeNodes(editor, {\n        at: endRef.current,\n        hanging: true,\n        voids,\n      });\n    }\n\n    const point = endRef.unref() || startRef.unref();\n\n    if (options.at == null && point) {\n      Transforms.select(editor, point);\n    }\n  });\n};\n","import { Transforms } from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\nimport { TNode } from '../../types/slate/TNode';\nimport { InsertNodesOptions } from '../types/Transforms.types';\n\nexport const insertNodes = <\n  T extends TNode = TNode,\n  TNodeMatch extends TNode = TNode\n>(\n  editor: TEditor,\n  props: T | T[],\n  options?: InsertNodesOptions\n) => Transforms.insertNodes<TNodeMatch>(editor, props, options as any);\n","import { TEditor } from '../../types/slate/TEditor';\nimport { TElement } from '../../types/slate/TElement';\nimport { getQueryOptions } from '../queries/match';\nimport { InsertNodesOptions } from '../types/Transforms.types';\nimport { insertNodes } from './insertNodes';\n\nexport const insertEmptyElement = (\n  editor: TEditor,\n  type: string,\n  options?: InsertNodesOptions\n) => {\n  insertNodes<TElement>(\n    editor,\n    {\n      type,\n      children: [{ text: '' }],\n    },\n    getQueryOptions(editor, options)\n  );\n};\n","import { Editor, Node, NodeEntry, Path, Transforms } from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\nimport { getNode } from '../queries/getNode';\n\nexport interface MoveChildrenOptions {\n  /**\n   * Parent node of the children to move.\n   */\n  at: NodeEntry | Path;\n\n  /**\n   * Path where to move the children.\n   */\n  to: Path;\n\n  /**\n   * Start index of the children to move.\n   * Example: 1 means children[0] will not be moved.\n   */\n  fromStartIndex?: number;\n\n  /**\n   * Condition for the child to be moved\n   */\n  match?(entry: NodeEntry): boolean;\n}\n\n/**\n * Move the children of a node to a path.\n * Returns the number of children moved.\n */\nexport const moveChildren = (\n  editor: TEditor,\n  { at, to, match, fromStartIndex = 0 }: MoveChildrenOptions\n) => {\n  let moved = 0;\n  const parentPath = Path.isPath(at) ? at : at[1];\n  const parentNode = Path.isPath(at) ? Node.get(editor, parentPath) : at[0];\n\n  if (!Editor.isBlock(editor, parentNode)) return moved;\n\n  for (let i = parentNode.children.length - 1; i >= fromStartIndex; i--) {\n    const childPath = [...parentPath, i];\n    const childNode = getNode(editor, childPath);\n\n    if (!match || (childNode && match([childNode, childPath]))) {\n      Transforms.moveNodes(editor, { at: childPath, to });\n      moved++;\n    }\n  }\n\n  return moved;\n};\n","import { castArray } from 'lodash';\nimport { Editor, Range, Text, Transforms } from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\nimport { SetNodesOptions } from '../types/index';\n\nexport interface RemoveMarkOptions\n  extends Omit<SetNodesOptions, 'match' | 'split'> {\n  /**\n   * Mark or the array of marks that will be removed\n   */\n  key: string | string[];\n\n  /**\n   * When location is not a Range,\n   * setting this to false can prevent the onChange event of the editor to fire\n   * @default true\n   */\n  shouldChange?: boolean;\n\n  /**\n   * Range where the mark(s) will be removed\n   */\n  at?: Range;\n}\n\n/**\n * Remove mark and trigger `onChange` if collapsed selection.\n */\nexport const removeMark = (\n  editor: TEditor,\n  { key, at, shouldChange = true, ...rest }: RemoveMarkOptions\n) => {\n  const selection = at ?? editor.selection;\n  key = castArray(key);\n\n  if (selection) {\n    if (Range.isRange(selection) && Range.isExpanded(selection)) {\n      Transforms.unsetNodes(editor, key, {\n        at: selection,\n        match: Text.isText,\n        split: true,\n        ...rest,\n      });\n    } else if (editor.selection) {\n      const marks = { ...(Editor.marks(editor) || {}) };\n      key.forEach((k) => {\n        delete marks[k];\n      });\n      editor.marks = marks;\n      shouldChange && editor.onChange();\n    }\n  }\n};\n","import { Editor, Location, Transforms } from 'slate';\nimport { ReactEditor } from 'slate-react';\n\nexport interface SelectEditorOptions {\n  /**\n   * Specific location if edge is not defined.\n   */\n  at?: Location;\n\n  /**\n   * Start or end of the editor.\n   */\n  edge?: 'start' | 'end';\n\n  /**\n   * If true, focus the React editor before selecting.\n   */\n  focus?: boolean;\n}\n\n/**\n * Select an editor at a target or an edge (start, end).\n */\nexport const selectEditor = (\n  editor: ReactEditor,\n  { at, edge, focus }: SelectEditorOptions\n) => {\n  if (focus) {\n    ReactEditor.focus(editor);\n  }\n\n  let location = at as Location;\n\n  if (edge === 'start') {\n    location = Editor.start(editor, []);\n  }\n\n  if (edge === 'end') {\n    location = Editor.end(editor, []);\n  }\n\n  if (location) {\n    Transforms.select(editor, location);\n  }\n};\n","import { Editor, Path, Transforms } from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\nimport { getBlockAbove } from '../queries/index';\n\n/**\n * Select the end point of the block above the selection.\n */\nexport const selectEndOfBlockAboveSelection = (editor: TEditor) => {\n  const path = getBlockAbove(editor)?.[1];\n\n  path && Transforms.select(editor, Editor.end(editor, path as Path));\n};\n","import castArray from 'lodash/castArray';\nimport { Editor } from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\nimport { removeMark } from './removeMark';\n\n/**\n * Set marks to selected text.\n */\nexport const setMarks = (\n  editor: TEditor,\n  marks: Record<string, any>,\n  clear: string | string[] = []\n) => {\n  if (!editor.selection) return;\n\n  Editor.withoutNormalizing(editor, () => {\n    const clears: string[] = castArray(clear);\n    removeMark(editor, { key: clears });\n    removeMark(editor, { key: Object.keys(marks) });\n\n    Object.keys(marks).forEach((key) => {\n      editor.addMark(key, marks[key]);\n    });\n  });\n};\n","import { Transforms } from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\nimport { TNode } from '../../types/slate/TNode';\nimport { SetNodesOptions } from '../types/Transforms.types';\n\nexport const setNodes = <T extends TNode = TNode>(\n  editor: TEditor,\n  props: Partial<T>,\n  options?: SetNodesOptions\n) => Transforms.setNodes<T>(editor, props, options as any);\n","import castArray from 'lodash/castArray';\nimport { Editor } from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\nimport { isMarkActive } from '../queries/isMarkActive';\nimport { ToggleMarkPlugin } from '../types/plugins/ToggleMarkPlugin';\nimport { removeMark } from './removeMark';\n\nexport interface ToggleMarkOptions extends Pick<ToggleMarkPlugin, 'clear'> {\n  key: string;\n}\n\n/**\n * Add/remove marks in the selection.\n * @param editor\n * @param key mark to toggle\n * @param clear marks to clear when adding mark\n */\nexport const toggleMark = (\n  editor: TEditor,\n  { key, clear }: ToggleMarkOptions\n) => {\n  if (!editor.selection) return;\n\n  Editor.withoutNormalizing(editor, () => {\n    const isActive = isMarkActive(editor, key);\n\n    if (isActive) {\n      removeMark(editor, { key });\n      return;\n    }\n\n    const clears: string[] = castArray(clear);\n    removeMark(editor, { key: clears });\n\n    editor.addMark(key, true);\n  });\n};\n","export const ELEMENT_DEFAULT = 'p';\n","import { PlateEditor } from '../../types/PlateEditor';\nimport { TEditor } from '../../types/slate/TEditor';\nimport { TElement } from '../../types/slate/TElement';\nimport { getPluginType } from '../../utils/getPluginType';\nimport { someNode } from '../queries/someNode';\nimport { EditorNodesOptions } from '../types/Editor.types';\nimport { ELEMENT_DEFAULT } from '../types/node.types';\nimport { setNodes } from './setNodes';\n\nexport interface ToggleNodeTypeOptions {\n  /**\n   * If there is no node type above the selection, set the selected node type to activeType.\n   */\n  activeType?: string;\n\n  /**\n   * If there is a node type above the selection, set the selected node type to inactiveType.\n   */\n  inactiveType?: string;\n}\n\n/**\n * Toggle the type of the selected node.\n * Don't do anything if activeType === inactiveType.\n */\nexport const toggleNodeType = (\n  editor: TEditor,\n  options: ToggleNodeTypeOptions,\n  editorNodesOptions?: Omit<EditorNodesOptions, 'match'>\n) => {\n  const {\n    activeType,\n    inactiveType = getPluginType(editor as PlateEditor, ELEMENT_DEFAULT),\n  } = options;\n\n  if (!activeType || !editor.selection) return;\n\n  const isActive = someNode(editor, {\n    ...editorNodesOptions,\n    match: {\n      type: activeType,\n    },\n  });\n\n  if (isActive && activeType === inactiveType) return;\n\n  setNodes<TElement>(editor, {\n    type: isActive ? inactiveType : activeType,\n  });\n};\n","import { Transforms } from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\nimport { getQueryOptions } from '../queries/match';\nimport { WrapOptions } from '../types/Transforms.types';\n\n/**\n * Unwrap nodes with extended options.\n * See {@link Transforms.unwrapNodes}\n */\nexport const unwrapNodes = (editor: TEditor, options?: WrapOptions) => {\n  Transforms.unwrapNodes(editor, getQueryOptions(editor, options));\n};\n","import { Transforms } from 'slate';\nimport { TEditor } from '../../types/slate/TEditor';\nimport { TElement } from '../../types/slate/TElement';\nimport { TNode } from '../../types/slate/TNode';\nimport { WrapOptions } from '../types/Transforms.types';\nimport { unhangRange, UnhangRangeOptions } from './unhangRange';\n\n/**\n * {@link Transforms.wrapNodes}.\n */\nexport const wrapNodes = <\n  T extends TElement = TElement,\n  TNodeMatch extends TNode = TNode\n>(\n  editor: TEditor,\n  element: T,\n  options: WrapOptions<TNodeMatch> & UnhangRangeOptions = {}\n) => {\n  unhangRange(editor, options);\n\n  Transforms.wrapNodes<TNodeMatch>(editor, element as any, options as any);\n};\n","import { TEditor } from '../../types/slate/TEditor';\nimport { someNode } from '../queries/someNode';\nimport { unwrapNodes } from './unwrapNodes';\nimport { wrapNodes } from './wrapNodes';\n\n/**\n * Unwrap if the node type is in selection.\n * Wrap otherwise.\n */\nexport const toggleWrapNodes = (editor: TEditor, type: string) => {\n  if (someNode(editor, { match: { type } })) {\n    unwrapNodes(editor, { match: { type } });\n  } else {\n    wrapNodes(editor, {\n      type,\n      children: [],\n    });\n  }\n};\n","import { TDescendant } from '../../types/slate/TDescendant';\n\nexport const createDocumentNode = (\n  type = 'p',\n  text = '',\n  remaining: TDescendant[] = []\n): TDescendant[] => [\n  {\n    children: [\n      {\n        type,\n        children: [{ text }],\n      },\n      ...remaining,\n    ],\n  },\n];\n","import { TElement } from '../../types/slate/TElement';\n\nexport const createNode = (type = 'p', text = ''): TElement => ({\n  type,\n  children: [{ text }],\n});\n","export const findHtmlParentElement = (\n  el: HTMLElement | null,\n  nodeName: string\n): HTMLElement | null => {\n  if (!el || el.nodeName === nodeName) {\n    return el;\n  }\n\n  return findHtmlParentElement(el.parentElement, nodeName);\n};\n","/**\n * Call a handler if defined\n */\nexport const getHandler = <T extends (...args: any) => any>(\n  cb?: T,\n  ...args: Parameters<T>\n) => () => {\n  cb?.(...(args as any));\n};\n","/**\n * Prevent default and call a handler if defined\n */\nexport const getPreventDefaultHandler = <T extends (...args: any) => any>(\n  cb?: T,\n  ...args: Parameters<T>\n) => (event: any) => {\n  event.preventDefault();\n  cb?.(...(args as any));\n};\n","/**\n * RegExps.\n * A URL must match #1 and then at least one of #2/#3.\n * Use two levels of REs to avoid REDOS.\n */\n\nconst protocolAndDomainRE = /^(?:\\w+:)?\\/\\/(\\S+)$/;\n\nconst localhostDomainRE = /^localhost[:?\\d]*(?:[^:?\\d]\\S*)?$/;\nconst nonLocalhostDomainRE = /^[^\\s.]+\\.\\S{2,}$/;\n\n/**\n * Loosely validate a URL `string`.\n */\nexport const isUrl = (string: any) => {\n  if (typeof string !== 'string') {\n    return false;\n  }\n\n  const match = string.match(protocolAndDomainRE);\n  if (!match) {\n    return false;\n  }\n\n  const everythingAfterProtocol = match[1];\n  if (!everythingAfterProtocol) {\n    return false;\n  }\n\n  try {\n    new URL(string);\n  } catch (err) {\n    return false;\n  }\n\n  return (\n    localhostDomainRE.test(everythingAfterProtocol) ||\n    nonLocalhostDomainRE.test(everythingAfterProtocol)\n  );\n};\n","import { Descendant, Editor, Element, Text } from 'slate';\nimport { PlateEditor } from '../../types/PlateEditor';\nimport { isElement, TElement } from '../../types/slate/TElement';\nimport { getPluginType } from '../../utils/getPluginType';\nimport { ELEMENT_DEFAULT } from '../types/index';\n\nconst isInlineNode = (editor: Pick<Editor, 'isInline'>) => (node: Descendant) =>\n  Text.isText(node) || editor.isInline(node);\n\nconst makeBlockLazy = (type: string) => (): TElement => ({\n  type,\n  children: [],\n});\n\nconst hasDifferentChildNodes = (\n  descendants: Descendant[],\n  isInline: (node: Descendant) => boolean\n): boolean => {\n  return descendants.some((descendant, index, arr) => {\n    const prevDescendant = arr[index - 1];\n    if (index !== 0) {\n      return isInline(descendant) !== isInline(prevDescendant);\n    }\n    return false;\n  });\n};\n\n/**\n * Handles 3rd constraint: \"Block nodes can only contain other blocks, or inline and text nodes.\"\n */\nconst normalizeDifferentNodeTypes = (\n  descendants: Descendant[],\n  isInline: (node: Descendant) => boolean,\n  makeDefaultBlock: () => Element\n): Descendant[] => {\n  const hasDifferentNodes = hasDifferentChildNodes(descendants, isInline);\n\n  const { fragment } = descendants.reduce(\n    (memo, node) => {\n      if (hasDifferentNodes && isInline(node)) {\n        let block = memo.precedingBlock;\n        if (!block) {\n          block = makeDefaultBlock();\n          memo.precedingBlock = block;\n          memo.fragment.push(block);\n        }\n        block.children.push(node);\n      } else {\n        memo.fragment.push(node);\n        memo.precedingBlock = null;\n      }\n\n      return memo;\n    },\n    {\n      fragment: [] as Descendant[],\n      precedingBlock: null as Element | null,\n    }\n  );\n\n  return fragment;\n};\n\n/**\n * Handles 1st constraint: \"All Element nodes must contain at least one Text descendant.\"\n */\nconst normalizeEmptyChildren = (descendants: Descendant[]): Descendant[] => {\n  if (!descendants.length) {\n    return [{ text: '' }];\n  }\n  return descendants;\n};\n\nconst normalize = (\n  descendants: Descendant[],\n  isInline: (node: Descendant) => boolean,\n  makeDefaultBlock: () => Element\n) => {\n  descendants = normalizeEmptyChildren(descendants);\n  descendants = normalizeDifferentNodeTypes(\n    descendants,\n    isInline,\n    makeDefaultBlock\n  );\n\n  descendants = descendants.map((node) => {\n    if (isElement(node)) {\n      return {\n        ...node,\n        children: normalize(node.children, isInline, makeDefaultBlock),\n      };\n    }\n    return node;\n  });\n\n  return descendants;\n};\n\n/**\n * Normalize the descendants to a valid document fragment.\n */\nexport const normalizeDescendantsToDocumentFragment = <T = {}>(\n  editor: PlateEditor<T>,\n  { descendants }: { descendants: Descendant[] }\n) => {\n  const isInline = isInlineNode(editor);\n  const defaultType = getPluginType(editor, ELEMENT_DEFAULT);\n  const makeDefaultBlock = makeBlockLazy(defaultType);\n\n  return normalize(descendants, isInline, makeDefaultBlock);\n};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * Constants.\n */\n\nvar IS_MAC = typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n\nvar MODIFIERS = {\n  alt: 'altKey',\n  control: 'ctrlKey',\n  meta: 'metaKey',\n  shift: 'shiftKey'\n};\n\nvar ALIASES = {\n  add: '+',\n  break: 'pause',\n  cmd: 'meta',\n  command: 'meta',\n  ctl: 'control',\n  ctrl: 'control',\n  del: 'delete',\n  down: 'arrowdown',\n  esc: 'escape',\n  ins: 'insert',\n  left: 'arrowleft',\n  mod: IS_MAC ? 'meta' : 'control',\n  opt: 'alt',\n  option: 'alt',\n  return: 'enter',\n  right: 'arrowright',\n  space: ' ',\n  spacebar: ' ',\n  up: 'arrowup',\n  win: 'meta',\n  windows: 'meta'\n};\n\nvar CODES = {\n  backspace: 8,\n  tab: 9,\n  enter: 13,\n  shift: 16,\n  control: 17,\n  alt: 18,\n  pause: 19,\n  capslock: 20,\n  escape: 27,\n  ' ': 32,\n  pageup: 33,\n  pagedown: 34,\n  end: 35,\n  home: 36,\n  arrowleft: 37,\n  arrowup: 38,\n  arrowright: 39,\n  arrowdown: 40,\n  insert: 45,\n  delete: 46,\n  meta: 91,\n  numlock: 144,\n  scrolllock: 145,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  '\\'': 222\n};\n\nfor (var f = 1; f < 20; f++) {\n  CODES['f' + f] = 111 + f;\n}\n\n/**\n * Is hotkey?\n */\n\nfunction isHotkey(hotkey, options, event) {\n  if (options && !('byKey' in options)) {\n    event = options;\n    options = null;\n  }\n\n  if (!Array.isArray(hotkey)) {\n    hotkey = [hotkey];\n  }\n\n  var array = hotkey.map(function (string) {\n    return parseHotkey(string, options);\n  });\n  var check = function check(e) {\n    return array.some(function (object) {\n      return compareHotkey(object, e);\n    });\n  };\n  var ret = event == null ? check : check(event);\n  return ret;\n}\n\nfunction isCodeHotkey(hotkey, event) {\n  return isHotkey(hotkey, event);\n}\n\nfunction isKeyHotkey(hotkey, event) {\n  return isHotkey(hotkey, { byKey: true }, event);\n}\n\n/**\n * Parse.\n */\n\nfunction parseHotkey(hotkey, options) {\n  var byKey = options && options.byKey;\n  var ret = {};\n\n  // Special case to handle the `+` key since we use it as a separator.\n  hotkey = hotkey.replace('++', '+add');\n  var values = hotkey.split('+');\n  var length = values.length;\n\n  // Ensure that all the modifiers are set to false unless the hotkey has them.\n\n  for (var k in MODIFIERS) {\n    ret[MODIFIERS[k]] = false;\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var value = _step.value;\n\n      var optional = value.endsWith('?') && value.length > 1;\n\n      if (optional) {\n        value = value.slice(0, -1);\n      }\n\n      var name = toKeyName(value);\n      var modifier = MODIFIERS[name];\n\n      if (length === 1 || !modifier) {\n        if (byKey) {\n          ret.key = name;\n        } else {\n          ret.which = toKeyCode(value);\n        }\n      }\n\n      if (modifier) {\n        ret[modifier] = optional ? null : true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Compare.\n */\n\nfunction compareHotkey(object, event) {\n  for (var key in object) {\n    var expected = object[key];\n    var actual = void 0;\n\n    if (expected == null) {\n      continue;\n    }\n\n    if (key === 'key' && event.key != null) {\n      actual = event.key.toLowerCase();\n    } else if (key === 'which') {\n      actual = expected === 91 && event.which === 93 ? 91 : event.which;\n    } else {\n      actual = event[key];\n    }\n\n    if (actual == null && expected === false) {\n      continue;\n    }\n\n    if (actual !== expected) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Utils.\n */\n\nfunction toKeyCode(name) {\n  name = toKeyName(name);\n  var code = CODES[name] || name.toUpperCase().charCodeAt(0);\n  return code;\n}\n\nfunction toKeyName(name) {\n  name = name.toLowerCase();\n  name = ALIASES[name] || name;\n  return name;\n}\n\n/**\n * Export.\n */\n\nexports.default = isHotkey;\nexports.isHotkey = isHotkey;\nexports.isCodeHotkey = isCodeHotkey;\nexports.isKeyHotkey = isKeyHotkey;\nexports.parseHotkey = parseHotkey;\nexports.compareHotkey = compareHotkey;\nexports.toKeyCode = toKeyCode;\nexports.toKeyName = toKeyName;","import isHotkey from 'is-hotkey';\nimport { castArray } from 'lodash';\nimport { KeyboardHandler } from '../../../types/plugins/KeyboardHandler';\nimport { getPluginType } from '../../../utils/getPluginType';\nimport { toggleNodeType } from '../../transforms/toggleNodeType';\nimport { ELEMENT_DEFAULT } from '../../types/node.types';\nimport { HotkeyPlugin } from '../../types/plugins/HotkeyPlugin';\n\nexport const onKeyDownToggleElement: KeyboardHandler<{}, HotkeyPlugin> = (\n  editor,\n  { type, options: { hotkey } }\n) => (e) => {\n  const defaultType = getPluginType(editor, ELEMENT_DEFAULT);\n\n  if (!hotkey) return;\n\n  const hotkeys = castArray(hotkey);\n\n  for (const _hotkey of hotkeys) {\n    if (isHotkey(_hotkey, e as any)) {\n      e.preventDefault();\n      toggleNodeType(editor, {\n        activeType: type,\n        inactiveType: defaultType,\n      });\n      return;\n    }\n  }\n};\n","import isHotkey from 'is-hotkey';\nimport { KeyboardHandler } from '../../../types/plugins/KeyboardHandler';\nimport { toggleMark } from '../../transforms/toggleMark';\nimport { ToggleMarkPlugin } from '../../types/plugins/ToggleMarkPlugin';\n\nexport const onKeyDownToggleMark: KeyboardHandler<{}, ToggleMarkPlugin> = (\n  editor,\n  { type, options: { hotkey, clear } }\n) => (e) => {\n  if (!hotkey) return;\n\n  if (isHotkey(hotkey, e as any)) {\n    e.preventDefault();\n\n    toggleMark(editor, { key: type, clear });\n  }\n};\n","import React from 'react';\nimport { PlateRenderLeafProps } from '../types/PlateRenderLeafProps';\n\nexport const DefaultLeaf = ({\n  attributes,\n  children,\n  text,\n  leaf,\n  editor,\n  nodeProps,\n  ...props\n}: PlateRenderLeafProps) => (\n  <span {...attributes} {...props}>\n    {children}\n  </span>\n);\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n","var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var root = require('./_root');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var Uint8Array = require('./_Uint8Array');\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n","var baseCreate = require('./_baseCreate'),\n    getPrototype = require('./_getPrototype'),\n    isPrototype = require('./_isPrototype');\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nmodule.exports = initCloneObject;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","var baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n","var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n","var baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n","var isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n","var flatten = require('./flatten'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nmodule.exports = flatRest;\n","var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction create(createState) {\n  var state;\n  var listeners = new Set();\n\n  var setState = function setState(partial, replace) {\n    var nextState = typeof partial === 'function' ? partial(state) : partial;\n\n    if (nextState !== state) {\n      var _previousState = state;\n      state = replace ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach(function (listener) {\n        return listener(state, _previousState);\n      });\n    }\n  };\n\n  var getState = function getState() {\n    return state;\n  };\n\n  var subscribeWithSelector = function subscribeWithSelector(listener, selector, equalityFn) {\n    if (selector === void 0) {\n      selector = getState;\n    }\n\n    if (equalityFn === void 0) {\n      equalityFn = Object.is;\n    }\n\n    var currentSlice = selector(state);\n\n    function listenerToAdd() {\n      var nextSlice = selector(state);\n\n      if (!equalityFn(currentSlice, nextSlice)) {\n        var _previousSlice = currentSlice;\n        listener(currentSlice = nextSlice, _previousSlice);\n      }\n    }\n\n    listeners.add(listenerToAdd);\n    return function () {\n      return listeners.delete(listenerToAdd);\n    };\n  };\n\n  var subscribe = function subscribe(listener, selector, equalityFn) {\n    if (selector || equalityFn) {\n      return subscribeWithSelector(listener, selector, equalityFn);\n    }\n\n    listeners.add(listener);\n    return function () {\n      return listeners.delete(listener);\n    };\n  };\n\n  var destroy = function destroy() {\n    return listeners.clear();\n  };\n\n  var api = {\n    setState: setState,\n    getState: getState,\n    subscribe: subscribe,\n    destroy: destroy\n  };\n  state = createState(setState, getState, api);\n  return api;\n}\n\nexports.default = create;\n","import create from 'zustand';\nimport createVanillaStore from 'zustand/vanilla';\nimport { PlateStates } from '../../types/PlateStore';\n\n/**\n * Plate vanilla store.\n * @see zustand vanilla store\n */\nexport const plateStore = createVanillaStore<PlateStates>(() => ({}));\n\n/**\n * Plate store.\n * @see zustand store\n */\nexport const usePlateStore = create(plateStore);\n","import create from 'zustand';\nimport createVanillaStore from 'zustand/vanilla';\nimport { EventEditorState } from '../../types/EventEditorStore';\n\n/**\n * Store where the keys are event names and the values are editor ids.\n */\nexport const eventEditorStore = createVanillaStore<EventEditorState>(\n  () => ({})\n);\n\n/**\n * Store where the keys are event names and the values are editor ids.\n * @see zustand store\n */\nexport const useEventEditorStore = create(eventEditorStore);\n","import { eventEditorStore } from '../event-editor.store';\n\nexport const getEventEditorState = () => eventEditorStore.getState();\n","import { getEventEditorState } from '../../event-editor/selectors/getEventEditorState';\nimport { plateStore } from '../plate.store';\n\n/**\n * - Get the last focused editor id if any\n * - Else, get the last blurred editor id if any\n * - Else, get the first editor id if any\n * - Else, `null`\n */\nexport const getPlateId = (): string | null => {\n  const { blur, focus } = getEventEditorState();\n  if (focus) return focus;\n  if (blur) return blur;\n\n  const state = plateStore.getState();\n  const keys = Object.keys(state);\n  if (!keys.length) return null;\n\n  return keys[0];\n};\n","import { PlateState } from '../../../types/PlateStore';\nimport { plateStore } from '../plate.store';\nimport { getPlateId } from './getPlateId';\n\n/**\n * If id is defined, get the state by id.\n * Else, get the first state.\n */\nexport const getPlateState = <T = {}>(\n  id?: string | null\n): PlateState<T> | null => {\n  const state = (plateStore.getState() as unknown) as PlateState<T>;\n\n  if (id) return state[id];\n\n  const firstId = getPlateId();\n  if (firstId) return state[firstId];\n\n  return null;\n};\n","import { usePlateStore } from '../plate.store';\nimport { getPlateState } from './getPlateState';\n\nexport const getPlateEditorRef = <T = {}>(id?: string | null) =>\n  getPlateState<T>(id)?.editor;\n\n/**\n * Get editor ref which is never updated.\n */\nexport const usePlateEditorRef = <T = {}>(id?: string | null) =>\n  usePlateStore(() => getPlateEditorRef<T>(id));\n","import { useCallback } from 'react';\nimport { PlateChangeKey } from '../../../types/PlateStore';\nimport { usePlateStore } from '../plate.store';\nimport { getPlateState } from './getPlateState';\n\nexport const usePlateKey = (key: PlateChangeKey, id?: string | null) =>\n  usePlateStore(useCallback(() => getPlateState(id)?.[key], [id, key]));\n","import { DOMHandlers } from '../types/plugins/DOMHandlers';\n\nexport const DOM_HANDLERS: (keyof DOMHandlers)[] = [\n  // Clipboard Events\n  'onCopy',\n  'onCopyCapture',\n  'onCut',\n  'onCutCapture',\n  'onPaste',\n  'onPasteCapture',\n\n  // Composition Events\n  'onCompositionEnd',\n  'onCompositionEndCapture',\n  'onCompositionStart',\n  'onCompositionStartCapture',\n  'onCompositionUpdate',\n  'onCompositionUpdateCapture',\n\n  // Focus Events\n  'onFocus',\n  'onFocusCapture',\n  'onBlur',\n  'onBlurCapture',\n\n  // Form Events\n  'onDOMBeforeInput',\n  'onBeforeInput',\n  'onBeforeInputCapture',\n  'onInput',\n  'onInputCapture',\n  'onReset',\n  'onResetCapture',\n  'onSubmit',\n  'onSubmitCapture',\n  'onInvalid',\n  'onInvalidCapture',\n\n  // Image Events\n  'onLoad',\n  'onLoadCapture',\n\n  // Keyboard Events\n  'onKeyDown',\n  'onKeyDownCapture',\n  'onKeyPress',\n  'onKeyPressCapture',\n  'onKeyUp',\n  'onKeyUpCapture',\n\n  // Media Events\n  'onAbort',\n  'onAbortCapture',\n  'onCanPlay',\n  'onCanPlayCapture',\n  'onCanPlayThrough',\n  'onCanPlayThroughCapture',\n  'onDurationChange',\n  'onDurationChangeCapture',\n  'onEmptied',\n  'onEmptiedCapture',\n  'onEncrypted',\n  'onEncryptedCapture',\n  'onEnded',\n  'onEndedCapture',\n  'onLoadedData',\n  'onLoadedDataCapture',\n  'onLoadedMetadata',\n  'onLoadedMetadataCapture',\n  'onLoadStart',\n  'onLoadStartCapture',\n  'onPause',\n  'onPauseCapture',\n  'onPlay',\n  'onPlayCapture',\n  'onPlaying',\n  'onPlayingCapture',\n  'onProgress',\n  'onProgressCapture',\n  'onRateChange',\n  'onRateChangeCapture',\n  'onSeeked',\n  'onSeekedCapture',\n  'onSeeking',\n  'onSeekingCapture',\n  'onStalled',\n  'onStalledCapture',\n  'onSuspend',\n  'onSuspendCapture',\n  'onTimeUpdate',\n  'onTimeUpdateCapture',\n  'onVolumeChange',\n  'onVolumeChangeCapture',\n  'onWaiting',\n  'onWaitingCapture',\n\n  // MouseEvents\n  'onAuxClick',\n  'onAuxClickCapture',\n  'onClick',\n  'onClickCapture',\n  'onContextMenu',\n  'onContextMenuCapture',\n  'onDoubleClick',\n  'onDoubleClickCapture',\n  'onDrag',\n  'onDragCapture',\n  'onDragEnd',\n  'onDragEndCapture',\n  'onDragEnter',\n  'onDragEnterCapture',\n  'onDragExit',\n  'onDragExitCapture',\n  'onDragLeave',\n  'onDragLeaveCapture',\n  'onDragOver',\n  'onDragOverCapture',\n  'onDragStart',\n  'onDragStartCapture',\n  'onDrop',\n  'onDropCapture',\n  'onMouseDown',\n  'onMouseDownCapture',\n  'onMouseEnter',\n  'onMouseLeave',\n  'onMouseMove',\n  'onMouseMoveCapture',\n  'onMouseOut',\n  'onMouseOutCapture',\n  'onMouseOver',\n  'onMouseOverCapture',\n  'onMouseUp',\n  'onMouseUpCapture',\n\n  // Selection Events\n  'onSelect',\n  'onSelectCapture',\n\n  // Touch Events\n  'onTouchCancel',\n  'onTouchCancelCapture',\n  'onTouchEnd',\n  'onTouchEndCapture',\n  'onTouchMove',\n  'onTouchMoveCapture',\n  'onTouchStart',\n  'onTouchStartCapture',\n\n  // Pointer Events\n  'onPointerDown',\n  'onPointerDownCapture',\n  'onPointerMove',\n  'onPointerMoveCapture',\n  'onPointerUp',\n  'onPointerUpCapture',\n  'onPointerCancel',\n  'onPointerCancelCapture',\n  'onPointerEnter',\n  'onPointerEnterCapture',\n  'onPointerLeave',\n  'onPointerLeaveCapture',\n  'onPointerOver',\n  'onPointerOverCapture',\n  'onPointerOut',\n  'onPointerOutCapture',\n  'onGotPointerCapture',\n  'onGotPointerCaptureCapture',\n  'onLostPointerCapture',\n  'onLostPointerCaptureCapture',\n\n  // UI Events\n  'onScroll',\n  'onScrollCapture',\n\n  // Wheel Events\n  'onWheel',\n  'onWheelCapture',\n\n  // Animation Events\n  'onAnimationStart',\n  'onAnimationStartCapture',\n  'onAnimationEnd',\n  'onAnimationEndCapture',\n  'onAnimationIteration',\n  'onAnimationIterationCapture',\n\n  // Transition Events\n  'onTransitionEnd',\n  'onTransitionEndCapture',\n];\n","import { NodeEntry, Range } from 'slate';\nimport { EditableProps } from 'slate-react/dist/components/editable';\nimport { PlateEditor } from '../types/PlateEditor';\n\n/**\n * @see {@link Decorate}.\n * Optimization: return undefined if empty list so Editable uses a memo.\n */\nexport const pipeDecorate = (\n  editor: PlateEditor\n): EditableProps['decorate'] => {\n  const decorates = editor.plugins.flatMap(\n    (plugin) => plugin.decorate?.(editor, plugin) ?? []\n  );\n  if (!decorates.length) return;\n\n  return (entry: NodeEntry) => {\n    let ranges: Range[] = [];\n\n    const addRanges = (newRanges?: Range[]) => {\n      if (newRanges?.length) ranges = [...ranges, ...newRanges];\n    };\n\n    decorates.forEach((decorate) => {\n      addRanges(decorate(entry));\n    });\n\n    return ranges;\n  };\n};\n","import { SyntheticEvent } from 'react';\nimport { EditableProps } from 'slate-react/dist/components/editable';\nimport { PlateEditor } from '../types/PlateEditor';\nimport { DOMHandlers, HandlerReturnType } from '../types/plugins/DOMHandlers';\n\n/**\n * Check if an event is overrided by a handler.\n */\nexport const isEventHandled = <\n  EventType extends SyntheticEvent<unknown, unknown>\n>(\n  event: EventType,\n  handler?: (event: EventType) => void | boolean\n) => {\n  if (!handler) {\n    return false;\n  }\n  // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n  const shouldTreatEventAsHandled = handler(event);\n\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled;\n  }\n\n  return event.isPropagationStopped();\n};\n\n/**\n * Generic pipe for handlers.\n * - Get all the plugins handlers by `handlerKey`.\n * - If there is no plugin handler or editable prop handler for this key, return `undefined`.\n * - Return a handler calling all the plugins handlers then the prop handler.\n * - Any handler returning true will stop the next handlers to be called, including slate internal handler.\n */\nexport const pipeHandler = <K extends keyof DOMHandlers>(\n  editor: PlateEditor,\n  {\n    editableProps,\n    handlerKey,\n  }: { editableProps?: EditableProps; handlerKey: K }\n): ((event: any) => void) | undefined => {\n  let pluginsHandlers: ((event: any) => HandlerReturnType)[] = [];\n  pluginsHandlers = editor.plugins.flatMap(\n    (plugin) => plugin.handlers?.[handlerKey]?.(editor, plugin) ?? []\n  );\n\n  const propsHandler = editableProps?.[handlerKey] as (\n    event: any\n  ) => HandlerReturnType | undefined;\n\n  if (!pluginsHandlers.length && !propsHandler) return;\n\n  return (event: any) => {\n    const eventIsHandled = pluginsHandlers.some((handler) =>\n      isEventHandled(event, handler)\n    );\n    if (eventIsHandled) return true;\n\n    return isEventHandled(event, propsHandler);\n  };\n};\n","import { CSSProperties } from 'react';\nimport clsx from 'clsx';\nimport { PlateEditor } from '../types/PlateEditor';\nimport { WithPlatePlugin } from '../types/plugins/PlatePlugin';\nimport { TElement } from '../types/slate/TElement';\nimport { TText } from '../types/slate/TText';\nimport { AnyObject } from '../types/utility/AnyObject';\n\nexport interface GetInjectPropsOptions {\n  /**\n   * Existing className.\n   */\n  className?: string;\n\n  /**\n   * Style value or className key.\n   */\n  element?: TElement;\n\n  /**\n   * Style value or className key.\n   */\n  text?: TText;\n\n  /**\n   * Existing style.\n   */\n  style?: CSSProperties;\n}\n\nexport interface GetInjectPropsReturnType extends AnyObject {\n  className?: string;\n  style?: CSSProperties;\n}\n\n/**\n * Return if `element`, `text`, `nodeKey` is defined.\n * Return if `node.type` is not in `validTypes` (if defined).\n * Return if `value = node[nodeKey]` is not in `validNodeValues` (if defined).\n * If `classNames[value]` is defined, override `className` with it.\n * If `styleKey` is defined, override `style` with `[styleKey]: value`.\n */\nexport const pluginInjectProps = (\n  editor: PlateEditor,\n  { key, inject: { props } }: WithPlatePlugin,\n  nodeProps: GetInjectPropsOptions\n): GetInjectPropsReturnType | undefined => {\n  const { element, text, className, style } = nodeProps;\n\n  const node = element ?? text;\n  if (!node) return;\n\n  if (!props) return;\n  const {\n    nodeKey = key,\n    styleKey = nodeKey as any,\n    validTypes,\n    classNames,\n    transformClassName,\n    transformNodeValue,\n    transformStyle,\n    validNodeValues,\n    defaultNodeValue,\n  } = props;\n\n  if (validTypes && node.type && !validTypes.includes(node.type)) {\n    return;\n  }\n\n  const nodeValue = node[nodeKey!];\n\n  // early return if there is now reason to add styles\n  if (\n    !nodeValue ||\n    (validNodeValues && !validNodeValues.includes(nodeValue)) ||\n    nodeValue === defaultNodeValue\n  ) {\n    return;\n  }\n\n  const res: GetInjectPropsReturnType = {};\n\n  const transformOptions = { ...nodeProps, nodeValue };\n\n  const value = transformNodeValue?.(transformOptions) ?? nodeValue;\n\n  if (element) {\n    res.className = clsx(className, `slate-${nodeKey}-${nodeValue}`);\n  }\n\n  if (classNames?.[nodeValue] || transformClassName) {\n    res.className =\n      transformClassName?.(transformOptions) ??\n      clsx(className, classNames?.[value]);\n  }\n\n  if (styleKey) {\n    res.style = transformStyle?.(transformOptions) ?? {\n      ...style,\n      [styleKey as string]: value,\n    };\n  }\n\n  return res;\n};\n","import { PlateEditor } from '../types/PlateEditor';\nimport { pluginInjectProps } from './pluginInjectProps';\n\n/**\n * Inject plugin props, editor.\n */\nexport const pipeInjectProps = <T,>(editor: PlateEditor, nodeProps: any): T => {\n  editor.plugins.forEach((plugin) => {\n    if (plugin.inject.props) {\n      const props = pluginInjectProps(editor, plugin, nodeProps);\n\n      if (props) {\n        nodeProps = {\n          ...nodeProps,\n          ...props,\n        };\n      }\n    }\n  });\n\n  return { ...nodeProps, editor };\n};\n","/**\n * Get slate class name: slate-<type>\n */\nexport const getSlateClass = (type: string) => `slate-${type}`;\n","import clsx from 'clsx';\nimport { PlateRenderNodeProps } from '../types/PlateRenderNodeProps';\nimport { WithPlatePlugin } from '../types/plugins/PlatePlugin';\nimport { AnyObject } from '../types/utility/AnyObject';\nimport { getSlateClass } from './getSlateClass';\n\n/**\n * Override node props with plugin props.\n * `props.element.attributes` are passed as `nodeProps`.\n * Extend the class name with the node type.\n */\nexport const getRenderNodeProps = <T extends PlateRenderNodeProps>({\n  attributes,\n  nodeProps,\n  props,\n  type,\n}: Pick<WithPlatePlugin, 'type' | 'props'> & {\n  attributes?: AnyObject;\n  nodeProps: T;\n}) => {\n  let newProps: AnyObject = {};\n\n  if (props) {\n    newProps =\n      (typeof props === 'function' ? props(nodeProps as any) : props) ?? {};\n  }\n\n  if (!newProps.nodeProps && attributes) {\n    newProps.nodeProps = attributes;\n  }\n\n  nodeProps = { ...nodeProps, ...newProps };\n\n  const { className } = nodeProps;\n\n  return { ...nodeProps, className: clsx(getSlateClass(type), className) };\n};\n","import React from 'react';\nimport { DefaultElement } from 'slate-react';\nimport { PlateEditor } from '../types/PlateEditor';\nimport { PlatePlugin } from '../types/plugins/PlatePlugin';\nimport { RenderElement } from '../types/RenderElement';\nimport { getRenderNodeProps } from './getRenderNodeProps';\n\n/**\n * Get a `Editable.renderElement` handler for `options.type`.\n * If the type is equals to the slate element type, render `options.component`.\n * Else, return `undefined` so the pipeline can check the next plugin.\n */\nexport const pluginRenderElement = (\n  editor: PlateEditor,\n  { key, type, component: _component, props }: PlatePlugin\n): RenderElement => (nodeProps) => {\n  const { element, children: _children } = nodeProps;\n\n  if (element.type === type) {\n    const Element = _component ?? DefaultElement;\n\n    const injectAboveComponents = editor.plugins.flatMap(\n      (o) => o.inject?.aboveComponent ?? []\n    );\n    const injectBelowComponents = editor.plugins.flatMap(\n      (o) => o.inject?.belowComponent ?? []\n    );\n\n    nodeProps = getRenderNodeProps({\n      attributes: element.attributes,\n      nodeProps,\n      props,\n      type,\n    });\n\n    let children = _children;\n\n    injectBelowComponents.forEach((withHOC) => {\n      const hoc = withHOC({ ...nodeProps, key });\n\n      if (hoc) {\n        children = hoc({ ...nodeProps, children });\n      }\n    });\n\n    let component: JSX.Element | null = (\n      <Element {...nodeProps}>{children}</Element>\n    );\n\n    injectAboveComponents.forEach((withHOC) => {\n      const hoc = withHOC({ ...nodeProps, key });\n\n      if (hoc) {\n        component = hoc({ ...nodeProps, children: component });\n      }\n    });\n\n    return component;\n  }\n};\n","import React from 'react';\nimport { DefaultElement } from 'slate-react';\nimport { EditableProps } from 'slate-react/dist/components/editable';\nimport { PlateEditor } from '../types/PlateEditor';\nimport { PlateRenderElementProps } from '../types/PlateRenderElementProps';\nimport { RenderElement } from '../types/RenderElement';\nimport { pipeInjectProps } from './pipeInjectProps';\nimport { pluginRenderElement } from './pluginRenderElement';\n\n/**\n * @see {@link RenderElement}\n */\nexport const pipeRenderElement = (\n  editor: PlateEditor,\n  editableProps?: EditableProps\n): EditableProps['renderElement'] => {\n  const renderElements: RenderElement[] = [];\n\n  editor.plugins.forEach((plugin) => {\n    if (plugin.isElement) {\n      renderElements.push(pluginRenderElement(editor, plugin));\n    }\n  });\n\n  return (nodeProps) => {\n    const props = pipeInjectProps<PlateRenderElementProps>(editor, nodeProps);\n\n    let element;\n\n    renderElements.some((renderElement) => {\n      element = renderElement(props as any);\n      return !!element;\n    });\n\n    if (element) return element;\n\n    if (editableProps?.renderElement) {\n      return editableProps.renderElement(props);\n    }\n\n    return <DefaultElement {...props} />;\n  };\n};\n","import React from 'react';\nimport { DefaultLeaf } from '../components/DefaultLeaf';\nimport { PlateEditor } from '../types/PlateEditor';\nimport { PlateRenderLeafProps } from '../types/PlateRenderLeafProps';\nimport { PlatePlugin } from '../types/plugins/PlatePlugin';\nimport { RenderLeaf } from '../types/RenderLeaf';\nimport { getRenderNodeProps } from './getRenderNodeProps';\n\n/**\n * Get a `Editable.renderLeaf` handler for `options.type`.\n * If the type is equals to the slate leaf type and if the text is not empty, render `options.component`.\n * Else, return `children`.\n */\nexport const pluginRenderLeaf = (\n  editor: PlateEditor,\n  { key, type = key, component, props }: PlatePlugin\n): RenderLeaf => (nodeProps: PlateRenderLeafProps) => {\n  const { leaf, children } = nodeProps;\n\n  if (leaf[type] && !!leaf.text) {\n    const Leaf = component ?? DefaultLeaf;\n\n    nodeProps = getRenderNodeProps({\n      attributes: leaf.attributes,\n      props,\n      nodeProps,\n      type,\n    });\n\n    return <Leaf {...nodeProps}>{children}</Leaf>;\n  }\n\n  return children;\n};\n","import React from 'react';\nimport { EditableProps } from 'slate-react/dist/components/editable';\nimport { DefaultLeaf } from '../components/DefaultLeaf';\nimport { PlateEditor } from '../types/PlateEditor';\nimport { PlateRenderLeafProps } from '../types/PlateRenderLeafProps';\nimport { RenderLeaf } from '../types/RenderLeaf';\nimport { pipeInjectProps } from './pipeInjectProps';\nimport { pluginRenderLeaf } from './pluginRenderLeaf';\n\n/**\n * @see {@link RenderLeaf}\n */\nexport const pipeRenderLeaf = (\n  editor: PlateEditor,\n  editableProps?: EditableProps\n): EditableProps['renderLeaf'] => {\n  const renderLeafs: RenderLeaf[] = [];\n\n  editor.plugins.forEach((plugin) => {\n    if (plugin.isLeaf && plugin.key) {\n      renderLeafs.push(pluginRenderLeaf(editor, plugin));\n    }\n  });\n\n  return (nodeProps) => {\n    const props = pipeInjectProps<PlateRenderLeafProps>(editor, nodeProps);\n\n    renderLeafs.forEach((renderLeaf) => {\n      const newChildren = renderLeaf(props as any);\n      if (newChildren !== undefined) {\n        props.children = newChildren;\n      }\n    });\n\n    if (editableProps?.renderLeaf) {\n      return editableProps.renderLeaf(props);\n    }\n\n    return <DefaultLeaf {...props} />;\n  };\n};\n","import { useMemo } from 'react';\nimport omit from 'lodash/omit';\nimport { EditableProps } from 'slate-react/dist/components/editable';\nimport { usePlateEditorRef } from '../../stores/plate/selectors/usePlateEditorRef';\nimport { usePlateKey } from '../../stores/plate/selectors/usePlateKey';\nimport { UseEditablePropsOptions } from '../../types/UseEditablePropsOptions';\nimport { DOM_HANDLERS } from '../../utils/dom-attributes';\nimport { pipeDecorate } from '../../utils/pipeDecorate';\nimport { pipeHandler } from '../../utils/pipeHandler';\nimport { pipeRenderElement } from '../../utils/pipeRenderElement';\nimport { pipeRenderLeaf } from '../../utils/pipeRenderLeaf';\n\nexport const useEditableProps = ({\n  id = 'main',\n  editableProps,\n}: UseEditablePropsOptions): EditableProps => {\n  const editor = usePlateEditorRef(id);\n  const keyPlugins = usePlateKey('keyPlugins', id);\n\n  const props: EditableProps = useMemo(() => {\n    if (!editor || !keyPlugins) return {};\n\n    const _props: EditableProps = {\n      decorate: pipeDecorate(editor),\n      renderElement: pipeRenderElement(editor, editableProps),\n      renderLeaf: pipeRenderLeaf(editor, editableProps),\n    };\n\n    DOM_HANDLERS.forEach((handlerKey) => {\n      const handler = pipeHandler(editor, {\n        editableProps,\n        handlerKey,\n      }) as any;\n\n      if (handler) {\n        _props[handlerKey] = handler;\n      }\n    });\n\n    return _props;\n  }, [editableProps, editor, keyPlugins]);\n\n  return useMemo(\n    () => ({\n      ...omit(editableProps, [...DOM_HANDLERS, 'renderElement', 'renderLeaf']),\n      ...props,\n    }),\n    [editableProps, props]\n  );\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction shallow(objA, objB) {\n  if (Object.is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n\n  if (keysA.length !== Object.keys(objB).length) {\n    return false;\n  }\n\n  for (var i = 0; i < keysA.length; i++) {\n    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !Object.is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexports.default = shallow;\n","import { PlateState, PlateStates } from '../types/PlateStore';\nimport { plateStore } from './plate/plate.store';\n\nconst set = plateStore.setState;\n\nexport const getStateById = (state: PlateStates, id: string) => {\n  return state[id] ?? {};\n};\n\nexport const mergeState = (\n  stateToMerge: Partial<PlateState>,\n  stateId?: string\n) =>\n  stateId &&\n  set((state) => ({\n    [stateId]: { ...getStateById(state, stateId), ...stateToMerge },\n  }));\n\nexport const getSetStateByKey = <T>(key: string, stateId?: string) => (\n  value: T,\n  id = stateId\n) =>\n  id &&\n  set((state) => {\n    if (!state[id]) return;\n\n    return {\n      [id]: { ...getStateById(state, id), [key]: value },\n    };\n  });\n","import { useMemo } from 'react';\nimport { createEditor } from 'slate';\nimport shallow from 'zustand/shallow';\nimport { withPlate } from '../../plugins/withPlate';\nimport {\n  PlateActions,\n  PlateChangeKey,\n  PlateState,\n  PlateStates,\n} from '../../types/PlateStore';\nimport { getSetStateByKey } from '../zustand.utils';\nimport { getPlateId } from './selectors/getPlateId';\nimport { getPlateState } from './selectors/getPlateState';\nimport { plateStore, usePlateStore } from './plate.store';\n\nconst { getState: get, setState: set } = plateStore;\n\nexport const usePlateActions = <T = {}>(\n  storeId?: string | null\n): PlateActions<T> => {\n  const storeKeys = usePlateStore((s) => Object.keys(s), shallow);\n\n  const stateId: string | undefined = storeId ?? storeKeys[0];\n\n  return useMemo(() => {\n    const setEditor = getSetStateByKey('editor', stateId);\n\n    const setValue = getSetStateByKey<PlateState<T>['value']>('value', stateId);\n\n    return {\n      setEditor,\n      setValue,\n      clearState: (id = stateId) =>\n        id &&\n        set((state) => {\n          delete state[id];\n        }),\n      setInitialState: (\n        { enabled = true, value = [{ children: [{ text: '' }] }] } = {},\n        id = stateId\n      ) =>\n        id &&\n        set((state: PlateStates<T>) => {\n          if (state[id]) return;\n\n          state[id] = {\n            enabled,\n            value,\n          };\n        }),\n      resetEditor: (id = stateId) => {\n        const state = !!id && get()[id];\n        if (!state) return;\n        const { editor } = state;\n\n        setEditor(\n          withPlate(createEditor(), {\n            id,\n            plugins: editor?.plugins,\n          }),\n          id\n        );\n      },\n      setEnabled: getSetStateByKey<PlateState<T>['enabled']>(\n        'enabled',\n        stateId\n      ),\n    };\n  }, [stateId]);\n};\n\nexport const incrementKey = (key: PlateChangeKey, id = getPlateId()) => {\n  const state = getPlateState(id);\n  if (!state || !id) return;\n\n  const prev = state[key] ?? 1;\n\n  plateStore.setState({\n    [id]: { ...state, [key]: prev + 1 },\n  });\n};\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignMergeValue;\n","var isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n","/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\nmodule.exports = safeGet;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\nmodule.exports = toPlainObject;\n","var assignMergeValue = require('./_assignMergeValue'),\n    cloneBuffer = require('./_cloneBuffer'),\n    cloneTypedArray = require('./_cloneTypedArray'),\n    copyArray = require('./_copyArray'),\n    initCloneObject = require('./_initCloneObject'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isPlainObject = require('./isPlainObject'),\n    isTypedArray = require('./isTypedArray'),\n    safeGet = require('./_safeGet'),\n    toPlainObject = require('./toPlainObject');\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\nmodule.exports = baseMergeDeep;\n","var Stack = require('./_Stack'),\n    assignMergeValue = require('./_assignMergeValue'),\n    baseFor = require('./_baseFor'),\n    baseMergeDeep = require('./_baseMergeDeep'),\n    isObject = require('./isObject'),\n    keysIn = require('./keysIn'),\n    safeGet = require('./_safeGet');\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nmodule.exports = baseMerge;\n","var baseMerge = require('./_baseMerge'),\n    isObject = require('./isObject');\n\n/**\n * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n * objects into destination objects that are passed thru.\n *\n * @private\n * @param {*} objValue The destination value.\n * @param {*} srcValue The source value.\n * @param {string} key The key of the property to merge.\n * @param {Object} object The parent object of `objValue`.\n * @param {Object} source The parent object of `srcValue`.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n * @returns {*} Returns the value to assign.\n */\nfunction customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n  if (isObject(objValue) && isObject(srcValue)) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, objValue);\n    baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n    stack['delete'](srcValue);\n  }\n  return objValue;\n}\n\nmodule.exports = customDefaultsMerge;\n","var baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n","var baseMerge = require('./_baseMerge'),\n    createAssigner = require('./_createAssigner');\n\n/**\n * This method is like `_.merge` except that it accepts `customizer` which\n * is invoked to produce the merged values of the destination and source\n * properties. If `customizer` returns `undefined`, merging is handled by the\n * method instead. The `customizer` is invoked with six arguments:\n * (objValue, srcValue, key, object, source, stack).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} sources The source objects.\n * @param {Function} customizer The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @example\n *\n * function customizer(objValue, srcValue) {\n *   if (_.isArray(objValue)) {\n *     return objValue.concat(srcValue);\n *   }\n * }\n *\n * var object = { 'a': [1], 'b': [2] };\n * var other = { 'a': [3], 'b': [4] };\n *\n * _.mergeWith(object, other, customizer);\n * // => { 'a': [1, 3], 'b': [2, 4] }\n */\nvar mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n  baseMerge(object, source, srcIndex, customizer);\n});\n\nmodule.exports = mergeWith;\n","var apply = require('./_apply'),\n    baseRest = require('./_baseRest'),\n    customDefaultsMerge = require('./_customDefaultsMerge'),\n    mergeWith = require('./mergeWith');\n\n/**\n * This method is like `_.defaults` except that it recursively assigns\n * default properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaults\n * @example\n *\n * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n * // => { 'a': { 'b': 2, 'c': 3 } }\n */\nvar defaultsDeep = baseRest(function(args) {\n  args.push(undefined, customDefaultsMerge);\n  return apply(mergeWith, undefined, args);\n});\n\nmodule.exports = defaultsDeep;\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;\n","var baseEach = require('./_baseEach');\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;\n","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\nvar keyBy = createAggregator(function(result, value, key) {\n  baseAssignValue(result, key, value);\n});\n\nmodule.exports = keyBy;\n","var baseMerge = require('./_baseMerge'),\n    createAssigner = require('./_createAssigner');\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\nmodule.exports = merge;\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n","import defaultsDeep from 'lodash/defaultsDeep';\nimport keyBy from 'lodash/keyBy';\nimport merge from 'lodash/merge';\nimport values from 'lodash/values';\nimport { PlateEditor } from '../types/PlateEditor';\nimport { WithPlatePlugin } from '../types/plugins/PlatePlugin';\n\n/**\n * Recursively merge nested plugins into the root plugins\n */\nexport const mergeDeepPlugins = <\n  T = {},\n  P extends WithPlatePlugin<T> = WithPlatePlugin<T>\n>(\n  editor: PlateEditor<T>,\n  _plugin: P\n): P => {\n  const plugin = { ..._plugin };\n\n  const { then } = plugin;\n  if (then) {\n    delete plugin.then;\n\n    const { plugins: pluginPlugins } = plugin;\n\n    const pluginThen = mergeDeepPlugins<T, P>(\n      editor,\n      defaultsDeep(then(editor, plugin), plugin)\n    );\n\n    // merge plugins by key\n    if (pluginPlugins && pluginThen.plugins) {\n      const merged = merge(\n        keyBy(pluginPlugins, 'key'),\n        keyBy(pluginThen.plugins, 'key')\n      );\n\n      pluginThen.plugins = values(merged);\n    }\n\n    return pluginThen;\n  }\n\n  return plugin;\n};\n","import { PlatePlugin, WithPlatePlugin } from '../types/plugins/PlatePlugin';\n\nexport const setDefaultPlugin = <T = {}, P = {}>(\n  plugin: PlatePlugin<T, P>\n): WithPlatePlugin<T, P> => {\n  if (plugin.type === undefined) plugin.type = plugin.key;\n  if (!plugin.options) plugin.options = {} as any;\n  if (!plugin.inject) plugin.inject = {};\n  if (!plugin.editor) plugin.editor = {};\n\n  return plugin as WithPlatePlugin<T, P>;\n};\n","import { PlateEditor } from '../types/PlateEditor';\nimport { PlatePlugin } from '../types/plugins/PlatePlugin';\nimport { mergeDeepPlugins } from './mergeDeepPlugins';\nimport { setDefaultPlugin } from './setDefaultPlugin';\n\n/**\n * Recursively merge plugin.plugins into editor.plugins and editor.pluginsByKey\n */\nexport const flattenDeepPlugins = <T = {}>(\n  editor: PlateEditor<T>,\n  plugins?: PlatePlugin<T>[]\n) => {\n  if (!plugins) return;\n\n  plugins.forEach((plugin) => {\n    let p = setDefaultPlugin(plugin);\n\n    p = mergeDeepPlugins(editor, p);\n\n    editor.plugins.push(p);\n    editor.pluginsByKey[p.key] = p;\n\n    flattenDeepPlugins<T>(editor, p.plugins!);\n  });\n};\n","import defaultsDeep from 'lodash/defaultsDeep';\nimport { OverrideByKey } from '../types/OverrideByKey';\nimport { PlatePlugin } from '../types/plugins/PlatePlugin';\nimport { NoInfer } from '../types/utility/NoInfer';\n\n/**\n * Recursive deep merge of each plugin from `overrideByKey`\n * into plugin with same key (plugin > plugin.plugins).\n */\nexport const overridePluginsByKey = <T = {}, P = {}>(\n  plugin: PlatePlugin<T, NoInfer<P>>,\n  overrideByKey: OverrideByKey<T> = {},\n  nested?: boolean\n): PlatePlugin<T, NoInfer<P>> => {\n  if (overrideByKey[plugin.key]) {\n    const {\n      plugins: pluginOverridesPlugins,\n      then: pluginOverridesThen,\n      ...pluginOverrides\n    } = overrideByKey[plugin.key];\n\n    // override plugin\n    plugin = defaultsDeep(pluginOverrides, plugin);\n\n    if (!nested) {\n      // concat new pluginOverrides.plugins to plugin.plugins\n      pluginOverridesPlugins?.forEach((pOverrides) => {\n        if (!plugin.plugins) plugin.plugins = [];\n\n        const found = plugin.plugins.find((p) => p.key === pOverrides.key);\n        if (!found) plugin.plugins.push(pOverrides);\n      });\n    }\n  }\n\n  if (plugin.plugins) {\n    // override plugin.plugins\n    plugin.plugins = plugin.plugins.map((p) =>\n      overridePluginsByKey<T, {}>(p, overrideByKey, true)\n    );\n  }\n\n  const { then } = plugin;\n\n  if (then) {\n    // override plugin.then\n    plugin.then = (editor, p) => {\n      const pluginThen = { key: plugin.key, ...then(editor, p) };\n\n      return defaultsDeep(\n        overridePluginsByKey(pluginThen as any, overrideByKey),\n        pluginThen\n      );\n    };\n  } else if (overrideByKey[plugin.key]?.then) {\n    // TODO: recursvie\n    plugin.then = overrideByKey[plugin.key].then as any;\n  }\n\n  return plugin;\n};\n","import { incrementKey } from '../stores/plate/plate.actions';\nimport { PlateEditor } from '../types/PlateEditor';\nimport { PlatePlugin } from '../types/plugins/PlatePlugin';\nimport { flattenDeepPlugins } from './flattenDeepPlugins';\nimport { overridePluginsByKey } from './overridePluginsByKey';\n\n/**\n * Flatten deep plugins then set editor.plugins and editor.pluginsByKey\n */\nexport const setPlatePlugins = <T = {}>(\n  editor: PlateEditor<T>,\n  plugins: PlatePlugin<T>[]\n) => {\n  editor.plugins = [];\n  editor.pluginsByKey = {};\n\n  flattenDeepPlugins(editor, plugins);\n\n  // override all the plugins one by one, so plugin.overrideByKey effects can be overridden by the next plugin\n  editor.plugins.forEach((plugin) => {\n    if (plugin.overrideByKey) {\n      const newPlugins = editor.plugins.map((p) => {\n        return overridePluginsByKey<T, {}>(p, plugin.overrideByKey as any);\n      });\n\n      editor.plugins = [];\n      editor.pluginsByKey = {};\n\n      // flatten again the overrides\n      flattenDeepPlugins(editor, newPlugins);\n    }\n  });\n\n  incrementKey('keyPlugins', editor.id);\n};\n","import { OverrideByKey } from '../types/OverrideByKey';\nimport { PlatePlugin } from '../types/plugins/PlatePlugin';\nimport { NoInfer } from '../types/utility/NoInfer';\nimport { overridePluginsByKey } from './overridePluginsByKey';\n\n/**\n * Create plugin factory with a default plugin.\n * - first param is the default plugin.\n * - the only required property of the default plugin is `key`.\n * - returns a plugin factory:\n *   - first param `override` can be used to (deeply) override the default plugin.\n *   - second param `overrideByKey` can be used to (deeply) override by key a nested plugin (in plugin.plugins).\n */\nexport const createPluginFactory = <P = {}>(\n  defaultPlugin: PlatePlugin<{}, NoInfer<P>>\n) => <T = {}>(\n  override?: Partial<PlatePlugin<T, NoInfer<P>>>,\n  overrideByKey: OverrideByKey<T> = {}\n): PlatePlugin<T, NoInfer<P>> => {\n  overrideByKey[defaultPlugin.key] = override as any;\n\n  return overridePluginsByKey<T, P>({ ...defaultPlugin } as any, overrideByKey);\n};\n","/**\n * Convert HTML string into HTML element.\n */\nexport const htmlStringToDOMNode = (\n  rawHtml: string,\n  stripWhitespace = true\n) => {\n  const node = document.createElement('body');\n  node.innerHTML = rawHtml;\n\n  if (stripWhitespace) {\n    node.innerHTML = node.innerHTML.replace(/(\\r\\n|\\n|\\r|\\t)/gm, '');\n  }\n\n  return node;\n};\n","/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nfunction isObject(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (ctor === undefined) return true;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n}\n\nexport { isPlainObject };\n","import { isPlainObject } from 'is-plain-object';\nimport { Range, Node, Text, Element, createEditor as createEditor$1 } from 'slate';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\n/**\r\n * A weak map to hold anchor tokens.\r\n */\nvar ANCHOR = new WeakMap();\n/**\r\n * A weak map to hold focus tokens.\r\n */\n\nvar FOCUS = new WeakMap();\n/**\r\n * All tokens inherit from a single constructor for `instanceof` checking.\r\n */\n\nclass Token {}\n/**\r\n * Anchor tokens represent the selection's anchor point.\r\n */\n\nclass AnchorToken extends Token {\n  constructor() {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n    var {\n      offset,\n      path\n    } = props;\n    this.offset = offset;\n    this.path = path;\n  }\n\n}\n/**\r\n * Focus tokens represent the selection's focus point.\r\n */\n\nclass FocusToken extends Token {\n  constructor() {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n    var {\n      offset,\n      path\n    } = props;\n    this.offset = offset;\n    this.path = path;\n  }\n\n}\n/**\r\n * Add an anchor token to the end of a text node.\r\n */\n\nvar addAnchorToken = (text, token) => {\n  var offset = text.text.length;\n  ANCHOR.set(text, [offset, token]);\n};\n/**\r\n * Get the offset if a text node has an associated anchor token.\r\n */\n\nvar getAnchorOffset = text => {\n  return ANCHOR.get(text);\n};\n/**\r\n * Add a focus token to the end of a text node.\r\n */\n\nvar addFocusToken = (text, token) => {\n  var offset = text.text.length;\n  FOCUS.set(text, [offset, token]);\n};\n/**\r\n * Get the offset if a text node has an associated focus token.\r\n */\n\nvar getFocusOffset = text => {\n  return FOCUS.get(text);\n};\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$1(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n/**\r\n * Resolve the descedants of a node by normalizing the children that can be\r\n * passed into a hyperscript creator function.\r\n */\n\nvar STRINGS = new WeakSet();\n\nvar resolveDescendants = children => {\n  var nodes = [];\n\n  var addChild = child => {\n    if (child == null) {\n      return;\n    }\n\n    var prev = nodes[nodes.length - 1];\n\n    if (typeof child === 'string') {\n      var text = {\n        text: child\n      };\n      STRINGS.add(text);\n      child = text;\n    }\n\n    if (Text.isText(child)) {\n      var c = child; // HACK: fix typescript complaining\n\n      if (Text.isText(prev) && STRINGS.has(prev) && STRINGS.has(c) && Text.equals(prev, c, {\n        loose: true\n      })) {\n        prev.text += c.text;\n      } else {\n        nodes.push(c);\n      }\n    } else if (Element.isElement(child)) {\n      nodes.push(child);\n    } else if (child instanceof Token) {\n      var n = nodes[nodes.length - 1];\n\n      if (!Text.isText(n)) {\n        addChild('');\n        n = nodes[nodes.length - 1];\n      }\n\n      if (child instanceof AnchorToken) {\n        addAnchorToken(n, child);\n      } else if (child instanceof FocusToken) {\n        addFocusToken(n, child);\n      }\n    } else {\n      throw new Error(\"Unexpected hyperscript child object: \".concat(child));\n    }\n  };\n\n  for (var child of children.flat(Infinity)) {\n    addChild(child);\n  }\n\n  return nodes;\n};\n/**\r\n * Create an anchor token.\r\n */\n\n\nfunction createAnchor(tagName, attributes, children) {\n  return new AnchorToken(attributes);\n}\n/**\r\n * Create an anchor and a focus token.\r\n */\n\nfunction createCursor(tagName, attributes, children) {\n  return [new AnchorToken(attributes), new FocusToken(attributes)];\n}\n/**\r\n * Create an `Element` object.\r\n */\n\nfunction createElement(tagName, attributes, children) {\n  return _objectSpread$1(_objectSpread$1({}, attributes), {}, {\n    children: resolveDescendants(children)\n  });\n}\n/**\r\n * Create a focus token.\r\n */\n\nfunction createFocus(tagName, attributes, children) {\n  return new FocusToken(attributes);\n}\n/**\r\n * Create a fragment.\r\n */\n\nfunction createFragment(tagName, attributes, children) {\n  return resolveDescendants(children);\n}\n/**\r\n * Create a `Selection` object.\r\n */\n\nfunction createSelection(tagName, attributes, children) {\n  var anchor = children.find(c => c instanceof AnchorToken);\n  var focus = children.find(c => c instanceof FocusToken);\n\n  if (!anchor || anchor.offset == null || anchor.path == null) {\n    throw new Error(\"The <selection> hyperscript tag must have an <anchor> tag as a child with `path` and `offset` attributes defined.\");\n  }\n\n  if (!focus || focus.offset == null || focus.path == null) {\n    throw new Error(\"The <selection> hyperscript tag must have a <focus> tag as a child with `path` and `offset` attributes defined.\");\n  }\n\n  return _objectSpread$1({\n    anchor: {\n      offset: anchor.offset,\n      path: anchor.path\n    },\n    focus: {\n      offset: focus.offset,\n      path: focus.path\n    }\n  }, attributes);\n}\n/**\r\n * Create a `Text` object.\r\n */\n\nfunction createText(tagName, attributes, children) {\n  var nodes = resolveDescendants(children);\n\n  if (nodes.length > 1) {\n    throw new Error(\"The <text> hyperscript tag must only contain a single node's worth of children.\");\n  }\n\n  var [node] = nodes;\n\n  if (node == null) {\n    node = {\n      text: ''\n    };\n  }\n\n  if (!Text.isText(node)) {\n    throw new Error(\"\\n    The <text> hyperscript tag can only contain text content as children.\");\n  } // COMPAT: If they used the <text> tag we want to guarantee that it won't be\n  // merge with other string children.\n\n\n  STRINGS.delete(node);\n  Object.assign(node, attributes);\n  return node;\n}\n/**\r\n * Create a top-level `Editor` object.\r\n */\n\nvar createEditor = makeEditor => (tagName, attributes, children) => {\n  var otherChildren = [];\n  var selectionChild;\n\n  for (var child of children) {\n    if (Range.isRange(child)) {\n      selectionChild = child;\n    } else {\n      otherChildren.push(child);\n    }\n  }\n\n  var descendants = resolveDescendants(otherChildren);\n  var selection = {};\n  var editor = makeEditor();\n  Object.assign(editor, attributes);\n  editor.children = descendants; // Search the document's texts to see if any of them have tokens associated\n  // that need incorporated into the selection.\n\n  for (var [node, path] of Node.texts(editor)) {\n    var anchor = getAnchorOffset(node);\n    var focus = getFocusOffset(node);\n\n    if (anchor != null) {\n      var [offset] = anchor;\n      selection.anchor = {\n        path,\n        offset\n      };\n    }\n\n    if (focus != null) {\n      var [_offset] = focus;\n      selection.focus = {\n        path,\n        offset: _offset\n      };\n    }\n  }\n\n  if (selection.anchor && !selection.focus) {\n    throw new Error(\"Slate hyperscript ranges must have both `<anchor />` and `<focus />` defined if one is defined, but you only defined `<anchor />`. For collapsed selections, use `<cursor />` instead.\");\n  }\n\n  if (!selection.anchor && selection.focus) {\n    throw new Error(\"Slate hyperscript ranges must have both `<anchor />` and `<focus />` defined if one is defined, but you only defined `<focus />`. For collapsed selections, use `<cursor />` instead.\");\n  }\n\n  if (selectionChild != null) {\n    editor.selection = selectionChild;\n  } else if (Range.isRange(selection)) {\n    editor.selection = selection;\n  }\n\n  return editor;\n};\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n/**\r\n * The default creators for Slate objects.\r\n */\n\nvar DEFAULT_CREATORS = {\n  anchor: createAnchor,\n  cursor: createCursor,\n  editor: createEditor(createEditor$1),\n  element: createElement,\n  focus: createFocus,\n  fragment: createFragment,\n  selection: createSelection,\n  text: createText\n};\n/**\r\n * Create a Slate hyperscript function with `options`.\r\n */\n\nvar createHyperscript = function createHyperscript() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var {\n    elements = {}\n  } = options;\n  var elementCreators = normalizeElements(elements);\n\n  var creators = _objectSpread(_objectSpread(_objectSpread({}, DEFAULT_CREATORS), elementCreators), options.creators);\n\n  var jsx = createFactory(creators);\n  return jsx;\n};\n/**\r\n * Create a Slate hyperscript function with `options`.\r\n */\n\n\nvar createFactory = creators => {\n  var jsx = function jsx(tagName, attributes) {\n    for (var _len = arguments.length, children = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      children[_key - 2] = arguments[_key];\n    }\n\n    var creator = creators[tagName];\n\n    if (!creator) {\n      throw new Error(\"No hyperscript creator found for tag: <\".concat(tagName, \">\"));\n    }\n\n    if (attributes == null) {\n      attributes = {};\n    }\n\n    if (!isPlainObject(attributes)) {\n      children = [attributes].concat(children);\n      attributes = {};\n    }\n\n    children = children.filter(child => Boolean(child)).flat();\n    var ret = creator(tagName, attributes, children);\n    return ret;\n  };\n\n  return jsx;\n};\n/**\r\n * Normalize a dictionary of element shorthands into creator functions.\r\n */\n\n\nvar normalizeElements = elements => {\n  var creators = {};\n\n  var _loop = function _loop(tagName) {\n    var props = elements[tagName];\n\n    if (typeof props !== 'object') {\n      throw new Error(\"Properties specified for a hyperscript shorthand should be an object, but for the custom element <\".concat(tagName, \">  tag you passed: \").concat(props));\n    }\n\n    creators[tagName] = (tagName, attributes, children) => {\n      return createElement('element', _objectSpread(_objectSpread({}, props), attributes), children);\n    };\n  };\n\n  for (var tagName in elements) {\n    _loop(tagName);\n  }\n\n  return creators;\n};\n\n/**\r\n * The default hyperscript factory that ships with Slate, without custom tags.\r\n */\n\nvar jsx = createHyperscript();\n\nexport { createEditor, createHyperscript, jsx };\n//# sourceMappingURL=index.es.js.map\n","import { PlateEditor } from '../../../types/PlateEditor';\nimport { DeserializeHtmlChildren } from '../types';\nimport { deserializeHtmlNode } from './deserializeHtmlNode';\n\nexport const deserializeHtmlNodeChildren = <T = {}>(\n  editor: PlateEditor<T>,\n  node: HTMLElement | ChildNode\n): DeserializeHtmlChildren[] => {\n  return Array.from(node.childNodes).map(deserializeHtmlNode(editor)).flat();\n};\n","import { jsx } from 'slate-hyperscript';\nimport { PlateEditor } from '../../../types/PlateEditor';\nimport { TDescendant } from '../../../types/slate/TDescendant';\nimport { deserializeHtmlNodeChildren } from './deserializeHtmlNodeChildren';\n\njsx;\n\n/**\n * Deserialize HTML body element to Fragment.\n */\nexport const htmlBodyToFragment = <T = {}>(\n  editor: PlateEditor<T>,\n  element: HTMLElement\n): TDescendant[] | undefined => {\n  if (element.nodeName === 'BODY') {\n    return jsx('fragment', {}, deserializeHtmlNodeChildren(editor, element));\n  }\n};\n","/**\n * Deserialize HTML to break line.\n */\nexport const htmlBrToNewLine = (node: HTMLElement | ChildNode) => {\n  if (node.nodeName === 'BR') {\n    return '\\n';\n  }\n};\n","import castArray from 'lodash/castArray';\nimport { DeserializeHtml } from '../../../types/plugins/DeserializeHtml';\nimport { WithPlatePlugin } from '../../../types/plugins/PlatePlugin';\nimport { AnyObject } from '../../../types/utility/AnyObject';\nimport { Nullable } from '../../../types/utility/Nullable';\n\n/**\n * Get a deserializer by type, node names, class names and styles.\n */\nexport const pluginDeserializeHtml = <T = {}, P = {}>(\n  plugin: WithPlatePlugin<T, P>,\n  {\n    element: el,\n    deserializeLeaf,\n  }: { element: HTMLElement; deserializeLeaf?: boolean }\n): (Nullable<DeserializeHtml> & { node: AnyObject }) | undefined => {\n  const {\n    deserializeHtml: _deserializeHtml,\n    isElement: isElementRoot,\n    isLeaf: isLeafRoot,\n    type,\n  } = plugin;\n\n  if (!_deserializeHtml) return;\n\n  let node: AnyObject | undefined;\n\n  const deserializeHtmls = castArray(_deserializeHtml);\n\n  const deserialized = deserializeHtmls.find((deserializeHtml) => {\n    const {\n      validNodeName: nodeName = '*',\n      validStyle,\n      validClassName,\n      validAttribute,\n      attributeNames,\n      query,\n      isLeaf: isLeafRule,\n      isElement: isElementRule,\n    } = deserializeHtml;\n    let { getNode } = deserializeHtml;\n\n    const isElement = isElementRule || isElementRoot;\n    const isLeaf = isLeafRule || isLeafRoot;\n\n    if (!deserializeLeaf && !isElement) {\n      return;\n    }\n\n    if (deserializeLeaf && !isLeaf) {\n      return;\n    }\n\n    if (query && !query(el)) {\n      return;\n    }\n\n    if (!getNode) {\n      if (isElement) {\n        getNode = () => ({ type });\n      } else if (isLeaf) {\n        getNode = () => ({ [type]: true });\n      } else {\n        return;\n      }\n    }\n\n    if (nodeName) {\n      const validNodeName = castArray<string>(nodeName);\n\n      // Ignore if el nodeName is not included in rule validNodeName (except *).\n      if (\n        validNodeName.length &&\n        !validNodeName.includes(el.nodeName) &&\n        nodeName !== '*'\n      )\n        return false;\n    }\n\n    // Ignore if the rule className is not in el class list.\n    if (validClassName && !el.className.includes(validClassName)) return false;\n\n    if (validStyle) {\n      for (const [key, value] of Object.entries(validStyle)) {\n        const values = castArray<string>(value);\n\n        // Ignore if el style value is not included in rule style values (except *)\n        if (!values.includes(el.style[key]) && value !== '*') return false;\n\n        // Ignore if el style value is falsy (for value *)\n        if (value === '*' && !el.style[key]) return false;\n\n        const defaultNodeValue = plugin.inject.props?.defaultNodeValue;\n\n        // Ignore if the style value = plugin.inject.props.defaultNodeValue\n        if (defaultNodeValue && defaultNodeValue === el.style[key]) {\n          return false;\n        }\n      }\n    }\n\n    if (validAttribute) {\n      if (typeof validAttribute === 'string') {\n        if (!el.getAttributeNames().includes(validAttribute)) return false;\n      } else {\n        for (const [attributeName, attributeValue] of Object.entries(\n          validAttribute\n        )) {\n          const attributeValues = castArray<string>(attributeValue);\n          const elAttribute = el.getAttribute(attributeName);\n\n          if (!elAttribute || !attributeValues.includes(elAttribute))\n            return false;\n        }\n      }\n    }\n\n    node = getNode(el);\n\n    if (!node) return;\n\n    if (attributeNames) {\n      const elementAttributes = {};\n\n      const elementAttributeNames = el.getAttributeNames();\n\n      for (const elementAttributeName of elementAttributeNames) {\n        if (attributeNames.includes(elementAttributeName)) {\n          elementAttributes[elementAttributeName] = el.getAttribute(\n            elementAttributeName\n          );\n        }\n      }\n\n      if (Object.keys(elementAttributes).length) {\n        node.attributes = elementAttributes;\n      }\n    }\n\n    return true;\n  });\n\n  if (deserialized) {\n    return { ...deserialized, node: node as AnyObject };\n  }\n};\n","import { PlateEditor } from '../../../types/PlateEditor';\nimport { DeserializeHtml } from '../../../types/plugins/DeserializeHtml';\nimport { AnyObject } from '../../../types/utility/AnyObject';\nimport { Nullable } from '../../../types/utility/Nullable';\nimport { pluginDeserializeHtml } from './pluginDeserializeHtml';\n\nexport const pipeDeserializeHtmlElement = <T = {}>(\n  editor: PlateEditor<T>,\n  element: HTMLElement\n) => {\n  let result: (Nullable<DeserializeHtml> & { node: AnyObject }) | undefined;\n\n  editor.plugins.reverse().some((plugin) => {\n    result = pluginDeserializeHtml(plugin, { element });\n\n    return !!result;\n  });\n\n  return result;\n};\n","import { jsx } from 'slate-hyperscript';\nimport { PlateEditor } from '../../../types/PlateEditor';\nimport { TDescendant } from '../../../types/slate/TDescendant';\nimport { TElement } from '../../../types/slate/TElement';\nimport { deserializeHtmlNodeChildren } from './deserializeHtmlNodeChildren';\nimport { pipeDeserializeHtmlElement } from './pipeDeserializeHtmlElement';\n\n/**\n * Deserialize HTML to Element.\n */\nexport const htmlElementToElement = <T = {}>(\n  editor: PlateEditor<T>,\n  element: HTMLElement\n): TElement | undefined => {\n  const deserialized = pipeDeserializeHtmlElement(editor, element);\n\n  if (deserialized) {\n    const { node, withoutChildren } = deserialized;\n\n    let descendants =\n      node.children ??\n      (deserializeHtmlNodeChildren(editor, element) as TDescendant[]);\n    if (!descendants.length || withoutChildren) {\n      descendants = [{ text: '' }];\n    }\n\n    return jsx('element', node, descendants) as TElement;\n  }\n};\n","import merge from 'lodash/merge';\nimport { applyDeepToNodes, ApplyDeepToNodesOptions } from './applyDeepToNodes';\n\n/**\n * Recursively merge a source object to children nodes with a query.\n */\nexport const mergeDeepToNodes = (\n  options: Omit<ApplyDeepToNodesOptions, 'apply'>\n) => {\n  applyDeepToNodes({ ...options, apply: merge });\n};\n","import { PlateEditor } from '../../../types/PlateEditor';\nimport { AnyObject } from '../../../types/utility/AnyObject';\nimport { pluginDeserializeHtml } from './pluginDeserializeHtml';\n\nexport const pipeDeserializeHtmlLeaf = <T = {}>(\n  editor: PlateEditor<T>,\n  element: HTMLElement\n) => {\n  let node: AnyObject = {};\n\n  editor.plugins.reverse().forEach((plugin) => {\n    const deserialized = pluginDeserializeHtml(plugin, {\n      element,\n      deserializeLeaf: true,\n    });\n    if (!deserialized) return;\n\n    node = { ...node, ...deserialized.node };\n  });\n\n  return node;\n};\n","import { Text } from 'slate';\nimport { jsx } from 'slate-hyperscript';\nimport { PlateEditor } from '../../../types/PlateEditor';\nimport { TDescendant } from '../../../types/slate/TDescendant';\nimport { isElement } from '../../../types/slate/TElement';\nimport { mergeDeepToNodes } from '../../../utils/mergeDeepToNodes';\nimport { deserializeHtmlNodeChildren } from './deserializeHtmlNodeChildren';\nimport { pipeDeserializeHtmlLeaf } from './pipeDeserializeHtmlLeaf';\n\n/**\n * Deserialize HTML to TDescendant[] with marks on Text.\n * Build the leaf from the leaf deserializers of each plugin.\n */\nexport const htmlElementToLeaf = <T = {}>(\n  editor: PlateEditor<T>,\n  element: HTMLElement\n) => {\n  const node = pipeDeserializeHtmlLeaf(editor, element);\n\n  return deserializeHtmlNodeChildren(editor, element).reduce(\n    (arr: TDescendant[], child) => {\n      if (!child) return arr;\n\n      if (isElement(child)) {\n        if (Object.keys(node).length) {\n          mergeDeepToNodes({\n            node: child,\n            source: node,\n            query: {\n              filter: ([n]) => Text.isText(n),\n            },\n          });\n        }\n        arr.push(child);\n      } else {\n        const attributes = { ...node };\n\n        // attributes should not override child attributes\n        if (child.text) {\n          Object.keys(attributes).forEach((key) => {\n            if (attributes[key] && child[key]) {\n              attributes[key] = child[key];\n            }\n          });\n        }\n\n        arr.push(jsx('text', attributes, child));\n      }\n\n      return arr;\n    },\n    []\n  );\n};\n","export const isHtmlText = (node: Node): node is Text =>\n  node.nodeType === Node.TEXT_NODE;\n","/**\n * Deserialize HTML text node to text.\n */\nimport { isHtmlText } from './isHtmlText';\n\n// export const htmlTextNewLineToNull = (node: HTMLElement | ChildNode) => {\n//   if (isHtmlText(node)) {\n//     return node.nodeValue === '\\n' && null : node.textContent;\n//   }\n// };\n\nexport const htmlTextNodeToString = (node: HTMLElement | ChildNode) => {\n  if (isHtmlText(node)) {\n    return node.nodeValue === '\\n' ? null : node.textContent;\n  }\n};\n","export const isHtmlElement = (node: Node): node is Element =>\n  node.nodeType === Node.ELEMENT_NODE;\n","import { PlateEditor } from '../../../types/PlateEditor';\nimport { DeserializeHtmlNodeReturnType } from '../types';\nimport { htmlBodyToFragment } from './htmlBodyToFragment';\nimport { htmlBrToNewLine } from './htmlBrToNewLine';\nimport { htmlElementToElement } from './htmlElementToElement';\nimport { htmlElementToLeaf } from './htmlElementToLeaf';\nimport { htmlTextNodeToString } from './htmlTextNodeToString';\nimport { isHtmlElement } from './isHtmlElement';\n\n/**\n * Deserialize HTML element or child node.\n */\nexport const deserializeHtmlNode = <T = {}>(editor: PlateEditor<T>) => (\n  node: HTMLElement | ChildNode\n): DeserializeHtmlNodeReturnType => {\n  const textNode = htmlTextNodeToString(node);\n  if (textNode) return textNode;\n\n  if (!isHtmlElement(node)) return null;\n\n  // break line\n  const breakLine = htmlBrToNewLine(node);\n  if (breakLine) return breakLine;\n\n  // body\n  const fragment = htmlBodyToFragment(editor, node);\n  if (fragment) return fragment;\n\n  // element\n  const element = htmlElementToElement(editor, node);\n  if (element) return element;\n\n  // leaf\n  return htmlElementToLeaf(editor, node);\n};\n","import { PlateEditor } from '../../../types/PlateEditor';\nimport { DeserializeHtmlNodeReturnType } from '../types';\nimport { deserializeHtmlNode } from './deserializeHtmlNode';\n\n/**\n * Deserialize HTML element to fragment.\n */\nexport const deserializeHtmlElement = <T = {}>(\n  editor: PlateEditor<T>,\n  element: HTMLElement\n): DeserializeHtmlNodeReturnType => {\n  return deserializeHtmlNode(editor)(element);\n};\n","import { normalizeDescendantsToDocumentFragment } from '../../../common/utils/normalizeDescendantsToDocumentFragment';\nimport { PlateEditor } from '../../../types/PlateEditor';\nimport { TDescendant } from '../../../types/slate/TDescendant';\nimport { htmlStringToDOMNode } from '../../html-serializer/utils/htmlStringToDOMNode';\nimport { deserializeHtmlElement } from './deserializeHtmlElement';\n\n/**\n * Deserialize HTML element to a valid document fragment.\n */\nexport const deserializeHtml = <T = {}>(\n  editor: PlateEditor<T>,\n  {\n    element,\n    stripWhitespace = true,\n  }: {\n    element: HTMLElement | string;\n    stripWhitespace?: boolean;\n  }\n): TDescendant[] => {\n  // for serializer\n  if (typeof element === 'string') {\n    element = htmlStringToDOMNode(element, stripWhitespace);\n  }\n\n  const fragment = deserializeHtmlElement(editor, element) as TDescendant[];\n\n  return normalizeDescendantsToDocumentFragment(editor, {\n    descendants: fragment,\n  });\n};\n","export const parseHtmlDocument = (html: string) => {\n  return new DOMParser().parseFromString(html, 'text/html');\n};\n","import { createPluginFactory } from '../../utils/createPluginFactory';\nimport { deserializeHtml } from './utils/deserializeHtml';\nimport { parseHtmlDocument } from './utils/parseHtmlDocument';\n\nexport const KEY_DESERIALIZE_HTML = 'deserializeHtml';\n\n/**\n * Enables support for deserializing inserted content from HTML format to Slate format.\n */\nexport const createDeserializeHtmlPlugin = createPluginFactory({\n  key: KEY_DESERIALIZE_HTML,\n  then: (editor) => ({\n    editor: {\n      insertData: {\n        format: 'text/html',\n        getFragment: ({ data }) => {\n          const document = parseHtmlDocument(data);\n\n          return deserializeHtml(editor, {\n            element: document.body,\n          });\n        },\n      },\n    },\n  }),\n});\n","import { createPluginFactory } from '../utils/createPluginFactory';\n\nexport const KEY_DESERIALIZE_AST = 'deserializeAst';\n\n/**\n * Enables support for deserializing inserted content from Slate Ast format to Slate format\n * while apply a small bug fix.\n */\nexport const createDeserializeAstPlugin = createPluginFactory({\n  key: KEY_DESERIALIZE_AST,\n  editor: {\n    insertData: {\n      format: 'application/x-slate-fragment',\n      getFragment: ({ data }) => {\n        const decoded = decodeURIComponent(window.atob(data));\n        return JSON.parse(decoded);\n      },\n    },\n  },\n});\n","import { EventEditorActions } from '../../../types/EventEditorStore';\nimport { eventEditorStore } from '../event-editor.store';\n\nconst { setState: set } = eventEditorStore;\n\n/**\n * Set an editor id by event key.\n */\nexport const setEventEditorId: EventEditorActions['setEventEditorId'] = (\n  event,\n  value\n) =>\n  set(() => ({\n    [event]: value,\n  }));\n","import { setEventEditorId } from '../stores/event-editor/actions/setEventEditorId';\nimport { createPluginFactory } from '../utils/createPluginFactory';\n\nexport const KEY_EVENT_EDITOR = 'event-editor';\n\nexport const createEventEditorPlugin = createPluginFactory({\n  key: KEY_EVENT_EDITOR,\n  handlers: {\n    onFocus: (editor) => () => {\n      setEventEditorId('focus', editor.id);\n    },\n    onBlur: (editor) => () => {\n      setEventEditorId('blur', editor.id);\n    },\n  },\n});\n","import { withHistory } from 'slate-history';\nimport { WithOverride } from '../types/plugins/WithOverride';\nimport { createPluginFactory } from '../utils/createPluginFactory';\n\n/**\n * @see {@link withHistory}\n */\nexport const createHistoryPlugin = createPluginFactory({\n  key: 'history',\n  withOverrides: withHistory as WithOverride,\n});\n","import { WithOverride } from '../types/plugins/WithOverride';\nimport { TElement } from '../types/slate/TElement';\nimport { createPluginFactory } from '../utils/createPluginFactory';\n\nexport const KEY_INLINE_VOID = 'inline-void';\n\n/**\n * Merge and register all the inline types and void types from the plugins and options,\n * using `editor.isInline` and `editor.isVoid`\n */\nexport const withInlineVoid: WithOverride = (editor) => {\n  const { isInline } = editor;\n  const { isVoid } = editor;\n\n  const inlineTypes: string[] = [];\n  const voidTypes: string[] = [];\n\n  editor.plugins.forEach((plugin) => {\n    if (!plugin.key) return;\n\n    if (plugin.isInline) {\n      inlineTypes.push(plugin.key);\n    }\n\n    if (plugin.isVoid) {\n      voidTypes.push(plugin.key);\n    }\n  });\n\n  editor.isInline = (element) => {\n    return inlineTypes.includes((element as TElement).type)\n      ? true\n      : isInline(element);\n  };\n\n  editor.isVoid = (element) =>\n    voidTypes.includes((element as TElement).type) ? true : isVoid(element);\n\n  return editor;\n};\n\n/**\n * @see {@link withInlineVoid}\n */\nexport const createInlineVoidPlugin = createPluginFactory({\n  key: KEY_INLINE_VOID,\n  withOverrides: withInlineVoid,\n});\n","import { PlateEditor } from '../types/PlateEditor';\nimport { PlatePlugin, WithPlatePlugin } from '../types/plugins/PlatePlugin';\n\nexport type InjectedPlugin<T = {}> = Partial<PlatePlugin<T>>;\n\n/**\n * Get all plugins having a defined `inject.pluginsByKey[plugin.key]`.\n * It includes `plugin` itself.\n */\nexport const getInjectedPlugins = <T = {}, P = {}>(\n  editor: PlateEditor<T>,\n  plugin: WithPlatePlugin<T, P>\n): InjectedPlugin<T>[] => {\n  const injectedPlugins: InjectedPlugin<T>[] = [];\n\n  editor.plugins.forEach((p) => {\n    const injectedPlugin = p.inject.pluginsByKey?.[plugin.key];\n\n    if (injectedPlugin) injectedPlugins.push(injectedPlugin);\n  });\n\n  return [plugin as InjectedPlugin<T>, ...injectedPlugins];\n};\n","import { PlatePluginInsertDataOptions } from '../types/plugins/PlatePluginInsertData';\nimport { InjectedPlugin } from './getInjectedPlugins';\n\n/**\n * Is the plugin disabled by another plugin.\n */\nexport const pipeInsertDataQuery = <T = {}>(\n  plugins: InjectedPlugin<T>[],\n  { data, dataTransfer }: PlatePluginInsertDataOptions\n) =>\n  plugins.every((p) => {\n    const query = p.editor?.insertData?.query;\n\n    return (\n      !query ||\n      query({\n        data,\n        dataTransfer,\n      })\n    );\n  });\n","import { Editor } from 'slate';\nimport { PlateEditor } from '../types/PlateEditor';\nimport { PlatePluginInsertDataOptions } from '../types/plugins/PlatePluginInsertData';\nimport { TDescendant } from '../types/slate/TDescendant';\nimport { InjectedPlugin } from './getInjectedPlugins';\n\n/**\n * Pipe preInsert then insertFragment.\n */\nexport const pipeInsertFragment = <T = {}>(\n  editor: PlateEditor<T>,\n  injectedPlugins: InjectedPlugin<T>[],\n  {\n    fragment,\n    ...options\n  }: PlatePluginInsertDataOptions & { fragment: TDescendant[] }\n) => {\n  Editor.withoutNormalizing(editor, () => {\n    injectedPlugins.some((p) => {\n      return p.editor?.insertData?.preInsert?.(fragment, options) === true;\n    });\n\n    editor.insertFragment(fragment);\n  });\n};\n","import { PlatePluginInsertDataOptions } from '../types/plugins/PlatePluginInsertData';\nimport { InjectedPlugin } from './getInjectedPlugins';\n\n/**\n * Pipe editor.insertData.transformData\n */\nexport const pipeTransformData = <T = {}>(\n  plugins: InjectedPlugin<T>[],\n  { data, dataTransfer }: PlatePluginInsertDataOptions\n) => {\n  plugins.forEach((p) => {\n    const transformData = p.editor?.insertData?.transformData;\n    if (!transformData) return;\n\n    data = transformData(data, { dataTransfer });\n  });\n\n  return data;\n};\n","import { PlatePluginInsertDataOptions } from '../types/plugins/PlatePluginInsertData';\nimport { TDescendant } from '../types/slate/TDescendant';\nimport { InjectedPlugin } from './getInjectedPlugins';\n\n/**\n * Pipe editor.insertData.transformFragment\n */\nexport const pipeTransformFragment = <T = {}>(\n  plugins: InjectedPlugin<T>[],\n  {\n    fragment,\n    ...options\n  }: PlatePluginInsertDataOptions & { fragment: TDescendant[] }\n) => {\n  plugins.forEach((p) => {\n    const transformFragment = p.editor?.insertData?.transformFragment;\n    if (!transformFragment) return;\n\n    fragment = transformFragment(fragment, options);\n  });\n\n  return fragment;\n};\n","import { WithOverride } from '../types/plugins/WithOverride';\nimport { createPluginFactory } from '../utils/createPluginFactory';\nimport { getInjectedPlugins } from '../utils/getInjectedPlugins';\nimport { pipeInsertDataQuery } from '../utils/pipeInsertDataQuery';\nimport { pipeInsertFragment } from '../utils/pipeInsertFragment';\nimport { pipeTransformData } from '../utils/pipeTransformData';\nimport { pipeTransformFragment } from '../utils/pipeTransformFragment';\n\nexport const withInsertData: WithOverride = (editor) => {\n  const { insertData } = editor;\n\n  editor.insertData = (dataTransfer) => {\n    const inserted = editor.plugins.reverse().some((plugin) => {\n      const insertDataOptions = plugin.editor.insertData;\n      if (!insertDataOptions) return false;\n\n      const injectedPlugins = getInjectedPlugins(editor, plugin);\n      const { format, getFragment } = insertDataOptions;\n      if (!format) return false;\n\n      let data = dataTransfer.getData(format);\n      if (!data) return;\n\n      if (\n        !pipeInsertDataQuery(injectedPlugins, {\n          data,\n          dataTransfer,\n        })\n      ) {\n        return false;\n      }\n\n      data = pipeTransformData(injectedPlugins, {\n        data,\n        dataTransfer,\n      });\n\n      let fragment = getFragment?.({\n        data,\n        dataTransfer,\n      });\n      if (!fragment?.length) return false;\n\n      fragment = pipeTransformFragment(injectedPlugins, {\n        fragment,\n        data,\n        dataTransfer,\n      });\n      if (!fragment.length) return false;\n\n      pipeInsertFragment(editor, injectedPlugins, {\n        fragment,\n        data,\n        dataTransfer,\n      });\n\n      return true;\n    });\n    if (inserted) return;\n\n    insertData(dataTransfer);\n  };\n\n  return editor;\n};\n\nexport const KEY_INSERT_DATA = 'insertData';\n\nexport const createInsertDataPlugin = createPluginFactory({\n  key: KEY_INSERT_DATA,\n  withOverrides: withInsertData,\n});\n","import { withReact } from 'slate-react';\nimport { WithOverride } from '../types/plugins/WithOverride';\nimport { createPluginFactory } from '../utils/createPluginFactory';\n\n/**\n * @see {@link withReact}\n */\nexport const createReactPlugin = createPluginFactory({\n  key: 'react',\n  withOverrides: withReact as WithOverride,\n});\n","import { PlateEditor } from '../types/PlateEditor';\nimport { PlatePlugin } from '../types/plugins/PlatePlugin';\nimport { TEditor } from '../types/slate/TEditor';\nimport { setPlatePlugins } from '../utils/setPlatePlugins';\nimport { createDeserializeHtmlPlugin } from './html-deserializer/createDeserializeHtmlPlugin';\nimport { createDeserializeAstPlugin } from './createDeserializeAstPlugin';\nimport { createEventEditorPlugin } from './createEventEditorPlugin';\nimport { createHistoryPlugin } from './createHistoryPlugin';\nimport { createInlineVoidPlugin } from './createInlineVoidPlugin';\nimport { createInsertDataPlugin } from './createInsertDataPlugin';\nimport { createReactPlugin } from './createReactPlugin';\n\nexport interface WithPlateOptions<T = {}> {\n  /**\n   * A unique id used to store the editor state by id.\n   * Required if rendering multiple `Plate`. Optional otherwise.\n   * Default is `'main'`.\n   */\n  id?: string | null;\n\n  /**\n   * Plate plugins.\n   */\n  plugins?: PlatePlugin<T>[];\n\n  /**\n   * If `true`, disable all the core plugins.\n   * If an object, disable the core plugin properties that are `true` in the object.\n   */\n  disableCorePlugins?:\n    | {\n        deserializeAst?: boolean;\n        deserializeHtml?: boolean;\n        eventEditor?: boolean;\n        inlineVoid?: boolean;\n        insertData?: boolean;\n        history?: boolean;\n        react?: boolean;\n      }\n    | boolean;\n}\n\n/**\n * Apply `withInlineVoid` and all plate plugins `withOverrides`.\n * Overrides:\n * - `id`: id of the editor.\n * - `key`: random key for the <Slate> component so each time the editor is created, the component resets.\n * - `options`: Plate options\n */\nexport const withPlate = <T = {}>(\n  e: TEditor,\n  { id = 'main', plugins = [], disableCorePlugins }: WithPlateOptions<T> = {}\n): PlateEditor<T> => {\n  let editor = (e as any) as PlateEditor<T>;\n\n  editor.id = id as string;\n\n  if (!editor.key) {\n    editor.key = Math.random();\n  }\n\n  let allPlugins: PlatePlugin<T>[] = [];\n\n  if (disableCorePlugins !== true) {\n    if (typeof disableCorePlugins !== 'object') {\n      allPlugins = [\n        createReactPlugin(),\n        createHistoryPlugin(),\n        createEventEditorPlugin(),\n        createInlineVoidPlugin(),\n        createInsertDataPlugin(),\n        createDeserializeAstPlugin(),\n        createDeserializeHtmlPlugin(),\n      ];\n    } else {\n      if (!disableCorePlugins.react) {\n        allPlugins.push(createReactPlugin());\n      }\n      if (!disableCorePlugins.history) {\n        allPlugins.push(createHistoryPlugin());\n      }\n      if (!disableCorePlugins.eventEditor) {\n        allPlugins.push(createEventEditorPlugin());\n      }\n      if (!disableCorePlugins.inlineVoid) {\n        allPlugins.push(createInlineVoidPlugin());\n      }\n      if (!disableCorePlugins.insertData) {\n        allPlugins.push(createInsertDataPlugin());\n      }\n      if (!disableCorePlugins.deserializeAst) {\n        allPlugins.push(createDeserializeAstPlugin());\n      }\n      if (!disableCorePlugins.deserializeHtml) {\n        allPlugins.push(createDeserializeHtmlPlugin());\n      }\n    }\n  }\n\n  allPlugins = [...allPlugins, ...plugins];\n\n  setPlatePlugins(editor, allPlugins);\n\n  // withOverrides\n  editor.plugins.forEach((plugin) => {\n    if (plugin.withOverrides) {\n      editor = plugin.withOverrides(editor, plugin);\n    }\n  });\n\n  return editor;\n};\n","import { useCallback } from 'react';\nimport { usePlateStore } from '../plate.store';\nimport { getPlateState } from './getPlateState';\n\nexport const getPlateEnabled = <T = {}>(id?: string | null) =>\n  getPlateState<T>(id)?.enabled;\n\nexport const usePlateEnabled = (id?: string | null) =>\n  usePlateStore(useCallback(() => getPlateEnabled(id), [id]));\n","import { useEffect, useRef } from 'react';\nimport { createEditor, Editor } from 'slate';\nimport { withPlate } from '../../plugins/withPlate';\nimport { usePlateActions } from '../../stores/plate/plate.actions';\nimport { usePlateEditorRef } from '../../stores/plate/selectors/usePlateEditorRef';\nimport { usePlateEnabled } from '../../stores/plate/selectors/usePlateEnabled';\nimport { PlatePlugin } from '../../types/plugins/PlatePlugin';\nimport { UsePlateEffectsOptions } from '../../types/UsePlateEffectsOptions';\nimport { setPlatePlugins } from '../../utils/setPlatePlugins';\n\n/**\n * Effects to update the plate store from the options.\n * Dynamically updating the options will update the store state.\n */\nexport const usePlateEffects = <T = {}>({\n  id = 'main',\n  value,\n  editor: editorProp,\n  enabled: enabledProp = true,\n  initialValue,\n  normalizeInitialValue,\n  plugins,\n  disableCorePlugins,\n}: UsePlateEffectsOptions<T>) => {\n  const {\n    setInitialState,\n    setValue,\n    setEditor,\n    setEnabled,\n    clearState,\n  } = usePlateActions(id);\n  const enabled = usePlateEnabled(id);\n  const editor = usePlateEditorRef<T>(id);\n  const prevEditorRef = useRef(editor);\n\n  // Clear the state on unmount.\n  useEffect(\n    () => () => {\n      clearState();\n    },\n    [clearState, id]\n  );\n\n  // Set initial state on mount\n  useEffect(() => {\n    setInitialState({\n      enabled: true,\n      value: [],\n    });\n  }, [id, setInitialState]);\n\n  // Set initialValue once\n  useEffect(() => {\n    initialValue && setValue(initialValue);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setValue]);\n\n  // Slate.value\n  useEffect(() => {\n    value && setValue(value);\n\n    !initialValue && !value && setValue([{ children: [{ text: '' }] }]);\n  }, [initialValue, setValue, value]);\n\n  // Dynamic enabled\n  useEffect(() => {\n    setEnabled(enabledProp);\n  }, [enabledProp, setEnabled]);\n\n  // Unset the editor if enabled gets false\n  useEffect(() => {\n    if (editor && !enabled) {\n      setEditor(undefined);\n    }\n  }, [enabled, editor, setEditor]);\n\n  // Set the editor if enabled and editor are defined\n  useEffect(() => {\n    if (!editor && enabled) {\n      const baseEditor = editorProp ?? createEditor();\n\n      setEditor(\n        withPlate(baseEditor as any, {\n          id,\n          plugins: plugins as PlatePlugin[],\n          disableCorePlugins,\n        })\n      );\n    }\n  }, [editorProp, id, plugins, setEditor, editor, enabled, disableCorePlugins]);\n\n  // Dynamic plugins, no called when setting the editor\n  useEffect(() => {\n    const hasEditorUpdated = prevEditorRef.current === editor;\n    if (editor && hasEditorUpdated && plugins) {\n      setPlatePlugins(editor, plugins);\n    }\n  }, [plugins, editor]);\n\n  // Force editor normalization\n  useEffect(() => {\n    if (editor && normalizeInitialValue) {\n      Editor.normalize(editor, { force: true });\n    }\n  }, [editor, normalizeInitialValue]);\n\n  // Store previous editor\n  useEffect(() => {\n    prevEditorRef.current = editor;\n  }, [editor]);\n};\n","import { useCallback } from 'react';\nimport { usePlateStore } from '../plate.store';\nimport { getPlateState } from './getPlateState';\n\nexport const getPlateValue = <T = {}>(id?: string | null) =>\n  getPlateState<T>(id)?.value;\n\nexport const usePlateValue = (id?: string | null) =>\n  usePlateStore(useCallback(() => getPlateValue(id), [id]));\n","import { PlateEditor } from '../types/PlateEditor';\nimport { OnChange } from '../types/plugins/OnChange';\n\nexport const pipeOnChange = (editor: PlateEditor): ReturnType<OnChange> => {\n  const onChanges = editor.plugins.flatMap(\n    (plugin) => plugin.handlers?.onChange?.(editor, plugin) ?? []\n  );\n\n  return (nodes) => {\n    return onChanges.some((handler) => {\n      if (!handler) {\n        return false;\n      }\n      // The custom event handler may return a boolean to specify whether the event\n      // shall be treated as being handled or not.\n      const shouldTreatEventAsHandled = handler(nodes);\n\n      if (shouldTreatEventAsHandled != null) {\n        return shouldTreatEventAsHandled;\n      }\n\n      return false;\n    });\n  };\n};\n","import { useCallback, useMemo } from 'react';\nimport { usePlateActions } from '../../stores/plate/plate.actions';\nimport { usePlateEditorRef } from '../../stores/plate/selectors/usePlateEditorRef';\nimport { usePlateKey } from '../../stores/plate/selectors/usePlateKey';\nimport { usePlateValue } from '../../stores/plate/selectors/usePlateValue';\nimport { SlateProps } from '../../types/slate/SlateProps';\nimport { TNode } from '../../types/slate/TNode';\nimport { UseSlatePropsOptions } from '../../types/UseSlatePropsOptions';\nimport { pipeOnChange } from '../../utils/pipeOnChange';\n\n/**\n * Get Slate props stored in a global store.\n */\nexport const useSlateProps = ({\n  id,\n  onChange: _onChange,\n}: UseSlatePropsOptions = {}): Omit<SlateProps, 'children'> => {\n  const { setValue } = usePlateActions(id);\n  const editor = usePlateEditorRef(id);\n  const keyPlugins = usePlateKey('keyPlugins', id);\n  const value = usePlateValue(id);\n\n  const onChange = useCallback(\n    (newValue: TNode[]) => {\n      if (!editor || !keyPlugins) return;\n\n      const eventIsHandled = pipeOnChange(editor)(newValue);\n\n      if (!eventIsHandled) {\n        _onChange?.(newValue);\n      }\n\n      setValue(newValue);\n    },\n    [_onChange, editor, keyPlugins, setValue]\n  );\n\n  return useMemo(\n    () => ({\n      key: editor?.key,\n      editor,\n      onChange,\n      value,\n    }),\n    [editor, onChange, value]\n  );\n};\n","import { UsePlateOptions } from '../../types/UsePlateOptions';\nimport { useEditableProps } from './useEditableProps';\nimport { usePlateEffects } from './usePlateEffects';\nimport { useSlateProps } from './useSlateProps';\n\n/**\n * Run `usePlateEffects` and props getter for `Slate` and `Editable` components.\n * Use `usePlateStore` to select store state.\n */\nexport const usePlate = <T = {}>({\n  id,\n  editor,\n  initialValue,\n  value,\n  plugins,\n  onChange,\n  editableProps,\n  normalizeInitialValue,\n}: UsePlateOptions<T>) => {\n  usePlateEffects({\n    id,\n    plugins,\n    initialValue,\n    editor,\n    value,\n    normalizeInitialValue,\n  });\n\n  return {\n    slateProps: useSlateProps({\n      id,\n      onChange,\n    }),\n    editableProps: useEditableProps({\n      id,\n      editableProps,\n    }),\n  };\n};\n","import React from 'react';\nimport { Editable } from 'slate-react';\nimport { usePlate } from '../hooks/usePlate/usePlate';\nimport { UseEditablePropsOptions } from '../types/UseEditablePropsOptions';\n\n/**\n * {@link Editable} with plugins support.\n */\nexport const EditablePlugins = (props: UseEditablePropsOptions) => {\n  const { editableProps } = usePlate(props);\n\n  return <Editable {...editableProps} />;\n};\n","import { useSlate } from 'slate-react';\nimport { PlateEditor } from '../types/PlateEditor';\n\n/**\n * Typed {@link useSlate} & PlateEditor.\n * Needs to be called in a child component of `Plate`.\n * Else, use `usePlateEditorState`.\n */\nexport const useEditorState = <T = {}>() =>\n  (useSlate() as unknown) as PlateEditor<T>;\n","import { memo, useEffect } from 'react';\nimport { useEditorState } from '../hooks/useEditorState';\nimport { incrementKey } from '../stores/plate/plate.actions';\nimport { PlateProps } from './Plate';\n\nexport const EditorStateEffect = memo(({ id }: Pick<PlateProps, 'id'>) => {\n  const editorState = useEditorState();\n\n  useEffect(() => {\n    incrementKey('keyEditor', id);\n  });\n\n  useEffect(() => {\n    incrementKey('keySelection', id);\n  }, [editorState.selection, id]);\n\n  return null;\n});\n","import React from 'react';\nimport { Editable, Slate } from 'slate-react';\nimport { EditableProps } from 'slate-react/dist/components/editable';\nimport { usePlate } from '../hooks/usePlate/usePlate';\nimport { SlateProps } from '../types/slate/SlateProps';\nimport { UsePlateEffectsOptions } from '../types/UsePlateEffectsOptions';\nimport { UseSlatePropsOptions } from '../types/UseSlatePropsOptions';\nimport { EditorStateEffect } from './EditorStateEffect';\n\nexport interface PlateProps<T = {}>\n  extends UsePlateEffectsOptions<T>,\n    UseSlatePropsOptions {\n  /**\n   * The children rendered inside `Slate` before the `Editable` component.\n   */\n  children?: React.ReactNode;\n\n  /**\n   * The props for the `Editable` component.\n   */\n  editableProps?: EditableProps;\n\n  /**\n   * Custom `Editable` node.\n   */\n  renderEditable?: (editable: React.ReactNode) => React.ReactNode;\n}\n\nexport const Plate = <T extends {} = {}>({\n  children,\n  renderEditable,\n  ...options\n}: PlateProps<T>) => {\n  const { slateProps, editableProps } = usePlate(options);\n\n  if (!slateProps.editor) return null;\n\n  const editable = <Editable {...editableProps} />;\n\n  return (\n    <Slate {...(slateProps as SlateProps)}>\n      {children}\n      <EditorStateEffect id={options.id} />\n      {renderEditable ? renderEditable(editable) : editable}\n    </Slate>\n  );\n};\n","import { useSlateStatic } from 'slate-react';\nimport { PlateEditor } from '../types/PlateEditor';\n\n/**\n * Typed {@link useSlateStatic} & PlateEditor.\n * Needs to be called in a child component of `Plate`.\n * Else, use `usePlateEditorRef`.\n */\nexport const useEditorRef = <T = {}>() =>\n  (useSlateStatic() as unknown) as PlateEditor<T>;\n","export const isHtmlComment = (node: Node): node is Comment =>\n  node.nodeType === Node.COMMENT_NODE;\n","import { parseHtmlDocument } from './parseHtmlDocument';\n\nexport const parseHtmlElement = (html: string) => {\n  const { body } = parseHtmlDocument(html);\n\n  return body.firstElementChild as HTMLElement;\n};\n","import React from 'react';\nimport { createEditor } from 'slate';\nimport { ReactEditor, Slate, withReact } from 'slate-react';\nimport { SlateProps } from '../../../types/slate/SlateProps';\n\n/**\n * Create a React element wrapped in a Slate provider.\n * By default, it will use an empty editor.\n * TODO: allow other providers\n */\nexport const createElementWithSlate = (slateProps?: Partial<SlateProps>) => {\n  const {\n    editor = withReact(createEditor() as ReactEditor),\n    value = [],\n    onChange = () => {},\n    children,\n    ...props\n  } = slateProps || {};\n\n  return React.createElement(\n    Slate,\n    {\n      editor,\n      value,\n      onChange,\n      ...props,\n    } as any,\n    children\n  );\n};\n","/**\n * Remove all class names that do not start with one of preserveClassNames (`slate-` by default)\n */\nexport const stripClassNames = (\n  html: string,\n  { preserveClassNames = ['slate-'] }: { preserveClassNames?: string[] }\n) => {\n  const allClasses = html.split(/(class=\"[^\"]*\")/g);\n\n  let filteredHtml = '';\n  allClasses.forEach((item, index) => {\n    if (index % 2 === 0) {\n      return (filteredHtml += item);\n    }\n    const preserveRegExp = new RegExp(\n      preserveClassNames.map((cn) => `${cn}[^\"\\\\s]*`).join('|'),\n      'g'\n    );\n    const slateClassNames = item.match(preserveRegExp);\n    if (slateClassNames) {\n      filteredHtml += `class=\"${slateClassNames.join(' ')}\"`;\n    }\n  });\n\n  return filteredHtml;\n};\n","import { renderToStaticMarkup } from 'react-dom/server';\nimport { PlateEditor } from '../../types/PlateEditor';\nimport { PlateRenderElementProps } from '../../types/PlateRenderElementProps';\nimport { SlateProps } from '../../types/slate/SlateProps';\nimport { pipeInjectProps } from '../../utils/pipeInjectProps';\nimport { pluginRenderElement } from '../../utils/pluginRenderElement';\nimport { createElementWithSlate } from './utils/createElementWithSlate';\nimport { stripClassNames } from './utils/stripClassNames';\n\nexport const elementToHtml = (\n  editor: PlateEditor,\n  {\n    props,\n    slateProps,\n    preserveClassNames,\n  }: {\n    props: PlateRenderElementProps;\n    slateProps?: Partial<SlateProps>;\n    preserveClassNames?: string[];\n  }\n) => {\n  let html = `<div>${props.children}</div>`;\n\n  // If no type provided we wrap children with div tag\n  if (!props.element.type) {\n    return html;\n  }\n\n  props = pipeInjectProps<PlateRenderElementProps>(editor, props);\n\n  // Search for matching plugin based on element type\n  editor.plugins.some((plugin) => {\n    if (\n      !plugin.isElement ||\n      plugin.serializeHtml === null ||\n      props.element.type !== plugin.type\n    )\n      return false;\n\n    // Render element using picked plugins renderElement function and ReactDOM\n    html = renderToStaticMarkup(\n      createElementWithSlate({\n        ...slateProps,\n        children:\n          plugin.serializeHtml?.(props) ??\n          pluginRenderElement(editor, plugin)(props),\n      })\n    );\n\n    html = stripClassNames(html, { preserveClassNames });\n\n    return true;\n  });\n\n  return html;\n};\n","import { renderToStaticMarkup } from 'react-dom/server';\nimport { PlateEditor } from '../../types/PlateEditor';\nimport { PlateRenderLeafProps } from '../../types/PlateRenderLeafProps';\nimport { SlateProps } from '../../types/slate/SlateProps';\nimport { pipeInjectProps } from '../../utils/pipeInjectProps';\nimport { pluginRenderLeaf } from '../../utils/pluginRenderLeaf';\nimport { createElementWithSlate } from './utils/createElementWithSlate';\nimport { stripClassNames } from './utils/stripClassNames';\n\nexport const leafToHtml = (\n  editor: PlateEditor,\n  {\n    props,\n    slateProps,\n    preserveClassNames,\n  }: {\n    props: PlateRenderLeafProps;\n    slateProps?: Partial<SlateProps>;\n    preserveClassNames?: string[];\n  }\n) => {\n  const { children } = props;\n\n  return editor.plugins.reduce((result, plugin) => {\n    if (!plugin.isLeaf) return result;\n\n    props = {\n      ...pipeInjectProps<PlateRenderLeafProps>(editor, props),\n      children: encodeURIComponent(result),\n    };\n\n    const serialized =\n      plugin.serializeHtml?.(props) ?? pluginRenderLeaf(editor, plugin)(props);\n\n    if (serialized === children) return result;\n\n    let html = decodeURIComponent(\n      renderToStaticMarkup(\n        createElementWithSlate({\n          ...slateProps,\n          children: serialized,\n        })\n      )\n    );\n\n    html = stripClassNames(html, { preserveClassNames });\n\n    return html;\n  }, children);\n};\n","export const isEncoded = (str = '') => {\n  try {\n    return str !== decodeURIComponent(str);\n  } catch (error) {\n    return false;\n  }\n};\n","// Remove redundant data attributes\nexport const stripSlateDataAttributes = (rawHtml: string): string =>\n  rawHtml\n    .replace(/( data-slate)(-node|-type|-leaf)=\"[^\"]+\"/gm, '')\n    .replace(/( data-testid)=\"[^\"]+\"/gm, '');\n","// Remove extra whitespace generated by ReactDOMServer\nexport const trimWhitespace = (rawHtml: string): string =>\n  rawHtml.replace(/(\\r\\n|\\n|\\r|\\t)/gm, '');\n","import { Text } from 'slate';\nimport { PlateEditor } from '../../types/PlateEditor';\nimport { SlateProps } from '../../types/slate/SlateProps';\nimport { TDescendant } from '../../types/slate/TDescendant';\nimport { isEncoded } from './utils/isEncoded';\nimport { stripSlateDataAttributes } from './utils/stripSlateDataAttributes';\nimport { trimWhitespace } from './utils/trimWhitespace';\nimport { elementToHtml } from './elementToHtml';\nimport { leafToHtml } from './leafToHtml';\n\n/**\n * Convert Slate Nodes into HTML string\n */\nexport const serializeHtml = (\n  editor: PlateEditor,\n  {\n    nodes,\n    slateProps,\n    stripDataAttributes = true,\n    preserveClassNames,\n    stripWhitespace = true,\n  }: {\n    /**\n     * Slate nodes to convert to HTML.\n     */\n    nodes: TDescendant[];\n\n    /**\n     * Enable stripping data attributes\n     */\n    stripDataAttributes?: boolean;\n\n    /**\n     * List of className prefixes to preserve from being stripped out\n     */\n    preserveClassNames?: string[];\n\n    /**\n     * Slate props to provide if the rendering depends on slate hooks\n     */\n    slateProps?: Partial<SlateProps>;\n\n    /**\n     * Whether stripping whitespaces from serialized HTML\n     * @default true\n     */\n    stripWhitespace?: boolean;\n  }\n): string => {\n  let result = nodes\n    .map((node) => {\n      if (Text.isText(node)) {\n        return leafToHtml(editor, {\n          props: {\n            leaf: node,\n            text: node,\n            children: isEncoded(node.text)\n              ? node.text\n              : encodeURIComponent(node.text),\n            attributes: { 'data-slate-leaf': true },\n            editor,\n          },\n          slateProps,\n          preserveClassNames,\n        });\n      }\n\n      return elementToHtml(editor, {\n        props: {\n          element: node,\n          children: encodeURIComponent(\n            serializeHtml(editor, {\n              nodes: node.children,\n              preserveClassNames,\n              stripWhitespace,\n            })\n          ) as any,\n          attributes: { 'data-slate-node': 'element', ref: null },\n          editor,\n        },\n        slateProps,\n        preserveClassNames,\n      });\n    })\n    .join('');\n\n  if (isEncoded(result)) {\n    result = decodeURIComponent(result);\n  }\n\n  if (stripWhitespace) {\n    result = trimWhitespace(result);\n  }\n\n  if (stripDataAttributes) {\n    result = stripSlateDataAttributes(result);\n  }\n\n  return result;\n};\n","import { EditorEvent } from '../../../types/EventEditorStore';\nimport { useEventEditorStore } from '../event-editor.store';\nimport { getEventEditorState } from './getEventEditorState';\n\nexport const getPlateEventId = (event: EditorEvent) =>\n  getEventEditorState()[event];\n\n/**\n * Get plate id by `event` key.\n */\nexport const usePlateEventId = (event: EditorEvent) =>\n  useEventEditorStore(() => getPlateEventId(event));\n","import { usePlateStore } from '../plate.store';\nimport { getPlateState } from './getPlateState';\nimport { usePlateEditorRef } from './usePlateEditorRef';\n\n/**\n * Get editor state which is updated on editor change.\n */\nexport const usePlateEditorState = <T = {}>(id?: string | null) => {\n  usePlateStore(() => getPlateState<T>(id)?.keyEditor);\n\n  return usePlateEditorRef<T>(id);\n};\n","import { getPlateEditorRef } from './usePlateEditorRef';\nimport { usePlateKey } from './usePlateKey';\n\nexport const getPlatePlugins = <T = {}>(id?: string | null) =>\n  getPlateEditorRef<T>(id)?.plugins;\n\nexport const usePlatePlugins = <T = {}>(id?: string | null) => {\n  usePlateKey('keyPlugins', id);\n\n  return getPlatePlugins<T>(id);\n};\n","import { usePlateEditorRef } from './usePlateEditorRef';\nimport { usePlateKey } from './usePlateKey';\n\n/**\n * Get the editor selection which is updated on editor change.\n */\nexport const usePlateSelection = (id?: string | null) => {\n  usePlateKey('keySelection', id);\n\n  return usePlateEditorRef(id)?.selection;\n};\n","import { useCallback } from 'react';\nimport shallow from 'zustand/shallow';\nimport { usePlateStore } from '../plate.store';\nimport { getPlateState } from './getPlateState';\n\nexport const usePlateState = (id?: string | null) =>\n  usePlateStore(\n    useCallback(() => getPlateState(id), [id]),\n    shallow\n  );\n","import { AnyObject } from '../utility/AnyObject';\nimport { isElement, TElement } from './TElement';\nimport { isText, TText } from './TText';\n\n// @ts-ignore\nexport type TDescendant<TExtension = AnyObject> =\n  | TElement<TExtension>\n  | TText<TExtension>;\n\nexport const isDescendant: (value: any) => value is TDescendant = ((\n  node: any\n) => isElement(node) || isText(node)) as any;\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n","import { cloneDeep } from 'lodash';\nimport { OverrideByKey } from '../types/OverrideByKey';\nimport { PlatePlugin } from '../types/plugins/PlatePlugin';\nimport { PlatePluginComponent } from '../types/plugins/PlatePluginComponent';\nimport { overridePluginsByKey } from './overridePluginsByKey';\n\n/**\n * Creates a new array of plugins by overriding the plugins in the original array.\n * Components can be overridden by key using `components` in the second param.\n * Any other properties can be overridden by key using `overrideByKey` in the second param.\n */\nexport const createPlugins = <T extends {} = {}>(\n  plugins: PlatePlugin<T>[],\n  {\n    components,\n    overrideByKey,\n  }: {\n    /**\n     * Override plugin component by key.\n     */\n    components?: Record<string, PlatePluginComponent>;\n\n    /**\n     * Override plugin by key.\n     */\n    overrideByKey?: OverrideByKey<T>;\n  } = {}\n): PlatePlugin<T>[] => {\n  let allOverrideByKey: OverrideByKey<T> = {};\n\n  if (overrideByKey) {\n    allOverrideByKey = cloneDeep(overrideByKey);\n  }\n\n  if (components) {\n    Object.keys(components).forEach((key) => {\n      if (!allOverrideByKey[key]) allOverrideByKey[key] = {};\n\n      allOverrideByKey[key].component = components[key];\n    });\n  }\n\n  if (Object.keys(allOverrideByKey).length) {\n    return plugins.map((plugin) => {\n      return overridePluginsByKey<T, {}>(plugin, allOverrideByKey);\n    });\n  }\n\n  return plugins;\n};\n","import { createEditor } from 'slate';\nimport { withPlate, WithPlateOptions } from '../plugins/withPlate';\nimport { OverrideByKey } from '../types/OverrideByKey';\nimport { PlateEditor } from '../types/PlateEditor';\nimport { PlatePlugin } from '../types/plugins/PlatePlugin';\nimport { PlatePluginComponent } from '../types/plugins/PlatePluginComponent';\nimport { createPlugins } from './createPlugins';\n\nexport interface CreatePlateEditorOptions<T = {}>\n  extends Omit<WithPlateOptions, 'plugins'> {\n  editor?: any;\n  plugins?: PlatePlugin<T>[];\n  components?: Record<string, PlatePluginComponent>;\n  overrideByKey?: OverrideByKey<T>;\n}\n\n/**\n * Create a plate editor with:\n * - `createEditor` or custom `editor`\n * - `withPlate`\n * - custom `components`\n */\nexport const createPlateEditor = <T = {}>({\n  editor = createEditor(),\n  plugins = [],\n  components,\n  overrideByKey,\n  ...withPlateOptions\n}: CreatePlateEditorOptions<T> = {}): PlateEditor<T> => {\n  plugins = createPlugins(plugins, {\n    components,\n    overrideByKey,\n  });\n\n  return withPlate(editor, {\n    plugins,\n    ...withPlateOptions,\n  });\n};\n","import { PlateEditor } from '../types/PlateEditor';\nimport { PluginKey } from '../types/plugins/PlatePluginKey';\nimport { getPlugin } from './getPlugin';\n\nexport const getPluginInjectProps = <T = {}>(\n  editor: PlateEditor<T>,\n  key: PluginKey\n) => getPlugin<{}, T>(editor, key).inject?.props ?? {};\n","import { PlateEditor } from '../types/PlateEditor';\nimport { PluginKey } from '../types/plugins/PlatePluginKey';\nimport { getPlugin } from './getPlugin';\n\nexport const getPluginOptions = <P = {}, T = {}>(\n  editor: PlateEditor<T>,\n  key: PluginKey\n): P => getPlugin<P, T>(editor, key).options ?? ({} as P);\n","import { PlateEditor } from '../types/PlateEditor';\nimport { PlatePlugin } from '../types/plugins/PlatePlugin';\n\n/**\n * Get `editor.plugins`\n */\nexport const getPlugins = <T = {}>(\n  editor: PlateEditor<T>\n): PlatePlugin<T>[] => {\n  return editor?.plugins ?? [];\n};\n","import { PlatePlugin, WithPlatePlugin } from '../types/plugins/PlatePlugin';\nimport { NoInfer } from '../types/utility/NoInfer';\n\nexport const mockPlugin = <P = {}>(\n  plugin?: Partial<PlatePlugin<{}, NoInfer<P>>>\n): WithPlatePlugin<{}, NoInfer<P>> => ({\n  key: '',\n  type: '',\n  editor: {},\n  inject: {},\n  options: {} as any,\n  ...plugin,\n});\n","export function pipe<T0>(x0: T0): T0;\nexport function pipe<T0, T1>(x0: T0, f1?: (x: T0) => T1): T1;\nexport function pipe<T0, T1, T2>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2\n): T2;\nexport function pipe<T0, T1, T2, T3>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3\n): T3;\nexport function pipe<T0, T1, T2, T3, T4>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4\n): T4;\nexport function pipe<T0, T1, T2, T3, T4, T5>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5\n): T5;\nexport function pipe<T0, T1, T2, T3, T4, T5, T6>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6\n): T6;\nexport function pipe<T0, T1, T2, T3, T4, T5, T6, T7>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7\n): T7;\nexport function pipe<T0, T1, T2, T3, T4, T5, T6, T7, T8>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8\n): T8;\nexport function pipe<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9\n): T9;\nexport function pipe<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10\n): T10;\nexport function pipe<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11\n): T11;\nexport function pipe<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12\n): T12;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13\n): T13;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14\n): T14;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15\n): T15;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16\n): T16;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17\n): T17;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18\n): T18;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19\n): T19;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20\n): T20;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21\n): T21;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22\n): T22;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23\n): T23;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24\n): T24;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25\n): T25;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26\n): T26;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27\n): T27;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28\n): T28;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29\n): T29;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30\n): T30;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30,\n  T31\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30,\n  f31?: (x: T30) => T31\n): T31;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30,\n  T31,\n  T32\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30,\n  f31?: (x: T30) => T31,\n  f32?: (x: T31) => T32\n): T32;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30,\n  T31,\n  T32,\n  T33\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30,\n  f31?: (x: T30) => T31,\n  f32?: (x: T31) => T32,\n  f33?: (x: T32) => T33\n): T33;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30,\n  T31,\n  T32,\n  T33,\n  T34\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30,\n  f31?: (x: T30) => T31,\n  f32?: (x: T31) => T32,\n  f33?: (x: T32) => T33,\n  f34?: (x: T33) => T34\n): T34;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30,\n  T31,\n  T32,\n  T33,\n  T34,\n  T35\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30,\n  f31?: (x: T30) => T31,\n  f32?: (x: T31) => T32,\n  f33?: (x: T32) => T33,\n  f34?: (x: T33) => T34,\n  f35?: (x: T34) => T35\n): T35;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30,\n  T31,\n  T32,\n  T33,\n  T34,\n  T35,\n  T36\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30,\n  f31?: (x: T30) => T31,\n  f32?: (x: T31) => T32,\n  f33?: (x: T32) => T33,\n  f34?: (x: T33) => T34,\n  f35?: (x: T34) => T35,\n  f36?: (x: T35) => T36\n): T36;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30,\n  T31,\n  T32,\n  T33,\n  T34,\n  T35,\n  T36,\n  T37\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30,\n  f31?: (x: T30) => T31,\n  f32?: (x: T31) => T32,\n  f33?: (x: T32) => T33,\n  f34?: (x: T33) => T34,\n  f35?: (x: T34) => T35,\n  f36?: (x: T35) => T36,\n  f37?: (x: T36) => T37\n): T37;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30,\n  T31,\n  T32,\n  T33,\n  T34,\n  T35,\n  T36,\n  T37,\n  T38\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30,\n  f31?: (x: T30) => T31,\n  f32?: (x: T31) => T32,\n  f33?: (x: T32) => T33,\n  f34?: (x: T33) => T34,\n  f35?: (x: T34) => T35,\n  f36?: (x: T35) => T36,\n  f37?: (x: T36) => T37,\n  f38?: (x: T37) => T38\n): T38;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30,\n  T31,\n  T32,\n  T33,\n  T34,\n  T35,\n  T36,\n  T37,\n  T38,\n  T39\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30,\n  f31?: (x: T30) => T31,\n  f32?: (x: T31) => T32,\n  f33?: (x: T32) => T33,\n  f34?: (x: T33) => T34,\n  f35?: (x: T34) => T35,\n  f36?: (x: T35) => T36,\n  f37?: (x: T36) => T37,\n  f38?: (x: T37) => T38,\n  f39?: (x: T38) => T39\n): T39;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30,\n  T31,\n  T32,\n  T33,\n  T34,\n  T35,\n  T36,\n  T37,\n  T38,\n  T39,\n  T40\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30,\n  f31?: (x: T30) => T31,\n  f32?: (x: T31) => T32,\n  f33?: (x: T32) => T33,\n  f34?: (x: T33) => T34,\n  f35?: (x: T34) => T35,\n  f36?: (x: T35) => T36,\n  f37?: (x: T36) => T37,\n  f38?: (x: T37) => T38,\n  f39?: (x: T38) => T39,\n  f40?: (x: T39) => T40\n): T40;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30,\n  T31,\n  T32,\n  T33,\n  T34,\n  T35,\n  T36,\n  T37,\n  T38,\n  T39,\n  T40,\n  T41\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30,\n  f31?: (x: T30) => T31,\n  f32?: (x: T31) => T32,\n  f33?: (x: T32) => T33,\n  f34?: (x: T33) => T34,\n  f35?: (x: T34) => T35,\n  f36?: (x: T35) => T36,\n  f37?: (x: T36) => T37,\n  f38?: (x: T37) => T38,\n  f39?: (x: T38) => T39,\n  f40?: (x: T39) => T40,\n  f41?: (x: T40) => T41\n): T41;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30,\n  T31,\n  T32,\n  T33,\n  T34,\n  T35,\n  T36,\n  T37,\n  T38,\n  T39,\n  T40,\n  T41,\n  T42\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30,\n  f31?: (x: T30) => T31,\n  f32?: (x: T31) => T32,\n  f33?: (x: T32) => T33,\n  f34?: (x: T33) => T34,\n  f35?: (x: T34) => T35,\n  f36?: (x: T35) => T36,\n  f37?: (x: T36) => T37,\n  f38?: (x: T37) => T38,\n  f39?: (x: T38) => T39,\n  f40?: (x: T39) => T40,\n  f41?: (x: T40) => T41,\n  f42?: (x: T41) => T42\n): T42;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30,\n  T31,\n  T32,\n  T33,\n  T34,\n  T35,\n  T36,\n  T37,\n  T38,\n  T39,\n  T40,\n  T41,\n  T42,\n  T43\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30,\n  f31?: (x: T30) => T31,\n  f32?: (x: T31) => T32,\n  f33?: (x: T32) => T33,\n  f34?: (x: T33) => T34,\n  f35?: (x: T34) => T35,\n  f36?: (x: T35) => T36,\n  f37?: (x: T36) => T37,\n  f38?: (x: T37) => T38,\n  f39?: (x: T38) => T39,\n  f40?: (x: T39) => T40,\n  f41?: (x: T40) => T41,\n  f42?: (x: T41) => T42,\n  f43?: (x: T42) => T43\n): T43;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30,\n  T31,\n  T32,\n  T33,\n  T34,\n  T35,\n  T36,\n  T37,\n  T38,\n  T39,\n  T40,\n  T41,\n  T42,\n  T43,\n  T44\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30,\n  f31?: (x: T30) => T31,\n  f32?: (x: T31) => T32,\n  f33?: (x: T32) => T33,\n  f34?: (x: T33) => T34,\n  f35?: (x: T34) => T35,\n  f36?: (x: T35) => T36,\n  f37?: (x: T36) => T37,\n  f38?: (x: T37) => T38,\n  f39?: (x: T38) => T39,\n  f40?: (x: T39) => T40,\n  f41?: (x: T40) => T41,\n  f42?: (x: T41) => T42,\n  f43?: (x: T42) => T43,\n  f44?: (x: T43) => T44\n): T44;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30,\n  T31,\n  T32,\n  T33,\n  T34,\n  T35,\n  T36,\n  T37,\n  T38,\n  T39,\n  T40,\n  T41,\n  T42,\n  T43,\n  T44,\n  T45\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30,\n  f31?: (x: T30) => T31,\n  f32?: (x: T31) => T32,\n  f33?: (x: T32) => T33,\n  f34?: (x: T33) => T34,\n  f35?: (x: T34) => T35,\n  f36?: (x: T35) => T36,\n  f37?: (x: T36) => T37,\n  f38?: (x: T37) => T38,\n  f39?: (x: T38) => T39,\n  f40?: (x: T39) => T40,\n  f41?: (x: T40) => T41,\n  f42?: (x: T41) => T42,\n  f43?: (x: T42) => T43,\n  f44?: (x: T43) => T44,\n  f45?: (x: T44) => T45\n): T45;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30,\n  T31,\n  T32,\n  T33,\n  T34,\n  T35,\n  T36,\n  T37,\n  T38,\n  T39,\n  T40,\n  T41,\n  T42,\n  T43,\n  T44,\n  T45,\n  T46\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30,\n  f31?: (x: T30) => T31,\n  f32?: (x: T31) => T32,\n  f33?: (x: T32) => T33,\n  f34?: (x: T33) => T34,\n  f35?: (x: T34) => T35,\n  f36?: (x: T35) => T36,\n  f37?: (x: T36) => T37,\n  f38?: (x: T37) => T38,\n  f39?: (x: T38) => T39,\n  f40?: (x: T39) => T40,\n  f41?: (x: T40) => T41,\n  f42?: (x: T41) => T42,\n  f43?: (x: T42) => T43,\n  f44?: (x: T43) => T44,\n  f45?: (x: T44) => T45,\n  f46?: (x: T45) => T46\n): T46;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30,\n  T31,\n  T32,\n  T33,\n  T34,\n  T35,\n  T36,\n  T37,\n  T38,\n  T39,\n  T40,\n  T41,\n  T42,\n  T43,\n  T44,\n  T45,\n  T46,\n  T47\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30,\n  f31?: (x: T30) => T31,\n  f32?: (x: T31) => T32,\n  f33?: (x: T32) => T33,\n  f34?: (x: T33) => T34,\n  f35?: (x: T34) => T35,\n  f36?: (x: T35) => T36,\n  f37?: (x: T36) => T37,\n  f38?: (x: T37) => T38,\n  f39?: (x: T38) => T39,\n  f40?: (x: T39) => T40,\n  f41?: (x: T40) => T41,\n  f42?: (x: T41) => T42,\n  f43?: (x: T42) => T43,\n  f44?: (x: T43) => T44,\n  f45?: (x: T44) => T45,\n  f46?: (x: T45) => T46,\n  f47?: (x: T46) => T47\n): T47;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30,\n  T31,\n  T32,\n  T33,\n  T34,\n  T35,\n  T36,\n  T37,\n  T38,\n  T39,\n  T40,\n  T41,\n  T42,\n  T43,\n  T44,\n  T45,\n  T46,\n  T47,\n  T48\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30,\n  f31?: (x: T30) => T31,\n  f32?: (x: T31) => T32,\n  f33?: (x: T32) => T33,\n  f34?: (x: T33) => T34,\n  f35?: (x: T34) => T35,\n  f36?: (x: T35) => T36,\n  f37?: (x: T36) => T37,\n  f38?: (x: T37) => T38,\n  f39?: (x: T38) => T39,\n  f40?: (x: T39) => T40,\n  f41?: (x: T40) => T41,\n  f42?: (x: T41) => T42,\n  f43?: (x: T42) => T43,\n  f44?: (x: T43) => T44,\n  f45?: (x: T44) => T45,\n  f46?: (x: T45) => T46,\n  f47?: (x: T46) => T47,\n  f48?: (x: T47) => T48\n): T48;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30,\n  T31,\n  T32,\n  T33,\n  T34,\n  T35,\n  T36,\n  T37,\n  T38,\n  T39,\n  T40,\n  T41,\n  T42,\n  T43,\n  T44,\n  T45,\n  T46,\n  T47,\n  T48,\n  T49\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30,\n  f31?: (x: T30) => T31,\n  f32?: (x: T31) => T32,\n  f33?: (x: T32) => T33,\n  f34?: (x: T33) => T34,\n  f35?: (x: T34) => T35,\n  f36?: (x: T35) => T36,\n  f37?: (x: T36) => T37,\n  f38?: (x: T37) => T38,\n  f39?: (x: T38) => T39,\n  f40?: (x: T39) => T40,\n  f41?: (x: T40) => T41,\n  f42?: (x: T41) => T42,\n  f43?: (x: T42) => T43,\n  f44?: (x: T43) => T44,\n  f45?: (x: T44) => T45,\n  f46?: (x: T45) => T46,\n  f47?: (x: T46) => T47,\n  f48?: (x: T47) => T48,\n  f49?: (x: T48) => T49\n): T49;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30,\n  T31,\n  T32,\n  T33,\n  T34,\n  T35,\n  T36,\n  T37,\n  T38,\n  T39,\n  T40,\n  T41,\n  T42,\n  T43,\n  T44,\n  T45,\n  T46,\n  T47,\n  T48,\n  T49,\n  T50\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30,\n  f31?: (x: T30) => T31,\n  f32?: (x: T31) => T32,\n  f33?: (x: T32) => T33,\n  f34?: (x: T33) => T34,\n  f35?: (x: T34) => T35,\n  f36?: (x: T35) => T36,\n  f37?: (x: T36) => T37,\n  f38?: (x: T37) => T38,\n  f39?: (x: T38) => T39,\n  f40?: (x: T39) => T40,\n  f41?: (x: T40) => T41,\n  f42?: (x: T41) => T42,\n  f43?: (x: T42) => T43,\n  f44?: (x: T43) => T44,\n  f45?: (x: T44) => T45,\n  f46?: (x: T45) => T46,\n  f47?: (x: T46) => T47,\n  f48?: (x: T47) => T48,\n  f49?: (x: T48) => T49,\n  f50?: (x: T49) => T50\n): T50;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30,\n  T31,\n  T32,\n  T33,\n  T34,\n  T35,\n  T36,\n  T37,\n  T38,\n  T39,\n  T40,\n  T41,\n  T42,\n  T43,\n  T44,\n  T45,\n  T46,\n  T47,\n  T48,\n  T49,\n  T50,\n  T51\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30,\n  f31?: (x: T30) => T31,\n  f32?: (x: T31) => T32,\n  f33?: (x: T32) => T33,\n  f34?: (x: T33) => T34,\n  f35?: (x: T34) => T35,\n  f36?: (x: T35) => T36,\n  f37?: (x: T36) => T37,\n  f38?: (x: T37) => T38,\n  f39?: (x: T38) => T39,\n  f40?: (x: T39) => T40,\n  f41?: (x: T40) => T41,\n  f42?: (x: T41) => T42,\n  f43?: (x: T42) => T43,\n  f44?: (x: T43) => T44,\n  f45?: (x: T44) => T45,\n  f46?: (x: T45) => T46,\n  f47?: (x: T46) => T47,\n  f48?: (x: T47) => T48,\n  f49?: (x: T48) => T49,\n  f50?: (x: T49) => T50,\n  f51?: (x: T50) => T51\n): T51;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30,\n  T31,\n  T32,\n  T33,\n  T34,\n  T35,\n  T36,\n  T37,\n  T38,\n  T39,\n  T40,\n  T41,\n  T42,\n  T43,\n  T44,\n  T45,\n  T46,\n  T47,\n  T48,\n  T49,\n  T50,\n  T51,\n  T52\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30,\n  f31?: (x: T30) => T31,\n  f32?: (x: T31) => T32,\n  f33?: (x: T32) => T33,\n  f34?: (x: T33) => T34,\n  f35?: (x: T34) => T35,\n  f36?: (x: T35) => T36,\n  f37?: (x: T36) => T37,\n  f38?: (x: T37) => T38,\n  f39?: (x: T38) => T39,\n  f40?: (x: T39) => T40,\n  f41?: (x: T40) => T41,\n  f42?: (x: T41) => T42,\n  f43?: (x: T42) => T43,\n  f44?: (x: T43) => T44,\n  f45?: (x: T44) => T45,\n  f46?: (x: T45) => T46,\n  f47?: (x: T46) => T47,\n  f48?: (x: T47) => T48,\n  f49?: (x: T48) => T49,\n  f50?: (x: T49) => T50,\n  f51?: (x: T50) => T51,\n  f52?: (x: T51) => T52\n): T52;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30,\n  T31,\n  T32,\n  T33,\n  T34,\n  T35,\n  T36,\n  T37,\n  T38,\n  T39,\n  T40,\n  T41,\n  T42,\n  T43,\n  T44,\n  T45,\n  T46,\n  T47,\n  T48,\n  T49,\n  T50,\n  T51,\n  T52,\n  T53\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30,\n  f31?: (x: T30) => T31,\n  f32?: (x: T31) => T32,\n  f33?: (x: T32) => T33,\n  f34?: (x: T33) => T34,\n  f35?: (x: T34) => T35,\n  f36?: (x: T35) => T36,\n  f37?: (x: T36) => T37,\n  f38?: (x: T37) => T38,\n  f39?: (x: T38) => T39,\n  f40?: (x: T39) => T40,\n  f41?: (x: T40) => T41,\n  f42?: (x: T41) => T42,\n  f43?: (x: T42) => T43,\n  f44?: (x: T43) => T44,\n  f45?: (x: T44) => T45,\n  f46?: (x: T45) => T46,\n  f47?: (x: T46) => T47,\n  f48?: (x: T47) => T48,\n  f49?: (x: T48) => T49,\n  f50?: (x: T49) => T50,\n  f51?: (x: T50) => T51,\n  f52?: (x: T51) => T52,\n  f53?: (x: T52) => T53\n): T53;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30,\n  T31,\n  T32,\n  T33,\n  T34,\n  T35,\n  T36,\n  T37,\n  T38,\n  T39,\n  T40,\n  T41,\n  T42,\n  T43,\n  T44,\n  T45,\n  T46,\n  T47,\n  T48,\n  T49,\n  T50,\n  T51,\n  T52,\n  T53,\n  T54\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30,\n  f31?: (x: T30) => T31,\n  f32?: (x: T31) => T32,\n  f33?: (x: T32) => T33,\n  f34?: (x: T33) => T34,\n  f35?: (x: T34) => T35,\n  f36?: (x: T35) => T36,\n  f37?: (x: T36) => T37,\n  f38?: (x: T37) => T38,\n  f39?: (x: T38) => T39,\n  f40?: (x: T39) => T40,\n  f41?: (x: T40) => T41,\n  f42?: (x: T41) => T42,\n  f43?: (x: T42) => T43,\n  f44?: (x: T43) => T44,\n  f45?: (x: T44) => T45,\n  f46?: (x: T45) => T46,\n  f47?: (x: T46) => T47,\n  f48?: (x: T47) => T48,\n  f49?: (x: T48) => T49,\n  f50?: (x: T49) => T50,\n  f51?: (x: T50) => T51,\n  f52?: (x: T51) => T52,\n  f53?: (x: T52) => T53,\n  f54?: (x: T53) => T54\n): T54;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30,\n  T31,\n  T32,\n  T33,\n  T34,\n  T35,\n  T36,\n  T37,\n  T38,\n  T39,\n  T40,\n  T41,\n  T42,\n  T43,\n  T44,\n  T45,\n  T46,\n  T47,\n  T48,\n  T49,\n  T50,\n  T51,\n  T52,\n  T53,\n  T54,\n  T55\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30,\n  f31?: (x: T30) => T31,\n  f32?: (x: T31) => T32,\n  f33?: (x: T32) => T33,\n  f34?: (x: T33) => T34,\n  f35?: (x: T34) => T35,\n  f36?: (x: T35) => T36,\n  f37?: (x: T36) => T37,\n  f38?: (x: T37) => T38,\n  f39?: (x: T38) => T39,\n  f40?: (x: T39) => T40,\n  f41?: (x: T40) => T41,\n  f42?: (x: T41) => T42,\n  f43?: (x: T42) => T43,\n  f44?: (x: T43) => T44,\n  f45?: (x: T44) => T45,\n  f46?: (x: T45) => T46,\n  f47?: (x: T46) => T47,\n  f48?: (x: T47) => T48,\n  f49?: (x: T48) => T49,\n  f50?: (x: T49) => T50,\n  f51?: (x: T50) => T51,\n  f52?: (x: T51) => T52,\n  f53?: (x: T52) => T53,\n  f54?: (x: T53) => T54,\n  f55?: (x: T54) => T55\n): T55;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30,\n  T31,\n  T32,\n  T33,\n  T34,\n  T35,\n  T36,\n  T37,\n  T38,\n  T39,\n  T40,\n  T41,\n  T42,\n  T43,\n  T44,\n  T45,\n  T46,\n  T47,\n  T48,\n  T49,\n  T50,\n  T51,\n  T52,\n  T53,\n  T54,\n  T55,\n  T56\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30,\n  f31?: (x: T30) => T31,\n  f32?: (x: T31) => T32,\n  f33?: (x: T32) => T33,\n  f34?: (x: T33) => T34,\n  f35?: (x: T34) => T35,\n  f36?: (x: T35) => T36,\n  f37?: (x: T36) => T37,\n  f38?: (x: T37) => T38,\n  f39?: (x: T38) => T39,\n  f40?: (x: T39) => T40,\n  f41?: (x: T40) => T41,\n  f42?: (x: T41) => T42,\n  f43?: (x: T42) => T43,\n  f44?: (x: T43) => T44,\n  f45?: (x: T44) => T45,\n  f46?: (x: T45) => T46,\n  f47?: (x: T46) => T47,\n  f48?: (x: T47) => T48,\n  f49?: (x: T48) => T49,\n  f50?: (x: T49) => T50,\n  f51?: (x: T50) => T51,\n  f52?: (x: T51) => T52,\n  f53?: (x: T52) => T53,\n  f54?: (x: T53) => T54,\n  f55?: (x: T54) => T55,\n  f56?: (x: T55) => T56\n): T56;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30,\n  T31,\n  T32,\n  T33,\n  T34,\n  T35,\n  T36,\n  T37,\n  T38,\n  T39,\n  T40,\n  T41,\n  T42,\n  T43,\n  T44,\n  T45,\n  T46,\n  T47,\n  T48,\n  T49,\n  T50,\n  T51,\n  T52,\n  T53,\n  T54,\n  T55,\n  T56,\n  T57\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30,\n  f31?: (x: T30) => T31,\n  f32?: (x: T31) => T32,\n  f33?: (x: T32) => T33,\n  f34?: (x: T33) => T34,\n  f35?: (x: T34) => T35,\n  f36?: (x: T35) => T36,\n  f37?: (x: T36) => T37,\n  f38?: (x: T37) => T38,\n  f39?: (x: T38) => T39,\n  f40?: (x: T39) => T40,\n  f41?: (x: T40) => T41,\n  f42?: (x: T41) => T42,\n  f43?: (x: T42) => T43,\n  f44?: (x: T43) => T44,\n  f45?: (x: T44) => T45,\n  f46?: (x: T45) => T46,\n  f47?: (x: T46) => T47,\n  f48?: (x: T47) => T48,\n  f49?: (x: T48) => T49,\n  f50?: (x: T49) => T50,\n  f51?: (x: T50) => T51,\n  f52?: (x: T51) => T52,\n  f53?: (x: T52) => T53,\n  f54?: (x: T53) => T54,\n  f55?: (x: T54) => T55,\n  f56?: (x: T55) => T56,\n  f57?: (x: T56) => T57\n): T57;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30,\n  T31,\n  T32,\n  T33,\n  T34,\n  T35,\n  T36,\n  T37,\n  T38,\n  T39,\n  T40,\n  T41,\n  T42,\n  T43,\n  T44,\n  T45,\n  T46,\n  T47,\n  T48,\n  T49,\n  T50,\n  T51,\n  T52,\n  T53,\n  T54,\n  T55,\n  T56,\n  T57,\n  T58\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30,\n  f31?: (x: T30) => T31,\n  f32?: (x: T31) => T32,\n  f33?: (x: T32) => T33,\n  f34?: (x: T33) => T34,\n  f35?: (x: T34) => T35,\n  f36?: (x: T35) => T36,\n  f37?: (x: T36) => T37,\n  f38?: (x: T37) => T38,\n  f39?: (x: T38) => T39,\n  f40?: (x: T39) => T40,\n  f41?: (x: T40) => T41,\n  f42?: (x: T41) => T42,\n  f43?: (x: T42) => T43,\n  f44?: (x: T43) => T44,\n  f45?: (x: T44) => T45,\n  f46?: (x: T45) => T46,\n  f47?: (x: T46) => T47,\n  f48?: (x: T47) => T48,\n  f49?: (x: T48) => T49,\n  f50?: (x: T49) => T50,\n  f51?: (x: T50) => T51,\n  f52?: (x: T51) => T52,\n  f53?: (x: T52) => T53,\n  f54?: (x: T53) => T54,\n  f55?: (x: T54) => T55,\n  f56?: (x: T55) => T56,\n  f57?: (x: T56) => T57,\n  f58?: (x: T57) => T58\n): T58;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30,\n  T31,\n  T32,\n  T33,\n  T34,\n  T35,\n  T36,\n  T37,\n  T38,\n  T39,\n  T40,\n  T41,\n  T42,\n  T43,\n  T44,\n  T45,\n  T46,\n  T47,\n  T48,\n  T49,\n  T50,\n  T51,\n  T52,\n  T53,\n  T54,\n  T55,\n  T56,\n  T57,\n  T58,\n  T59\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30,\n  f31?: (x: T30) => T31,\n  f32?: (x: T31) => T32,\n  f33?: (x: T32) => T33,\n  f34?: (x: T33) => T34,\n  f35?: (x: T34) => T35,\n  f36?: (x: T35) => T36,\n  f37?: (x: T36) => T37,\n  f38?: (x: T37) => T38,\n  f39?: (x: T38) => T39,\n  f40?: (x: T39) => T40,\n  f41?: (x: T40) => T41,\n  f42?: (x: T41) => T42,\n  f43?: (x: T42) => T43,\n  f44?: (x: T43) => T44,\n  f45?: (x: T44) => T45,\n  f46?: (x: T45) => T46,\n  f47?: (x: T46) => T47,\n  f48?: (x: T47) => T48,\n  f49?: (x: T48) => T49,\n  f50?: (x: T49) => T50,\n  f51?: (x: T50) => T51,\n  f52?: (x: T51) => T52,\n  f53?: (x: T52) => T53,\n  f54?: (x: T53) => T54,\n  f55?: (x: T54) => T55,\n  f56?: (x: T55) => T56,\n  f57?: (x: T56) => T57,\n  f58?: (x: T57) => T58,\n  f59?: (x: T58) => T59\n): T59;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30,\n  T31,\n  T32,\n  T33,\n  T34,\n  T35,\n  T36,\n  T37,\n  T38,\n  T39,\n  T40,\n  T41,\n  T42,\n  T43,\n  T44,\n  T45,\n  T46,\n  T47,\n  T48,\n  T49,\n  T50,\n  T51,\n  T52,\n  T53,\n  T54,\n  T55,\n  T56,\n  T57,\n  T58,\n  T59,\n  T60\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30,\n  f31?: (x: T30) => T31,\n  f32?: (x: T31) => T32,\n  f33?: (x: T32) => T33,\n  f34?: (x: T33) => T34,\n  f35?: (x: T34) => T35,\n  f36?: (x: T35) => T36,\n  f37?: (x: T36) => T37,\n  f38?: (x: T37) => T38,\n  f39?: (x: T38) => T39,\n  f40?: (x: T39) => T40,\n  f41?: (x: T40) => T41,\n  f42?: (x: T41) => T42,\n  f43?: (x: T42) => T43,\n  f44?: (x: T43) => T44,\n  f45?: (x: T44) => T45,\n  f46?: (x: T45) => T46,\n  f47?: (x: T46) => T47,\n  f48?: (x: T47) => T48,\n  f49?: (x: T48) => T49,\n  f50?: (x: T49) => T50,\n  f51?: (x: T50) => T51,\n  f52?: (x: T51) => T52,\n  f53?: (x: T52) => T53,\n  f54?: (x: T53) => T54,\n  f55?: (x: T54) => T55,\n  f56?: (x: T55) => T56,\n  f57?: (x: T56) => T57,\n  f58?: (x: T57) => T58,\n  f59?: (x: T58) => T59,\n  f60?: (x: T59) => T60\n): T60;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30,\n  T31,\n  T32,\n  T33,\n  T34,\n  T35,\n  T36,\n  T37,\n  T38,\n  T39,\n  T40,\n  T41,\n  T42,\n  T43,\n  T44,\n  T45,\n  T46,\n  T47,\n  T48,\n  T49,\n  T50,\n  T51,\n  T52,\n  T53,\n  T54,\n  T55,\n  T56,\n  T57,\n  T58,\n  T59,\n  T60,\n  T61\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30,\n  f31?: (x: T30) => T31,\n  f32?: (x: T31) => T32,\n  f33?: (x: T32) => T33,\n  f34?: (x: T33) => T34,\n  f35?: (x: T34) => T35,\n  f36?: (x: T35) => T36,\n  f37?: (x: T36) => T37,\n  f38?: (x: T37) => T38,\n  f39?: (x: T38) => T39,\n  f40?: (x: T39) => T40,\n  f41?: (x: T40) => T41,\n  f42?: (x: T41) => T42,\n  f43?: (x: T42) => T43,\n  f44?: (x: T43) => T44,\n  f45?: (x: T44) => T45,\n  f46?: (x: T45) => T46,\n  f47?: (x: T46) => T47,\n  f48?: (x: T47) => T48,\n  f49?: (x: T48) => T49,\n  f50?: (x: T49) => T50,\n  f51?: (x: T50) => T51,\n  f52?: (x: T51) => T52,\n  f53?: (x: T52) => T53,\n  f54?: (x: T53) => T54,\n  f55?: (x: T54) => T55,\n  f56?: (x: T55) => T56,\n  f57?: (x: T56) => T57,\n  f58?: (x: T57) => T58,\n  f59?: (x: T58) => T59,\n  f60?: (x: T59) => T60,\n  f61?: (x: T60) => T61\n): T61;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30,\n  T31,\n  T32,\n  T33,\n  T34,\n  T35,\n  T36,\n  T37,\n  T38,\n  T39,\n  T40,\n  T41,\n  T42,\n  T43,\n  T44,\n  T45,\n  T46,\n  T47,\n  T48,\n  T49,\n  T50,\n  T51,\n  T52,\n  T53,\n  T54,\n  T55,\n  T56,\n  T57,\n  T58,\n  T59,\n  T60,\n  T61,\n  T62\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30,\n  f31?: (x: T30) => T31,\n  f32?: (x: T31) => T32,\n  f33?: (x: T32) => T33,\n  f34?: (x: T33) => T34,\n  f35?: (x: T34) => T35,\n  f36?: (x: T35) => T36,\n  f37?: (x: T36) => T37,\n  f38?: (x: T37) => T38,\n  f39?: (x: T38) => T39,\n  f40?: (x: T39) => T40,\n  f41?: (x: T40) => T41,\n  f42?: (x: T41) => T42,\n  f43?: (x: T42) => T43,\n  f44?: (x: T43) => T44,\n  f45?: (x: T44) => T45,\n  f46?: (x: T45) => T46,\n  f47?: (x: T46) => T47,\n  f48?: (x: T47) => T48,\n  f49?: (x: T48) => T49,\n  f50?: (x: T49) => T50,\n  f51?: (x: T50) => T51,\n  f52?: (x: T51) => T52,\n  f53?: (x: T52) => T53,\n  f54?: (x: T53) => T54,\n  f55?: (x: T54) => T55,\n  f56?: (x: T55) => T56,\n  f57?: (x: T56) => T57,\n  f58?: (x: T57) => T58,\n  f59?: (x: T58) => T59,\n  f60?: (x: T59) => T60,\n  f61?: (x: T60) => T61,\n  f62?: (x: T61) => T62\n): T62;\nexport function pipe<\n  T0,\n  T1,\n  T2,\n  T3,\n  T4,\n  T5,\n  T6,\n  T7,\n  T8,\n  T9,\n  T10,\n  T11,\n  T12,\n  T13,\n  T14,\n  T15,\n  T16,\n  T17,\n  T18,\n  T19,\n  T20,\n  T21,\n  T22,\n  T23,\n  T24,\n  T25,\n  T26,\n  T27,\n  T28,\n  T29,\n  T30,\n  T31,\n  T32,\n  T33,\n  T34,\n  T35,\n  T36,\n  T37,\n  T38,\n  T39,\n  T40,\n  T41,\n  T42,\n  T43,\n  T44,\n  T45,\n  T46,\n  T47,\n  T48,\n  T49,\n  T50,\n  T51,\n  T52,\n  T53,\n  T54,\n  T55,\n  T56,\n  T57,\n  T58,\n  T59,\n  T60,\n  T61,\n  T62,\n  T63\n>(\n  x0: T0,\n  f1?: (x: T0) => T1,\n  f2?: (x: T1) => T2,\n  f3?: (x: T2) => T3,\n  f4?: (x: T3) => T4,\n  f5?: (x: T4) => T5,\n  f6?: (x: T5) => T6,\n  f7?: (x: T6) => T7,\n  f8?: (x: T7) => T8,\n  f9?: (x: T8) => T9,\n  f10?: (x: T9) => T10,\n  f11?: (x: T10) => T11,\n  f12?: (x: T11) => T12,\n  f13?: (x: T12) => T13,\n  f14?: (x: T13) => T14,\n  f15?: (x: T14) => T15,\n  f16?: (x: T15) => T16,\n  f17?: (x: T16) => T17,\n  f18?: (x: T17) => T18,\n  f19?: (x: T18) => T19,\n  f20?: (x: T19) => T20,\n  f21?: (x: T20) => T21,\n  f22?: (x: T21) => T22,\n  f23?: (x: T22) => T23,\n  f24?: (x: T23) => T24,\n  f25?: (x: T24) => T25,\n  f26?: (x: T25) => T26,\n  f27?: (x: T26) => T27,\n  f28?: (x: T27) => T28,\n  f29?: (x: T28) => T29,\n  f30?: (x: T29) => T30,\n  f31?: (x: T30) => T31,\n  f32?: (x: T31) => T32,\n  f33?: (x: T32) => T33,\n  f34?: (x: T33) => T34,\n  f35?: (x: T34) => T35,\n  f36?: (x: T35) => T36,\n  f37?: (x: T36) => T37,\n  f38?: (x: T37) => T38,\n  f39?: (x: T38) => T39,\n  f40?: (x: T39) => T40,\n  f41?: (x: T40) => T41,\n  f42?: (x: T41) => T42,\n  f43?: (x: T42) => T43,\n  f44?: (x: T43) => T44,\n  f45?: (x: T44) => T45,\n  f46?: (x: T45) => T46,\n  f47?: (x: T46) => T47,\n  f48?: (x: T47) => T48,\n  f49?: (x: T48) => T49,\n  f50?: (x: T49) => T50,\n  f51?: (x: T50) => T51,\n  f52?: (x: T51) => T52,\n  f53?: (x: T52) => T53,\n  f54?: (x: T53) => T54,\n  f55?: (x: T54) => T55,\n  f56?: (x: T55) => T56,\n  f57?: (x: T56) => T57,\n  f58?: (x: T57) => T58,\n  f59?: (x: T58) => T59,\n  f60?: (x: T59) => T60,\n  f61?: (x: T60) => T61,\n  f62?: (x: T61) => T62,\n  f63?: (x: T62) => T63\n): T63;\n\nexport function pipe(x: any, ...fns: any[]) {\n  return fns.reduce((y: any, fn) => fn(y), x);\n}\n"]},"metadata":{},"sourceType":"module"}