{"ast":null,"code":"import { wrapNodes, getPluginType, isCollapsed, insertNodes, unwrapNodes, getAbove, getRangeBefore, getText, someNode, mockPlugin, getRangeFromBlockStart, createPluginFactory, isUrl } from '@udecode/plate-core';\nimport { Editor, Transforms } from 'slate';\nimport { withRemoveEmptyNodes } from '@udecode/plate-normalizers';\n\nfunction unwrapExports(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar lib = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  /**\r\n   * Constants.\r\n   */\n\n  var IS_MAC = typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n  var MODIFIERS = {\n    alt: 'altKey',\n    control: 'ctrlKey',\n    meta: 'metaKey',\n    shift: 'shiftKey'\n  };\n  var ALIASES = {\n    add: '+',\n    break: 'pause',\n    cmd: 'meta',\n    command: 'meta',\n    ctl: 'control',\n    ctrl: 'control',\n    del: 'delete',\n    down: 'arrowdown',\n    esc: 'escape',\n    ins: 'insert',\n    left: 'arrowleft',\n    mod: IS_MAC ? 'meta' : 'control',\n    opt: 'alt',\n    option: 'alt',\n    return: 'enter',\n    right: 'arrowright',\n    space: ' ',\n    spacebar: ' ',\n    up: 'arrowup',\n    win: 'meta',\n    windows: 'meta'\n  };\n  var CODES = {\n    backspace: 8,\n    tab: 9,\n    enter: 13,\n    shift: 16,\n    control: 17,\n    alt: 18,\n    pause: 19,\n    capslock: 20,\n    escape: 27,\n    ' ': 32,\n    pageup: 33,\n    pagedown: 34,\n    end: 35,\n    home: 36,\n    arrowleft: 37,\n    arrowup: 38,\n    arrowright: 39,\n    arrowdown: 40,\n    insert: 45,\n    delete: 46,\n    meta: 91,\n    numlock: 144,\n    scrolllock: 145,\n    ';': 186,\n    '=': 187,\n    ',': 188,\n    '-': 189,\n    '.': 190,\n    '/': 191,\n    '`': 192,\n    '[': 219,\n    '\\\\': 220,\n    ']': 221,\n    '\\'': 222\n  };\n\n  for (var f = 1; f < 20; f++) {\n    CODES['f' + f] = 111 + f;\n  }\n  /**\r\n   * Is hotkey?\r\n   */\n\n\n  function isHotkey(hotkey, options, event) {\n    if (options && !('byKey' in options)) {\n      event = options;\n      options = null;\n    }\n\n    if (!Array.isArray(hotkey)) {\n      hotkey = [hotkey];\n    }\n\n    var array = hotkey.map(function (string) {\n      return parseHotkey(string, options);\n    });\n\n    var check = function check(e) {\n      return array.some(function (object) {\n        return compareHotkey(object, e);\n      });\n    };\n\n    var ret = event == null ? check : check(event);\n    return ret;\n  }\n\n  function isCodeHotkey(hotkey, event) {\n    return isHotkey(hotkey, event);\n  }\n\n  function isKeyHotkey(hotkey, event) {\n    return isHotkey(hotkey, {\n      byKey: true\n    }, event);\n  }\n  /**\r\n   * Parse.\r\n   */\n\n\n  function parseHotkey(hotkey, options) {\n    var byKey = options && options.byKey;\n    var ret = {}; // Special case to handle the `+` key since we use it as a separator.\n\n    hotkey = hotkey.replace('++', '+add');\n    var values = hotkey.split('+');\n    var length = values.length; // Ensure that all the modifiers are set to false unless the hotkey has them.\n\n    for (var k in MODIFIERS) {\n      ret[MODIFIERS[k]] = false;\n    }\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var value = _step.value;\n        var optional = value.endsWith('?') && value.length > 1;\n\n        if (optional) {\n          value = value.slice(0, -1);\n        }\n\n        var name = toKeyName(value);\n        var modifier = MODIFIERS[name];\n\n        if (length === 1 || !modifier) {\n          if (byKey) {\n            ret.key = name;\n          } else {\n            ret.which = toKeyCode(value);\n          }\n        }\n\n        if (modifier) {\n          ret[modifier] = optional ? null : true;\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return ret;\n  }\n  /**\r\n   * Compare.\r\n   */\n\n\n  function compareHotkey(object, event) {\n    for (var key in object) {\n      var expected = object[key];\n      var actual = void 0;\n\n      if (expected == null) {\n        continue;\n      }\n\n      if (key === 'key' && event.key != null) {\n        actual = event.key.toLowerCase();\n      } else if (key === 'which') {\n        actual = expected === 91 && event.which === 93 ? 91 : event.which;\n      } else {\n        actual = event[key];\n      }\n\n      if (actual == null && expected === false) {\n        continue;\n      }\n\n      if (actual !== expected) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n  /**\r\n   * Utils.\r\n   */\n\n\n  function toKeyCode(name) {\n    name = toKeyName(name);\n    var code = CODES[name] || name.toUpperCase().charCodeAt(0);\n    return code;\n  }\n\n  function toKeyName(name) {\n    name = name.toLowerCase();\n    name = ALIASES[name] || name;\n    return name;\n  }\n  /**\r\n   * Export.\r\n   */\n\n\n  exports.default = isHotkey;\n  exports.isHotkey = isHotkey;\n  exports.isCodeHotkey = isCodeHotkey;\n  exports.isKeyHotkey = isKeyHotkey;\n  exports.parseHotkey = parseHotkey;\n  exports.compareHotkey = compareHotkey;\n  exports.toKeyCode = toKeyCode;\n  exports.toKeyName = toKeyName;\n});\nvar isHotkey = unwrapExports(lib);\nlib.isHotkey;\nlib.isCodeHotkey;\nlib.isKeyHotkey;\nlib.parseHotkey;\nlib.compareHotkey;\nlib.toKeyCode;\nlib.toKeyName;\n/**\r\n * Wrap selected nodes with a link and collapse at the end.\r\n */\n\nconst wrapLink = (editor, {\n  at,\n  url\n}) => {\n  wrapNodes(editor, {\n    type: getPluginType(editor, ELEMENT_LINK),\n    url,\n    children: []\n  }, {\n    at,\n    split: true\n  });\n};\n/**\r\n * Unwrap link at a location (default: selection).\r\n * Then, the focus of the location is set to selection focus.\r\n * Then, wrap the link at the location.\r\n */\n\n\nconst upsertLinkAtSelection = (editor, {\n  url,\n  wrap\n}) => {\n  if (!editor.selection) return;\n  const type = getPluginType(editor, ELEMENT_LINK);\n\n  if (!wrap && isCollapsed(editor.selection)) {\n    return insertNodes(editor, {\n      type,\n      url,\n      children: [{\n        text: url\n      }]\n    });\n  } // if our cursor is inside an existing link, but don't have the text selected, select it now\n\n\n  if (wrap && isCollapsed(editor.selection)) {\n    const linkLeaf = Editor.leaf(editor, editor.selection);\n    const [, inlinePath] = linkLeaf;\n    Transforms.select(editor, inlinePath);\n  }\n\n  unwrapNodes(editor, {\n    at: editor.selection,\n    match: {\n      type\n    }\n  });\n  wrapLink(editor, {\n    at: editor.selection,\n    url\n  });\n  Transforms.collapse(editor, {\n    edge: 'end'\n  });\n};\n\nconst getAndUpsertLink = async (editor, getLinkUrl) => {\n  const type = getPluginType(editor, ELEMENT_LINK);\n  let prevUrl = '';\n  const linkNode = getAbove(editor, {\n    match: {\n      type\n    }\n  });\n\n  if (linkNode) {\n    prevUrl = linkNode[0].url;\n  }\n\n  let url;\n\n  if (getLinkUrl) {\n    url = await getLinkUrl(prevUrl);\n  } else {\n    url = window.prompt(`Enter the URL of the link:`, prevUrl);\n  }\n\n  if (!url) {\n    linkNode && editor.selection && unwrapNodes(editor, {\n      at: editor.selection,\n      match: {\n        type: getPluginType(editor, ELEMENT_LINK)\n      }\n    });\n    return;\n  } // If our cursor is in middle of a link, then we don't want to insert it inline\n\n\n  const shouldWrap = linkNode !== undefined && isCollapsed(editor.selection);\n  upsertLinkAtSelection(editor, {\n    url,\n    wrap: shouldWrap\n  });\n};\n\nconst onKeyDownLink = (editor, {\n  options: {\n    getLinkUrl,\n    hotkey\n  }\n}) => e => {\n  if (!hotkey) return;\n\n  if (isHotkey(hotkey, e)) {\n    e.preventDefault();\n    e.stopPropagation();\n    getAndUpsertLink(editor, getLinkUrl);\n  }\n};\n\nconst upsertLink = (editor, {\n  url,\n  at\n}) => {\n  unwrapNodes(editor, {\n    at,\n    match: {\n      type: getPluginType(editor, ELEMENT_LINK)\n    }\n  });\n  const newSelection = editor.selection;\n  wrapLink(editor, {\n    at: { ...at,\n      focus: newSelection.focus\n    },\n    url\n  });\n};\n\nconst upsertLinkIfValid = (editor, {\n  isUrl\n}) => {\n  const rangeFromBlockStart = getRangeFromBlockStart(editor);\n  const textFromBlockStart = getText(editor, rangeFromBlockStart);\n\n  if (rangeFromBlockStart && isUrl(textFromBlockStart)) {\n    upsertLink(editor, {\n      url: textFromBlockStart,\n      at: rangeFromBlockStart\n    });\n    return true;\n  }\n};\n/**\r\n * Insert space after a url to wrap a link.\r\n * Lookup from the block start to the cursor to check if there is an url.\r\n * If not found, lookup before the cursor for a space character to check the url.\r\n *\r\n * On insert data:\r\n * Paste a string inside a link element will edit its children text but not its url.\r\n *\r\n */\n\n\nconst withLink = (editor, {\n  type,\n  options: {\n    isUrl,\n    rangeBeforeOptions\n  }\n}) => {\n  const {\n    insertData,\n    insertText\n  } = editor;\n\n  editor.insertText = text => {\n    if (text === ' ' && isCollapsed(editor.selection)) {\n      const selection = editor.selection;\n\n      if (upsertLinkIfValid(editor, {\n        isUrl\n      })) {\n        Transforms.move(editor, {\n          unit: 'offset'\n        });\n        return insertText(text);\n      }\n\n      const beforeWordRange = getRangeBefore(editor, selection, rangeBeforeOptions);\n\n      if (beforeWordRange) {\n        const beforeWordText = getText(editor, beforeWordRange);\n\n        if (isUrl(beforeWordText)) {\n          upsertLink(editor, {\n            url: beforeWordText,\n            at: beforeWordRange\n          });\n          Transforms.move(editor, {\n            unit: 'offset'\n          });\n        }\n      }\n    }\n\n    insertText(text);\n  };\n\n  editor.insertData = data => {\n    const text = data.getData('text/plain');\n\n    if (text) {\n      if (isUrl(text)) {\n        return upsertLinkAtSelection(editor, {\n          url: text\n        });\n      }\n\n      if (someNode(editor, {\n        match: {\n          type\n        }\n      })) {\n        return insertText(text);\n      }\n    }\n\n    insertData(data);\n  }; // editor.insertBreak = () => {\n  //   if (upsertLinkIfValid(editor, { link, isUrl })) {\n  //     console.info('fix cursor');\n  //   }\n  //\n  //   insertBreak();\n  // };\n\n\n  editor = withRemoveEmptyNodes(editor, mockPlugin({\n    options: {\n      types: type\n    }\n  }));\n  return editor;\n};\n\nconst ELEMENT_LINK = 'a';\n/**\r\n * Enables support for hyperlinks.\r\n */\n\nconst createLinkPlugin = createPluginFactory({\n  key: ELEMENT_LINK,\n  isElement: true,\n  isInline: true,\n  props: ({\n    element\n  }) => ({\n    nodeProps: {\n      url: element === null || element === void 0 ? void 0 : element.url\n    }\n  }),\n  handlers: {\n    onKeyDown: onKeyDownLink\n  },\n  withOverrides: withLink,\n  options: {\n    isUrl: isUrl,\n    rangeBeforeOptions: {\n      matchString: ' ',\n      skipInvalid: true,\n      afterMatch: true\n    },\n    hotkey: 'mod+k'\n  },\n  then: (editor, {\n    type\n  }) => ({\n    deserializeHtml: {\n      getNode: el => ({\n        type,\n        url: el.getAttribute('href')\n      }),\n      validNodeName: 'A'\n    }\n  })\n});\nexport { ELEMENT_LINK, createLinkPlugin, getAndUpsertLink, onKeyDownLink, upsertLinkAtSelection, withLink, wrapLink };","map":{"version":3,"sources":["../../../../node_modules/is-hotkey/lib/index.js","../src/transforms/wrapLink.ts","../src/transforms/upsertLinkAtSelection.ts","../src/transforms/getAndUpsertLink.ts","../src/onKeyDownLink.ts","../src/withLink.ts","../src/createLinkPlugin.ts"],"names":["wrapLink","url","wrapNodes","type","getPluginType","children","split","upsertLinkAtSelection","wrap","editor","isCollapsed","insertNodes","text","linkLeaf","Editor","Transforms","unwrapNodes","at","match","edge","getAndUpsertLink","prevUrl","linkNode","getAbove","getLinkUrl","window","shouldWrap","onKeyDownLink","options","hotkey","e","isHotkey","upsertLink","newSelection","focus","upsertLinkIfValid","isUrl","rangeFromBlockStart","getRangeFromBlockStart","textFromBlockStart","getText","withLink","rangeBeforeOptions","insertText","selection","unit","beforeWordRange","getRangeBefore","beforeWordText","data","someNode","insertData","withRemoveEmptyNodes","mockPlugin","types","ELEMENT_LINK","createLinkPlugin","createPluginFactory","key","isElement","isInline","props","element","nodeProps","handlers","onKeyDown","withOverrides","matchString","skipInvalid","afterMatch","then","deserializeHtml","getNode","el","validNodeName"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * Constants.\n */\n\nvar IS_MAC = typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n\nvar MODIFIERS = {\n  alt: 'altKey',\n  control: 'ctrlKey',\n  meta: 'metaKey',\n  shift: 'shiftKey'\n};\n\nvar ALIASES = {\n  add: '+',\n  break: 'pause',\n  cmd: 'meta',\n  command: 'meta',\n  ctl: 'control',\n  ctrl: 'control',\n  del: 'delete',\n  down: 'arrowdown',\n  esc: 'escape',\n  ins: 'insert',\n  left: 'arrowleft',\n  mod: IS_MAC ? 'meta' : 'control',\n  opt: 'alt',\n  option: 'alt',\n  return: 'enter',\n  right: 'arrowright',\n  space: ' ',\n  spacebar: ' ',\n  up: 'arrowup',\n  win: 'meta',\n  windows: 'meta'\n};\n\nvar CODES = {\n  backspace: 8,\n  tab: 9,\n  enter: 13,\n  shift: 16,\n  control: 17,\n  alt: 18,\n  pause: 19,\n  capslock: 20,\n  escape: 27,\n  ' ': 32,\n  pageup: 33,\n  pagedown: 34,\n  end: 35,\n  home: 36,\n  arrowleft: 37,\n  arrowup: 38,\n  arrowright: 39,\n  arrowdown: 40,\n  insert: 45,\n  delete: 46,\n  meta: 91,\n  numlock: 144,\n  scrolllock: 145,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  '\\'': 222\n};\n\nfor (var f = 1; f < 20; f++) {\n  CODES['f' + f] = 111 + f;\n}\n\n/**\n * Is hotkey?\n */\n\nfunction isHotkey(hotkey, options, event) {\n  if (options && !('byKey' in options)) {\n    event = options;\n    options = null;\n  }\n\n  if (!Array.isArray(hotkey)) {\n    hotkey = [hotkey];\n  }\n\n  var array = hotkey.map(function (string) {\n    return parseHotkey(string, options);\n  });\n  var check = function check(e) {\n    return array.some(function (object) {\n      return compareHotkey(object, e);\n    });\n  };\n  var ret = event == null ? check : check(event);\n  return ret;\n}\n\nfunction isCodeHotkey(hotkey, event) {\n  return isHotkey(hotkey, event);\n}\n\nfunction isKeyHotkey(hotkey, event) {\n  return isHotkey(hotkey, { byKey: true }, event);\n}\n\n/**\n * Parse.\n */\n\nfunction parseHotkey(hotkey, options) {\n  var byKey = options && options.byKey;\n  var ret = {};\n\n  // Special case to handle the `+` key since we use it as a separator.\n  hotkey = hotkey.replace('++', '+add');\n  var values = hotkey.split('+');\n  var length = values.length;\n\n  // Ensure that all the modifiers are set to false unless the hotkey has them.\n\n  for (var k in MODIFIERS) {\n    ret[MODIFIERS[k]] = false;\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var value = _step.value;\n\n      var optional = value.endsWith('?') && value.length > 1;\n\n      if (optional) {\n        value = value.slice(0, -1);\n      }\n\n      var name = toKeyName(value);\n      var modifier = MODIFIERS[name];\n\n      if (length === 1 || !modifier) {\n        if (byKey) {\n          ret.key = name;\n        } else {\n          ret.which = toKeyCode(value);\n        }\n      }\n\n      if (modifier) {\n        ret[modifier] = optional ? null : true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Compare.\n */\n\nfunction compareHotkey(object, event) {\n  for (var key in object) {\n    var expected = object[key];\n    var actual = void 0;\n\n    if (expected == null) {\n      continue;\n    }\n\n    if (key === 'key' && event.key != null) {\n      actual = event.key.toLowerCase();\n    } else if (key === 'which') {\n      actual = expected === 91 && event.which === 93 ? 91 : event.which;\n    } else {\n      actual = event[key];\n    }\n\n    if (actual == null && expected === false) {\n      continue;\n    }\n\n    if (actual !== expected) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Utils.\n */\n\nfunction toKeyCode(name) {\n  name = toKeyName(name);\n  var code = CODES[name] || name.toUpperCase().charCodeAt(0);\n  return code;\n}\n\nfunction toKeyName(name) {\n  name = name.toLowerCase();\n  name = ALIASES[name] || name;\n  return name;\n}\n\n/**\n * Export.\n */\n\nexports.default = isHotkey;\nexports.isHotkey = isHotkey;\nexports.isCodeHotkey = isCodeHotkey;\nexports.isKeyHotkey = isKeyHotkey;\nexports.parseHotkey = parseHotkey;\nexports.compareHotkey = compareHotkey;\nexports.toKeyCode = toKeyCode;\nexports.toKeyName = toKeyName;","import { getPluginType, PlateEditor, wrapNodes } from '@udecode/plate-core';\nimport { Location } from 'slate';\nimport { ELEMENT_LINK } from '../createLinkPlugin';\n\n/**\n * Wrap selected nodes with a link and collapse at the end.\n */\nexport const wrapLink = <T = {}>(\n  editor: PlateEditor<T>,\n  { at, url }: { url: string; at?: Location }\n) => {\n  wrapNodes(\n    editor,\n    {\n      type: getPluginType(editor, ELEMENT_LINK),\n      url,\n      children: [],\n    },\n    { at, split: true }\n  );\n};\n","import {\n  getPluginType,\n  insertNodes,\n  isCollapsed,\n  PlateEditor,\n  TElement,\n  unwrapNodes,\n} from '@udecode/plate-core';\nimport { Editor, Transforms } from 'slate';\nimport { ELEMENT_LINK } from '../createLinkPlugin';\nimport { wrapLink } from './wrapLink';\n\n/**\n * Unwrap link at a location (default: selection).\n * Then, the focus of the location is set to selection focus.\n * Then, wrap the link at the location.\n */\nexport const upsertLinkAtSelection = <T = {}>(\n  editor: PlateEditor<T>,\n  {\n    url,\n    wrap,\n  }: {\n    url: string;\n    /**\n     * If true, wrap the link at the location (default: selection) even if the selection is collapsed.\n     */\n    wrap?: boolean;\n  }\n) => {\n  if (!editor.selection) return;\n\n  const type = getPluginType(editor, ELEMENT_LINK);\n\n  if (!wrap && isCollapsed(editor.selection)) {\n    return insertNodes<TElement>(editor, {\n      type,\n      url,\n      children: [{ text: url }],\n    });\n  }\n\n  // if our cursor is inside an existing link, but don't have the text selected, select it now\n  if (wrap && isCollapsed(editor.selection)) {\n    const linkLeaf = Editor.leaf(editor, editor.selection);\n    const [, inlinePath] = linkLeaf;\n    Transforms.select(editor, inlinePath);\n  }\n\n  unwrapNodes(editor, { at: editor.selection, match: { type } });\n\n  wrapLink(editor, { at: editor.selection, url });\n\n  Transforms.collapse(editor, { edge: 'end' });\n};\n","import {\n  getAbove,\n  getPluginType,\n  isCollapsed,\n  PlateEditor,\n  unwrapNodes,\n} from '@udecode/plate-core';\nimport { ELEMENT_LINK } from '../createLinkPlugin';\nimport { LinkPlugin } from '../types';\nimport { upsertLinkAtSelection } from './upsertLinkAtSelection';\n\nexport const getAndUpsertLink = async <T = {}>(\n  editor: PlateEditor<T>,\n  getLinkUrl?: LinkPlugin['getLinkUrl']\n) => {\n  const type = getPluginType(editor, ELEMENT_LINK);\n  let prevUrl = '';\n\n  const linkNode = getAbove(editor, {\n    match: { type },\n  });\n  if (linkNode) {\n    prevUrl = linkNode[0].url as string;\n  }\n\n  let url;\n  if (getLinkUrl) {\n    url = await getLinkUrl(prevUrl);\n  } else {\n    url = window.prompt(`Enter the URL of the link:`, prevUrl);\n  }\n\n  if (!url) {\n    linkNode &&\n      editor.selection &&\n      unwrapNodes(editor, {\n        at: editor.selection,\n        match: { type: getPluginType(editor, ELEMENT_LINK) },\n      });\n\n    return;\n  }\n\n  // If our cursor is in middle of a link, then we don't want to insert it inline\n  const shouldWrap: boolean =\n    linkNode !== undefined && isCollapsed(editor.selection);\n  upsertLinkAtSelection(editor, { url, wrap: shouldWrap });\n};\n","import { KeyboardHandler } from '@udecode/plate-core';\nimport isHotkey from 'is-hotkey';\nimport { getAndUpsertLink } from './transforms';\nimport { LinkPlugin } from './types';\n\nexport const onKeyDownLink: KeyboardHandler<{}, LinkPlugin> = (\n  editor,\n  { options: { getLinkUrl, hotkey } }\n) => (e) => {\n  if (!hotkey) return;\n\n  if (isHotkey(hotkey, e as any)) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    getAndUpsertLink(editor, getLinkUrl);\n  }\n};\n","import {\n  getPluginType,\n  getRangeBefore,\n  getRangeFromBlockStart,\n  getText,\n  isCollapsed,\n  mockPlugin,\n  PlateEditor,\n  someNode,\n  unwrapNodes,\n  WithOverride,\n} from '@udecode/plate-core';\nimport { withRemoveEmptyNodes } from '@udecode/plate-normalizers';\nimport { Range, Transforms } from 'slate';\nimport { upsertLinkAtSelection } from './transforms/upsertLinkAtSelection';\nimport { wrapLink } from './transforms/wrapLink';\nimport { ELEMENT_LINK } from './createLinkPlugin';\nimport { LinkPlugin } from './types';\n\nconst upsertLink = (\n  editor: PlateEditor,\n  {\n    url,\n    at,\n  }: {\n    url: string;\n    at: Range;\n  }\n) => {\n  unwrapNodes(editor, {\n    at,\n    match: { type: getPluginType(editor, ELEMENT_LINK) },\n  });\n\n  const newSelection = editor.selection as Range;\n\n  wrapLink(editor, {\n    at: {\n      ...at,\n      focus: newSelection.focus,\n    },\n    url,\n  });\n};\n\nconst upsertLinkIfValid = (editor: PlateEditor, { isUrl }: { isUrl: any }) => {\n  const rangeFromBlockStart = getRangeFromBlockStart(editor);\n  const textFromBlockStart = getText(editor, rangeFromBlockStart);\n\n  if (rangeFromBlockStart && isUrl(textFromBlockStart)) {\n    upsertLink(editor, { url: textFromBlockStart, at: rangeFromBlockStart });\n    return true;\n  }\n};\n\n/**\n * Insert space after a url to wrap a link.\n * Lookup from the block start to the cursor to check if there is an url.\n * If not found, lookup before the cursor for a space character to check the url.\n *\n * On insert data:\n * Paste a string inside a link element will edit its children text but not its url.\n *\n */\nexport const withLink: WithOverride<{}, LinkPlugin> = (\n  editor,\n  { type, options: { isUrl, rangeBeforeOptions } }\n) => {\n  const { insertData, insertText } = editor;\n\n  editor.insertText = (text) => {\n    if (text === ' ' && isCollapsed(editor.selection)) {\n      const selection = editor.selection as Range;\n\n      if (upsertLinkIfValid(editor, { isUrl })) {\n        Transforms.move(editor, { unit: 'offset' });\n        return insertText(text);\n      }\n\n      const beforeWordRange = getRangeBefore(\n        editor,\n        selection,\n        rangeBeforeOptions\n      );\n\n      if (beforeWordRange) {\n        const beforeWordText = getText(editor, beforeWordRange);\n\n        if (isUrl!(beforeWordText)) {\n          upsertLink(editor, { url: beforeWordText, at: beforeWordRange });\n          Transforms.move(editor, { unit: 'offset' });\n        }\n      }\n    }\n\n    insertText(text);\n  };\n\n  editor.insertData = (data: DataTransfer) => {\n    const text = data.getData('text/plain');\n\n    if (text) {\n      if (isUrl!(text)) {\n        return upsertLinkAtSelection(editor, { url: text });\n      }\n\n      if (someNode(editor, { match: { type } })) {\n        return insertText(text);\n      }\n    }\n\n    insertData(data);\n  };\n\n  // editor.insertBreak = () => {\n  //   if (upsertLinkIfValid(editor, { link, isUrl })) {\n  //     console.info('fix cursor');\n  //   }\n  //\n  //   insertBreak();\n  // };\n\n  editor = withRemoveEmptyNodes(\n    editor,\n    mockPlugin({\n      options: { types: type },\n    })\n  );\n\n  return editor;\n};\n","import {\n  createPluginFactory,\n  isUrl as isUrlProtocol,\n} from '@udecode/plate-core';\nimport { onKeyDownLink } from './onKeyDownLink';\nimport { LinkPlugin } from './types';\nimport { withLink } from './withLink';\n\nexport const ELEMENT_LINK = 'a';\n\n/**\n * Enables support for hyperlinks.\n */\nexport const createLinkPlugin = createPluginFactory<LinkPlugin>({\n  key: ELEMENT_LINK,\n  isElement: true,\n  isInline: true,\n  props: ({ element }) => ({ nodeProps: { url: element?.url } }),\n  handlers: {\n    onKeyDown: onKeyDownLink,\n  },\n  withOverrides: withLink,\n  options: {\n    isUrl: isUrlProtocol,\n    rangeBeforeOptions: {\n      matchString: ' ',\n      skipInvalid: true,\n      afterMatch: true,\n    },\n    hotkey: 'mod+k',\n  },\n  then: (editor, { type }) => ({\n    deserializeHtml: {\n      getNode: (el) => ({\n        type,\n        url: el.getAttribute('href'),\n      }),\n      validNodeName: 'A',\n    },\n  }),\n});\n"]},"metadata":{},"sourceType":"module"}