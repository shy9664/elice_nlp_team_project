{"ast":null,"code":"var _jsxFileName = \"/Users/hyun/Desktop/33333333/frontend/src/components/BasicEditor.jsx\";\nimport React from \"react\";\nimport { Plate, ELEMENT_PARAGRAPH, ELEMENT_H1, ELEMENT_H2, ELEMENT_H3, ELEMENT_H4, ELEMENT_H5, ELEMENT_H6 // MARK_CODE,\n, createParagraphPlugin, createBlockquotePlugin, createCodeBlockPlugin, createHeadingPlugin, createAlignPlugin, createBasicMarksPlugin, createFontColorPlugin, createFontBackgroundColorPlugin, createFontSizePlugin // createCodePlugin,\n, createPlugins, createPlateUI, HeadingToolbar } from \"@udecode/plate\";\nimport BasicEditorToolbar from \"./BasicEditorToolbar\";\nimport AlignToolbarButtons from \"./AlignToolbarButtons\";\nimport BasicMarkToolbarButtons from \"./BasicMarkToolbarButtons\";\nimport FontToolbarButtons from \"./FontToolbarButtons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst editableProps = {\n  placeholder: \"Type‚Ä¶\",\n  style: {\n    padding: \"15px\"\n  }\n};\n\nconst BasicEditor = ({\n  selectedDate\n}) => {\n  // // Not important, quick helper to create a block element with (marked) text\n  // const createElement = (text, { type = ELEMENT_PARAGRAPH, mark } = {}) => {\n  //     const leaf = { text };\n  //     if (mark) {\n  //         leaf[mark] = true;\n  //     }\n  //     return {\n  //         type,\n  //         children: [leaf],\n  //     };\n  // };\n  const initVal = () => {\n    const str = localStorage.getItem(selectedDate);\n    return JSON.parse(str);\n  }; // const initialValue = [\n  //     createElement(\"üß± Í∏∞Î≥∏ Plate ÏóêÎîîÌÑ∞ÏóêÏöî!\", { type: ELEMENT_H1 }),\n  //     createElement(\"üî• ÏÇ¨Ïö©ÌïòÍ∏∞ Ïñ¥Î†µÎã§Î©¥ Í∑∏ÎÉ• textField Ïç®ÎèÑ Îê©ÎãàÎã§\", {\n  //         type: ELEMENT_H2,\n  //     }),\n  //     createElement(\"Ïöî ÏïÑÎûòÎäî Î∏îÎ°ùÎì§ÏùÑ Ïó¨Îü¨Ï¢ÖÎ•ò Ïç®ÎÜìÏïòÏäµÎãàÎã§.\"),\n  //     createElement(\"Heading 1\", { type: ELEMENT_H1 }),\n  //     createElement(\"Heading 2\", { type: ELEMENT_H2 }),\n  //     createElement(\"Heading 3\", { type: ELEMENT_H3 }),\n  //     createElement(\"Heading 4\", { type: ELEMENT_H4 }),\n  //     createElement(\"Heading 5\", { type: ELEMENT_H5 }),\n  //     createElement(\"Heading 6\", { type: ELEMENT_H6 }),\n  //     createElement(\"Blockquote\", { type: ELEMENT_BLOCKQUOTE }),\n  // {\n  //     type: ELEMENT_CODE_BLOCK,\n  //     children: [\n  //         {\n  //             type: ELEMENT_CODE_LINE,\n  //             children: [\n  //                 {\n  //                     text: \"const a = 'Hello';\",\n  //                 },\n  //             ],\n  //         },\n  //         {\n  //             type: ELEMENT_CODE_LINE,\n  //             children: [\n  //                 {\n  //                     text: \"const b = 'World';\",\n  //                 },\n  //             ],\n  //         },\n  //     ],\n  // },\n  // createElement(\"üíÖ ÌëúÏãúÌïòÍ∏∞\", { type: ELEMENT_H1 }),\n  // createElement(\"üíß Í∏∞Î≥∏ ÎßàÌÇπ\", { type: ELEMENT_H2 }),\n  // createElement(\n  //     \"The basic marks consist of text formatting such as bold, italic, underline, strikethrough, subscript, superscript, and code.\"\n  // ),\n  // createElement(\n  //     \"You can customize the type, the component and the hotkey for each of these.\"\n  // ),\n  // createElement(\"This text is bold.\", { mark: MARK_BOLD }),\n  // createElement(\"This text is italic.\", { mark: MARK_ITALIC }),\n  // createElement(\"This text is underlined.\", {\n  //     mark: MARK_UNDERLINE,\n  // }),\n  // {\n  //     type: ELEMENT_PARAGRAPH,\n  //     children: [\n  //         {\n  //             text: \"This text is bold, italic and underlined.\",\n  //             [MARK_BOLD]: true,\n  //             [MARK_ITALIC]: true,\n  //             [MARK_UNDERLINE]: true,\n  //         },\n  //     ],\n  // },\n  // createElement(\"This is a strikethrough text.\", {\n  //     mark: MARK_STRIKETHROUGH,\n  // }),\n  // createElement(\"This is an inline code.\", { mark: MARK_CODE }),\n  // ];\n\n\n  const plugins = createPlugins([// elements\n  createParagraphPlugin(), // paragraph element\n  createBlockquotePlugin(), // blockquote element\n  createCodeBlockPlugin(), // code block element\n  createHeadingPlugin(), // heading elements\n  // marks\n  // createCodePlugin(), // code mark\n  createAlignPlugin({\n    inject: {\n      props: {\n        validTypes: [ELEMENT_PARAGRAPH, ELEMENT_H1, ELEMENT_H2, ELEMENT_H3, ELEMENT_H4, ELEMENT_H5, ELEMENT_H6]\n      }\n    }\n  }), createBasicMarksPlugin(), // ÏßÑÌïòÍ≤å Îì±Îì±\n  createFontColorPlugin(), createFontBackgroundColorPlugin()], {\n    components: createPlateUI()\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Plate, {\n      id: \"1\",\n      editableProps: editableProps,\n      initialValue: initVal(),\n      plugins: plugins,\n      children: /*#__PURE__*/_jsxDEV(HeadingToolbar, {\n        styles: {\n          root: {\n            position: \"sticky\",\n            backgroundColor: \"#fafafa\",\n            zIndex: 4,\n            width: \"100%\",\n            paddingLeft: \"0\",\n            paddingRight: \"0\",\n            marginLeft: \"0\"\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(BasicEditorToolbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FontToolbarButtons, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AlignToolbarButtons, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(BasicMarkToolbarButtons, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = BasicEditor;\nexport default BasicEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicEditor\");","map":{"version":3,"sources":["/Users/hyun/Desktop/33333333/frontend/src/components/BasicEditor.jsx"],"names":["React","Plate","ELEMENT_PARAGRAPH","ELEMENT_H1","ELEMENT_H2","ELEMENT_H3","ELEMENT_H4","ELEMENT_H5","ELEMENT_H6","createParagraphPlugin","createBlockquotePlugin","createCodeBlockPlugin","createHeadingPlugin","createAlignPlugin","createBasicMarksPlugin","createFontColorPlugin","createFontBackgroundColorPlugin","createFontSizePlugin","createPlugins","createPlateUI","HeadingToolbar","BasicEditorToolbar","AlignToolbarButtons","BasicMarkToolbarButtons","FontToolbarButtons","editableProps","placeholder","style","padding","BasicEditor","selectedDate","initVal","str","localStorage","getItem","JSON","parse","plugins","inject","props","validTypes","components","root","position","backgroundColor","zIndex","width","paddingLeft","paddingRight","marginLeft"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n    Plate,\n    ELEMENT_PARAGRAPH,\n    ELEMENT_H1,\n    ELEMENT_H2,\n    ELEMENT_H3,\n    ELEMENT_H4,\n    ELEMENT_H5,\n    ELEMENT_H6,\n    // MARK_CODE,\n    createParagraphPlugin,\n    createBlockquotePlugin,\n    createCodeBlockPlugin,\n    createHeadingPlugin,\n    createAlignPlugin,\n    createBasicMarksPlugin,\n    createFontColorPlugin,\n    createFontBackgroundColorPlugin,\n    createFontSizePlugin,\n    // createCodePlugin,\n    createPlugins,\n    createPlateUI,\n    HeadingToolbar,\n} from \"@udecode/plate\";\nimport BasicEditorToolbar from \"./BasicEditorToolbar\";\nimport AlignToolbarButtons from \"./AlignToolbarButtons\";\nimport BasicMarkToolbarButtons from \"./BasicMarkToolbarButtons\";\nimport FontToolbarButtons from \"./FontToolbarButtons\";\n\nconst editableProps = {\n    placeholder: \"Type‚Ä¶\",\n    style: {\n        padding: \"15px\",\n    },\n};\n\nconst BasicEditor = ({ selectedDate }) => {\n    // // Not important, quick helper to create a block element with (marked) text\n    // const createElement = (text, { type = ELEMENT_PARAGRAPH, mark } = {}) => {\n    //     const leaf = { text };\n    //     if (mark) {\n    //         leaf[mark] = true;\n    //     }\n\n    //     return {\n    //         type,\n    //         children: [leaf],\n    //     };\n    // };\n\n    const initVal = () => {\n        const str = localStorage.getItem(selectedDate);\n        return JSON.parse(str);\n    };\n\n    // const initialValue = [\n    //     createElement(\"üß± Í∏∞Î≥∏ Plate ÏóêÎîîÌÑ∞ÏóêÏöî!\", { type: ELEMENT_H1 }),\n    //     createElement(\"üî• ÏÇ¨Ïö©ÌïòÍ∏∞ Ïñ¥Î†µÎã§Î©¥ Í∑∏ÎÉ• textField Ïç®ÎèÑ Îê©ÎãàÎã§\", {\n    //         type: ELEMENT_H2,\n    //     }),\n    //     createElement(\"Ïöî ÏïÑÎûòÎäî Î∏îÎ°ùÎì§ÏùÑ Ïó¨Îü¨Ï¢ÖÎ•ò Ïç®ÎÜìÏïòÏäµÎãàÎã§.\"),\n    //     createElement(\"Heading 1\", { type: ELEMENT_H1 }),\n    //     createElement(\"Heading 2\", { type: ELEMENT_H2 }),\n    //     createElement(\"Heading 3\", { type: ELEMENT_H3 }),\n    //     createElement(\"Heading 4\", { type: ELEMENT_H4 }),\n    //     createElement(\"Heading 5\", { type: ELEMENT_H5 }),\n    //     createElement(\"Heading 6\", { type: ELEMENT_H6 }),\n    //     createElement(\"Blockquote\", { type: ELEMENT_BLOCKQUOTE }),\n    // {\n    //     type: ELEMENT_CODE_BLOCK,\n    //     children: [\n    //         {\n    //             type: ELEMENT_CODE_LINE,\n    //             children: [\n    //                 {\n    //                     text: \"const a = 'Hello';\",\n    //                 },\n    //             ],\n    //         },\n    //         {\n    //             type: ELEMENT_CODE_LINE,\n    //             children: [\n    //                 {\n    //                     text: \"const b = 'World';\",\n    //                 },\n    //             ],\n    //         },\n    //     ],\n    // },\n    // createElement(\"üíÖ ÌëúÏãúÌïòÍ∏∞\", { type: ELEMENT_H1 }),\n    // createElement(\"üíß Í∏∞Î≥∏ ÎßàÌÇπ\", { type: ELEMENT_H2 }),\n    // createElement(\n    //     \"The basic marks consist of text formatting such as bold, italic, underline, strikethrough, subscript, superscript, and code.\"\n    // ),\n    // createElement(\n    //     \"You can customize the type, the component and the hotkey for each of these.\"\n    // ),\n    // createElement(\"This text is bold.\", { mark: MARK_BOLD }),\n    // createElement(\"This text is italic.\", { mark: MARK_ITALIC }),\n    // createElement(\"This text is underlined.\", {\n    //     mark: MARK_UNDERLINE,\n    // }),\n    // {\n    //     type: ELEMENT_PARAGRAPH,\n    //     children: [\n    //         {\n    //             text: \"This text is bold, italic and underlined.\",\n    //             [MARK_BOLD]: true,\n    //             [MARK_ITALIC]: true,\n    //             [MARK_UNDERLINE]: true,\n    //         },\n    //     ],\n    // },\n    // createElement(\"This is a strikethrough text.\", {\n    //     mark: MARK_STRIKETHROUGH,\n    // }),\n    // createElement(\"This is an inline code.\", { mark: MARK_CODE }),\n    // ];\n\n    const plugins = createPlugins(\n        [\n            // elements\n            createParagraphPlugin(), // paragraph element\n            createBlockquotePlugin(), // blockquote element\n            createCodeBlockPlugin(), // code block element\n            createHeadingPlugin(), // heading elements\n\n            // marks\n            // createCodePlugin(), // code mark\n            createAlignPlugin({\n                inject: {\n                    props: {\n                        validTypes: [\n                            ELEMENT_PARAGRAPH,\n                            ELEMENT_H1,\n                            ELEMENT_H2,\n                            ELEMENT_H3,\n                            ELEMENT_H4,\n                            ELEMENT_H5,\n                            ELEMENT_H6,\n                        ],\n                    },\n                },\n            }),\n            createBasicMarksPlugin(), // ÏßÑÌïòÍ≤å Îì±Îì±\n            createFontColorPlugin(),\n            createFontBackgroundColorPlugin(),\n        ],\n        {\n            components: createPlateUI(),\n        }\n    );\n\n    return (\n        <>\n            <Plate\n                id=\"1\"\n                editableProps={editableProps}\n                initialValue={initVal()}\n                plugins={plugins}\n            >\n                <HeadingToolbar\n                    styles={{\n                        root: {\n                            position: \"sticky\",\n                            backgroundColor: \"#fafafa\",\n                            zIndex: 4,\n                            width: \"100%\",\n                            paddingLeft: \"0\",\n                            paddingRight: \"0\",\n                            marginLeft: \"0\",\n                        },\n                    }}\n                >\n                    <BasicEditorToolbar />\n                    <FontToolbarButtons />\n                    <AlignToolbarButtons />\n                    <BasicMarkToolbarButtons />\n                </HeadingToolbar>\n            </Plate>\n        </>\n    );\n};\n\nexport default BasicEditor;\n"]},"metadata":{},"sourceType":"module"}