{"ast":null,"code":"import { createStyles } from '@udecode/plate-styled-components';\nimport _styled, { css } from 'styled-components';\nimport React, { forwardRef } from 'react';\nimport { useEditorRef, findNodePath } from '@udecode/plate-core';\nimport { Transforms } from 'slate';\n\nconst getButtonStyles = props => {\n  const {\n    px,\n    py,\n    size\n  } = props;\n  return createStyles({\n    prefixClassNames: 'Button',\n    ...props\n  }, {\n    root: [{\n      \"position\": \"relative\",\n      \"display\": \"inline-flex\",\n      \"justifyContent\": \"center\",\n      \"alignItems\": \"center\",\n      \"textAlign\": \"center\",\n      \"maxWidth\": \"100%\",\n      \"padding\": \"0px\"\n    }, {\n      \"borderWidth\": \"0px\",\n      \"fontWeight\": \"500\",\n      \"cursor\": \"pointer\"\n    }, {\n      \"--tw-bg-opacity\": \"1\",\n      \"backgroundColor\": \"rgba(255, 255, 255, var(--tw-bg-opacity))\",\n      \":hover\": {\n        \"--tw-bg-opacity\": \"1\",\n        \"backgroundColor\": \"rgba(243, 244, 246, var(--tw-bg-opacity))\"\n      },\n      \":active\": {\n        \"--tw-bg-opacity\": \"1\",\n        \"backgroundColor\": \"rgba(229, 231, 235, var(--tw-bg-opacity))\"\n      }\n    }, !size ? {\n      \"paddingLeft\": \"0.625rem\",\n      \"paddingRight\": \"0.625rem\",\n      \"paddingTop\": \"0.25rem\",\n      \"paddingBottom\": \"0.25rem\"\n    } : {\n      width: size,\n      height: size\n    }, px && {\n      paddingLeft: px,\n      paddingRight: px\n    }, py && {\n      paddingTop: py,\n      paddingBottom: py\n    }, css([\"font-family:inherit;font-size:14px;border-radius:3px;\"])]\n  });\n};\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nconst Button = ({\n  disabled,\n  ...props\n}) => {\n  const {\n    root\n  } = getButtonStyles(props);\n  return /*#__PURE__*/React.createElement(_StyledButton, _extends({\n    className: root.className,\n    \"aria-disabled\": disabled || undefined,\n    type: \"button\",\n    disabled: disabled\n  }, props, {\n    $_css: root.css\n  }));\n};\n\nvar _StyledButton = _styled(\"button\").withConfig({\n  displayName: \"Button___StyledButton\",\n  componentId: \"sc-1k4fo9r-0\"\n})([\"\", \"\"], p => p.$_css);\n\nconst Icon = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    children,\n    iconVerticalAlign,\n    size,\n    title,\n    ...otherProps\n  } = props;\n  const iconProps = {\n    height: props.height !== undefined ? props.height : size,\n    width: props.width !== undefined ? props.width : size,\n    'aria-hidden': title == null ? 'true' : undefined,\n    focusable: 'false',\n    role: title != null ? 'img' : undefined,\n    ...otherProps\n  };\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({}, iconProps, {\n    ref: ref\n  }), title && /*#__PURE__*/React.createElement(\"title\", {\n    key: \"icon-title\"\n  }, title), children);\n});\n\nconst StyledIcon = _styled(Icon).withConfig({\n  displayName: \"StyledIcon\",\n  componentId: \"sc-1lmwuuu-0\"\n})([\"display:inline-block;vertical-align:\", \";overflow:hidden;height:100%;\"], props => props.iconVerticalAlign);\n\nconst DeleteIcon = props => /*#__PURE__*/React.createElement(StyledIcon, _extends({\n  viewBox: \"0 0 24 24\",\n  fill: \"currentColor\"\n}, props), /*#__PURE__*/React.createElement(\"title\", null, \"Delete icon\"), /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}));\n\nconst RemoveNodeButton = ({\n  element,\n  ...props\n}) => {\n  const editor = useEditorRef();\n  return /*#__PURE__*/React.createElement(Button, _extends({\n    size: 24,\n    py: 4,\n    onClick: () => {\n      const path = findNodePath(editor, element);\n      Transforms.removeNodes(editor, {\n        at: path\n      });\n    }\n  }, props), /*#__PURE__*/React.createElement(DeleteIcon, null));\n};\n\nconst ChevronDownIcon = props => /*#__PURE__*/React.createElement(_StyledStyledIcon, _extends({\n  viewBox: \"0 0 24 24\",\n  focusable: \"false\",\n  \"aria-hidden\": \"true\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}));\n\nvar _StyledStyledIcon = _styled(StyledIcon).withConfig({\n  displayName: \"ChevronDownIcon___StyledStyledIcon\",\n  componentId: \"sc-1mognml-0\"\n})({\n  \"display\": \"inline\",\n  \"textAlign\": \"center\",\n  \"userSelect\": \"none\",\n  \"overflow\": \"hidden\",\n  \"pointerEvents\": \"none\",\n  \"maxWidth\": \"100%\",\n  \"maxHeight\": \"100%\",\n  \"height\": \"100%\",\n  \"verticalAlign\": \"middle\"\n});\n\nexport { Button, ChevronDownIcon, DeleteIcon, RemoveNodeButton, StyledIcon, getButtonStyles };","map":{"version":3,"sources":["../src/Button/Button.styles.ts","../src/Button/Button.tsx","../src/Icon/StyledIcon.tsx","../src/Icon/DeleteIcon.tsx","../src/Button/RemoveNodeButton.tsx","../src/Icon/ChevronDownIcon.tsx"],"names":["getButtonStyles","props","size","createStyles","prefixClassNames","root","width","height","px","paddingLeft","paddingRight","py","paddingTop","paddingBottom","css","Button","disabled","Icon","forwardRef","otherProps","iconProps","title","focusable","role","ref","StyledIcon","styled","DeleteIcon","RemoveNodeButton","editor","useEditorRef","path","findNodePath","Transforms","at","ChevronDownIcon"],"mappings":"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","sourcesContent":["import { createStyles } from '@udecode/plate-styled-components';\nimport { css } from 'styled-components';\nimport tw from 'twin.macro';\nimport { ButtonStyleProps } from './Button.types';\n\nexport const getButtonStyles = (props: ButtonStyleProps) => {\n  const { px, py, size } = props;\n\n  return createStyles(\n    { prefixClassNames: 'Button', ...props },\n    {\n      root: [\n        tw`relative inline-flex justify-center items-center text-center max-w-full p-0`,\n        tw`border-0 font-medium cursor-pointer`,\n        tw`bg-white hover:bg-gray-100 active:bg-gray-200`,\n        !size\n          ? tw`px-2.5 py-1`\n          : {\n              width: size,\n              height: size,\n            },\n        px && {\n          paddingLeft: px,\n          paddingRight: px,\n        },\n        py && {\n          paddingTop: py,\n          paddingBottom: py,\n        },\n        css`\n          font-family: inherit;\n          font-size: 14px;\n          border-radius: 3px;\n        `,\n      ],\n    }\n  );\n};\n","/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport { getButtonStyles } from './Button.styles';\nimport { ButtonProps } from './Button.types';\n\nexport const Button = ({ disabled, ...props }: ButtonProps) => {\n  const { root } = getButtonStyles(props);\n\n  return (\n    <button\n      css={root.css}\n      className={root.className}\n      aria-disabled={disabled || undefined}\n      type=\"button\"\n      disabled={disabled}\n      {...props}\n    />\n  );\n};\n","import React, { forwardRef, PropsWithRef, SVGProps } from 'react';\nimport styled from 'styled-components';\n\nexport interface StyledIconProps extends PropsWithRef<SVGProps<SVGSVGElement>> {\n  size?: number | string;\n  title?: string | null;\n  iconVerticalAlign?: string;\n}\n\nconst Icon = forwardRef((props: StyledIconProps, ref: any) => {\n  const { children, iconVerticalAlign, size, title, ...otherProps } = props;\n\n  const iconProps: SVGProps<SVGSVGElement> = {\n    height: props.height !== undefined ? props.height : size,\n    width: props.width !== undefined ? props.width : size,\n    'aria-hidden': title == null ? 'true' : undefined,\n    focusable: 'false',\n    role: title != null ? 'img' : undefined,\n    ...otherProps,\n  };\n\n  return (\n    <svg {...iconProps} ref={ref}>\n      {title && <title key=\"icon-title\">{title}</title>}\n      {children}\n    </svg>\n  );\n});\n\nexport const StyledIcon = styled(Icon)`\n  display: inline-block;\n  vertical-align: ${(props) => props.iconVerticalAlign};\n  overflow: hidden;\n  height: 100%;\n`;\n","import React from 'react';\nimport { StyledIcon, StyledIconProps } from './StyledIcon';\n\nexport const DeleteIcon = (props: StyledIconProps) => (\n  <StyledIcon viewBox=\"0 0 24 24\" fill=\"currentColor\" {...props}>\n    <title>Delete icon</title>\n    <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n    <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n  </StyledIcon>\n);\n","import React from 'react';\nimport { findNodePath, TElement, useEditorRef } from '@udecode/plate-core';\nimport { Transforms } from 'slate';\nimport { DeleteIcon } from '../Icon/DeleteIcon';\nimport { Button } from './Button';\nimport { ButtonProps } from './Button.types';\n\nexport const RemoveNodeButton = ({\n  element,\n  ...props\n}: ButtonProps & { element: TElement }) => {\n  const editor = useEditorRef();\n\n  return (\n    <Button\n      size={24}\n      py={4}\n      onClick={() => {\n        const path = findNodePath(editor, element);\n        Transforms.removeNodes(editor, { at: path });\n      }}\n      {...props}\n    >\n      <DeleteIcon />\n    </Button>\n  );\n};\n","import React from 'react';\nimport { StyledIcon, StyledIconProps } from './StyledIcon';\n\nexport const ChevronDownIcon = (props: StyledIconProps) => (\n  <StyledIcon\n    viewBox=\"0 0 24 24\"\n    focusable=\"false\"\n    aria-hidden=\"true\"\n    tw=\"inline text-center select-none overflow-hidden pointer-events-none max-w-full max-h-full h-full align-middle\"\n    {...props}\n  >\n    <path\n      fill=\"currentColor\"\n      d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n    />\n  </StyledIcon>\n);\n"]},"metadata":{},"sourceType":"module"}