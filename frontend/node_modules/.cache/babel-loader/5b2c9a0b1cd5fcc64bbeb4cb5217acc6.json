{"ast":null,"code":"import { createPluginFactory, onKeyDownToggleElement } from '@udecode/plate-core';\nconst ELEMENT_H1 = 'h1';\nconst ELEMENT_H2 = 'h2';\nconst ELEMENT_H3 = 'h3';\nconst ELEMENT_H4 = 'h4';\nconst ELEMENT_H5 = 'h5';\nconst ELEMENT_H6 = 'h6';\nconst KEYS_HEADING = [ELEMENT_H1, ELEMENT_H2, ELEMENT_H3, ELEMENT_H4, ELEMENT_H5, ELEMENT_H6];\n/**\r\n * Enables support for headings with configurable levels\r\n * (from 1 to 6).\r\n */\n\nconst createHeadingPlugin = createPluginFactory({\n  key: 'heading',\n  options: {\n    levels: 6\n  },\n  then: (editor, {\n    options: {\n      levels\n    } = {}\n  }) => {\n    const plugins = [];\n\n    for (let level = 1; level <= levels; level++) {\n      const key = KEYS_HEADING[level - 1];\n      const plugin = {\n        key,\n        isElement: true,\n        deserializeHtml: {\n          validNodeName: `H${level}`\n        },\n        handlers: {\n          onKeyDown: onKeyDownToggleElement\n        },\n        options: {}\n      };\n\n      if (level < 4) {\n        plugin.options.hotkey = [`mod+opt+${level}`, `mod+shift+${level}`];\n      }\n\n      plugins.push(plugin);\n    }\n\n    return {\n      plugins\n    };\n  }\n});\nexport { ELEMENT_H1, ELEMENT_H2, ELEMENT_H3, ELEMENT_H4, ELEMENT_H5, ELEMENT_H6, KEYS_HEADING, createHeadingPlugin };","map":{"version":3,"sources":["../src/constants.ts","../src/createHeadingPlugin.ts"],"names":["ELEMENT_H1","ELEMENT_H2","ELEMENT_H3","ELEMENT_H4","ELEMENT_H5","ELEMENT_H6","KEYS_HEADING","createHeadingPlugin","createPluginFactory","key","options","levels","then","plugins","level","plugin","isElement","deserializeHtml","validNodeName","handlers","onKeyDown","onKeyDownToggleElement"],"mappings":";MAAaA,UAAU,GAAG,I;MACbC,UAAU,GAAG,I;MACbC,UAAU,GAAG,I;MACbC,UAAU,GAAG,I;MACbC,UAAU,GAAG,I;MACbC,UAAU,GAAG,I;MAEbC,YAAY,GAAG,CAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,C;ACC5B;AACA;AACA;AACA;;MACaC,mBAAmB,GAAGC,mBAAmB,CAAiB;AACrEC,EAAAA,GAAG,EADkE,SAAA;AAErEC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE;AADD,GAF4D;AAKrEC,EAAAA,IAAI,EAAE,CAAA,MAAA,EAAS;AAAEF,IAAAA,OAAO,EAAE;AAAEC,MAAAA;AAAF,QAAa;AAAxB,GAAT,KAA0C;AAC9C,UAAME,OAAyC,GAA/C,EAAA;;AAEA,SAAK,IAAIC,KAAK,GAAd,CAAA,EAAoBA,KAAK,IAAzB,MAAA,EAAsCA,KAAtC,EAAA,EAA+C;AAC7C,YAAML,GAAG,GAAGH,YAAY,CAACQ,KAAK,GAA9B,CAAwB,CAAxB;AAEA,YAAMC,MAAsC,GAAG;AAAA,QAAA,GAAA;AAE7CC,QAAAA,SAAS,EAFoC,IAAA;AAG7CC,QAAAA,eAAe,EAAE;AACfC,UAAAA,aAAa,EAAG,IAAGJ,KAAM;AADV,SAH4B;AAM7CK,QAAAA,QAAQ,EAAE;AACRC,UAAAA,SAAS,EAAEC;AADH,SANmC;AAS7CX,QAAAA,OAAO,EAAE;AAToC,OAA/C;;AAYA,UAAII,KAAK,GAAT,CAAA,EAAe;AACbC,QAAAA,MAAM,CAANA,OAAAA,CAAAA,MAAAA,GAAyB,CAAE,WAAUD,KAAZ,EAAA,EAAsB,aAAYA,KAA3DC,EAAyB,CAAzBA;AACD;;AAEDF,MAAAA,OAAO,CAAPA,IAAAA,CAAAA,MAAAA;AACD;;AAED,WAAO;AACLA,MAAAA;AADK,KAAP;AAGD;AAjCoE,CAAjB,C","sourcesContent":["export const ELEMENT_H1 = 'h1';\nexport const ELEMENT_H2 = 'h2';\nexport const ELEMENT_H3 = 'h3';\nexport const ELEMENT_H4 = 'h4';\nexport const ELEMENT_H5 = 'h5';\nexport const ELEMENT_H6 = 'h6';\n\nexport const KEYS_HEADING = [\n  ELEMENT_H1,\n  ELEMENT_H2,\n  ELEMENT_H3,\n  ELEMENT_H4,\n  ELEMENT_H5,\n  ELEMENT_H6,\n];\n","import {\n  createPluginFactory,\n  onKeyDownToggleElement,\n  PlatePlugin,\n} from '@udecode/plate-core';\nimport { KEYS_HEADING } from './constants';\nimport { HeadingPlugin, HeadingsPlugin } from './types';\n\n/**\n * Enables support for headings with configurable levels\n * (from 1 to 6).\n */\nexport const createHeadingPlugin = createPluginFactory<HeadingsPlugin>({\n  key: 'heading',\n  options: {\n    levels: 6,\n  },\n  then: (editor, { options: { levels } = {} }) => {\n    const plugins: PlatePlugin<{}, HeadingPlugin>[] = [];\n\n    for (let level = 1; level <= levels!; level++) {\n      const key = KEYS_HEADING[level - 1];\n\n      const plugin: PlatePlugin<{}, HeadingPlugin> = {\n        key,\n        isElement: true,\n        deserializeHtml: {\n          validNodeName: `H${level}`,\n        },\n        handlers: {\n          onKeyDown: onKeyDownToggleElement,\n        },\n        options: {},\n      };\n\n      if (level < 4) {\n        plugin.options!.hotkey = [`mod+opt+${level}`, `mod+shift+${level}`];\n      }\n\n      plugins.push(plugin);\n    }\n\n    return {\n      plugins,\n    };\n  },\n});\n"]},"metadata":{},"sourceType":"module"}