{"ast":null,"code":"import { ReactEditor } from 'slate-react';\nimport { useCallback, useEffect } from 'react';\nimport { usePopper } from 'react-popper';\n/**\n * Get bounding client rect by slate range\n */\n\nconst getRangeBoundingClientRect = (editor, at) => {\n  if (!at) return;\n\n  try {\n    const domRange = ReactEditor.toDOMRange(editor, at);\n    return domRange.getBoundingClientRect();\n  } catch (err) {}\n};\n/**\n * Get bounding client rect of the window selection\n */\n\n\nconst getSelectionBoundingClientRect = () => {\n  const domSelection = window.getSelection();\n  if (!domSelection || domSelection.rangeCount < 1) return;\n  const domRange = domSelection.getRangeAt(0);\n  return domRange.getBoundingClientRect();\n};\n\nconst virtualReference = {\n  getBoundingClientRect() {\n    return {\n      top: -9999,\n      left: -9999,\n      bottom: 9999,\n      right: 9999,\n      width: 90,\n      height: 10,\n      x: 0,\n      y: 0,\n      toJSON: () => null\n    };\n  }\n\n};\n/**\n * TODO: duplicate\n */\n\nconst usePopperPosition = ({\n  popperElement,\n  popperContainer = document,\n  popperOptions = {},\n  modifiers = [],\n  offset = [0, 0],\n  placement = 'auto',\n  isHidden = false,\n  getBoundingClientRect = getSelectionBoundingClientRect\n}) => {\n  const popperResult = usePopper(virtualReference, popperElement, {\n    placement,\n    modifiers: [// default modifiers to position the popper correctly\n    {\n      name: 'preventOverflow',\n      enabled: true,\n      options: {\n        boundary: popperContainer\n      }\n    }, {\n      name: 'flip',\n      enabled: true,\n      options: {\n        padding: 8\n      }\n    }, {\n      name: 'eventListeners',\n      enabled: true,\n      options: {\n        scroll: !isHidden,\n        resize: true\n      }\n    }, {\n      name: 'offset',\n      options: {\n        offset\n      }\n    }, {\n      name: 'computeStyles',\n      options: {\n        gpuAcceleration: false\n      }\n    }, // user modifiers to override the default\n    ...modifiers],\n    strategy: 'absolute',\n    ...popperOptions\n  });\n  const {\n    update,\n    state\n  } = popperResult;\n  const isReady = !isHidden && !!state;\n  const styles = isReady ? popperResult.styles : { ...popperResult.styles,\n    popper: { ...popperResult.styles.popper,\n      display: 'none'\n    }\n  };\n  const updatePosition = useCallback(() => {\n    if (isHidden) return;\n    if (!popperElement) return;\n    virtualReference.getBoundingClientRect = getBoundingClientRect;\n    update === null || update === void 0 ? void 0 : update();\n  }, [getBoundingClientRect, isHidden, popperElement, update]);\n  useEffect(() => {\n    updatePosition();\n  }, [updatePosition]);\n  useEffect(() => {\n    popperContainer === null || popperContainer === void 0 ? void 0 : popperContainer.addEventListener('scroll', updatePosition);\n    return () => popperContainer === null || popperContainer === void 0 ? void 0 : popperContainer.removeEventListener('scroll', updatePosition);\n  }, [updatePosition, popperContainer]);\n  return { ...popperResult,\n    update: updatePosition,\n    styles\n  };\n};\n\nexport { getRangeBoundingClientRect, getSelectionBoundingClientRect, usePopperPosition, virtualReference };","map":{"version":3,"sources":["../src/getRangeBoundingClientRect.ts","../src/getSelectionBoundingClientRect.ts","../src/usePopperPosition.ts"],"names":["getRangeBoundingClientRect","domRange","ReactEditor","getSelectionBoundingClientRect","domSelection","window","virtualReference","getBoundingClientRect","top","left","bottom","right","width","height","x","y","toJSON","usePopperPosition","popperContainer","popperOptions","modifiers","offset","placement","isHidden","popperResult","usePopper","name","enabled","options","boundary","padding","scroll","resize","gpuAcceleration","strategy","state","isReady","styles","popper","display","updatePosition","useCallback","update","useEffect"],"mappings":"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","sourcesContent":["import { Range } from 'slate';\nimport { ReactEditor } from 'slate-react';\n\n/**\n * Get bounding client rect by slate range\n */\nexport const getRangeBoundingClientRect = (\n  editor: ReactEditor,\n  at: Range | null\n) => {\n  if (!at) return;\n\n  try {\n    const domRange = ReactEditor.toDOMRange(editor, at);\n    return domRange.getBoundingClientRect();\n  } catch (err) {}\n};\n","/**\n * Get bounding client rect of the window selection\n */\nexport const getSelectionBoundingClientRect = () => {\n  const domSelection = window.getSelection();\n  if (!domSelection || domSelection.rangeCount < 1) return;\n\n  const domRange = domSelection.getRangeAt(0);\n\n  return domRange.getBoundingClientRect();\n};\n","import React, { useCallback, useEffect } from 'react';\nimport { usePopper } from 'react-popper';\nimport * as PopperJS from '@popperjs/core';\nimport { Modifier } from '@popperjs/core';\nimport { getSelectionBoundingClientRect } from './getSelectionBoundingClientRect';\n\nexport type UsePopperOptions = Omit<Partial<PopperJS.Options>, 'modifiers'> & {\n  createPopper?: typeof PopperJS.createPopper;\n  modifiers?: ReadonlyArray<Partial<Modifier<string, object>>>;\n};\n\nexport interface UsePopperReturnType {\n  styles: { [key: string]: React.CSSProperties };\n  attributes: { [key: string]: { [key: string]: string } | undefined };\n  state: PopperJS.State | null;\n  update: PopperJS.Instance['update'] | null;\n  forceUpdate: PopperJS.Instance['forceUpdate'] | null;\n}\n\nexport interface UsePopperPositionOptions {\n  popperElement: HTMLElement | null;\n\n  /**\n   * Container element of editor popper,\n   * if no scroll container provided, it will take document.documentElement as scrolling container\n   */\n  popperContainer?: Document | HTMLElement | null;\n  popperOptions?: Partial<UsePopperOptions>;\n  modifiers?: UsePopperOptions['modifiers'];\n  placement?: PopperJS.Placement;\n  isHidden?: boolean;\n  getBoundingClientRect?: any;\n  offset?: number[];\n}\n\nexport const virtualReference: PopperJS.VirtualElement = {\n  getBoundingClientRect() {\n    return {\n      top: -9999,\n      left: -9999,\n      bottom: 9999,\n      right: 9999,\n      width: 90,\n      height: 10,\n      x: 0,\n      y: 0,\n      toJSON: () => null,\n    };\n  },\n};\n\n/**\n * TODO: duplicate\n */\nexport const usePopperPosition = ({\n  popperElement,\n  popperContainer = document,\n  popperOptions = {},\n  modifiers = [],\n  offset = [0, 0],\n  placement = 'auto',\n  isHidden = false,\n  getBoundingClientRect = getSelectionBoundingClientRect,\n}: UsePopperPositionOptions): UsePopperReturnType => {\n  const popperResult = usePopper(virtualReference, popperElement, {\n    placement,\n    modifiers: [\n      // default modifiers to position the popper correctly\n      {\n        name: 'preventOverflow',\n        enabled: true,\n        options: { boundary: popperContainer },\n      },\n      {\n        name: 'flip',\n        enabled: true,\n        options: { padding: 8 },\n      },\n      {\n        name: 'eventListeners',\n        enabled: true,\n        options: { scroll: !isHidden, resize: true },\n      },\n      {\n        name: 'offset',\n        options: {\n          offset,\n        },\n      },\n      {\n        name: 'computeStyles',\n        options: {\n          gpuAcceleration: false,\n        },\n      },\n      // user modifiers to override the default\n      ...modifiers,\n    ],\n    strategy: 'absolute',\n    ...popperOptions,\n  });\n\n  const { update, state } = popperResult;\n  const isReady = !isHidden && !!state;\n\n  const styles = isReady\n    ? popperResult.styles\n    : {\n        ...popperResult.styles,\n        popper: { ...popperResult.styles.popper, display: 'none' },\n      };\n\n  const updatePosition = useCallback((): any => {\n    if (isHidden) return;\n    if (!popperElement) return;\n\n    virtualReference.getBoundingClientRect = getBoundingClientRect;\n    update?.();\n  }, [getBoundingClientRect, isHidden, popperElement, update]);\n\n  useEffect(() => {\n    updatePosition();\n  }, [updatePosition]);\n\n  useEffect(() => {\n    popperContainer?.addEventListener('scroll', updatePosition);\n    return () => popperContainer?.removeEventListener('scroll', updatePosition);\n  }, [updatePosition, popperContainer]);\n\n  return { ...popperResult, update: updatePosition, styles };\n};\n"]},"metadata":{},"sourceType":"module"}