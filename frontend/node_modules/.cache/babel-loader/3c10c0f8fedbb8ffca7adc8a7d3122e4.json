{"ast":null,"code":"var _jsxFileName = \"/Users/hyun/Desktop/33333333 2/frontend/src/components/DiaryWriteButtons.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport React from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { useNavigate } from \"react-router-dom\";\nimport { usePlateValue } from \"@udecode/plate-core\";\nimport Button from \"@mui/material/Button\";\nimport { dateAtom, isUpdateNow } from \"../recoils/diary\";\nimport { createArticle, updateArticle } from \"../apis/article\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DiaryWriteButtons = () => {\n  _s();\n\n  const editorValue = usePlateValue();\n  const navi = useNavigate();\n  const [date, setDate] = useRecoilState(dateAtom);\n  const [isUpdating, setIsUpdating] = useRecoilState(isUpdateNow);\n\n  const cancel = () => {\n    console.log(\"글쓰기 취소\");\n    navi(\"/\");\n  };\n\n  const submit = async () => {\n    console.log(\"글쓰기 저장\");\n    const contentString = JSON.stringify(editorValue);\n    const yearStr = date.getFullYear();\n    const monthNum = date.getMonth() + 1;\n    const dateNum = date.getDate();\n    const monthStr = monthNum < 10 ? `0${monthNum}` : monthNum;\n    const dateStr = dateNum < 10 ? `0${dateNum}` : dateNum;\n    const numDate = `${yearStr}-${monthStr}-${dateStr}`;\n    const otherNumDate = `${yearStr}${monthStr}${dateStr}`; // localStorage.setItem(\"diaryContent\", contentString);\n\n    localStorage.setItem(numDate, contentString);\n\n    try {\n      if (isUpdating) {\n        const response = await updateArticle(otherNumDate, contentString);\n      } else {\n        const response = await createArticle({\n          text: contentString,\n          date: Number(otherNumDate)\n        });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const forceToNext = async () => {\n    try {\n      await submit();\n    } catch (e) {} finally {\n      navi(\"/diary/done\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: cancel,\n      children: \"\\uCDE8\\uC18C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"secondary\",\n      variant: \"contained\",\n      onClick: forceToNext,\n      children: \"\\uAC15\\uC81C\\uB85C \\uC800\\uC7A5 \\uD6C4 \\uD654\\uBA74\\uC73C\\uB85C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: submit,\n      children: \"\\uC800\\uC7A5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DiaryWriteButtons, \"TY6jtHgqedHkGTrUxrd5lAlI5q8=\", false, function () {\n  return [usePlateValue, useNavigate, useRecoilState, useRecoilState];\n});\n\n_c = DiaryWriteButtons;\nexport default DiaryWriteButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"DiaryWriteButtons\");","map":{"version":3,"sources":["/Users/hyun/Desktop/33333333 2/frontend/src/components/DiaryWriteButtons.jsx"],"names":["React","useRecoilState","useNavigate","usePlateValue","Button","dateAtom","isUpdateNow","createArticle","updateArticle","DiaryWriteButtons","editorValue","navi","date","setDate","isUpdating","setIsUpdating","cancel","console","log","submit","contentString","JSON","stringify","yearStr","getFullYear","monthNum","getMonth","dateNum","getDate","monthStr","dateStr","numDate","otherNumDate","localStorage","setItem","response","text","Number","e","forceToNext"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,kBAAtC;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,iBAA7C;;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC5B,QAAMC,WAAW,GAAGP,aAAa,EAAjC;AACA,QAAMQ,IAAI,GAAGT,WAAW,EAAxB;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBZ,cAAc,CAACI,QAAD,CAAtC;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8Bd,cAAc,CAACK,WAAD,CAAlD;;AAEA,QAAMU,MAAM,GAAG,MAAM;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAP,IAAAA,IAAI,CAAC,GAAD,CAAJ;AACH,GAHD;;AAKA,QAAMQ,MAAM,GAAG,YAAY;AACvBF,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,UAAME,aAAa,GAAGC,IAAI,CAACC,SAAL,CAAeZ,WAAf,CAAtB;AACA,UAAMa,OAAO,GAAGX,IAAI,CAACY,WAAL,EAAhB;AACA,UAAMC,QAAQ,GAAGb,IAAI,CAACc,QAAL,KAAkB,CAAnC;AACA,UAAMC,OAAO,GAAGf,IAAI,CAACgB,OAAL,EAAhB;AACA,UAAMC,QAAQ,GAAGJ,QAAQ,GAAG,EAAX,GAAiB,IAAGA,QAAS,EAA7B,GAAiCA,QAAlD;AACA,UAAMK,OAAO,GAAGH,OAAO,GAAG,EAAV,GAAgB,IAAGA,OAAQ,EAA3B,GAA+BA,OAA/C;AACA,UAAMI,OAAO,GAAI,GAAER,OAAQ,IAAGM,QAAS,IAAGC,OAAQ,EAAlD;AACA,UAAME,YAAY,GAAI,GAAET,OAAQ,GAAEM,QAAS,GAAEC,OAAQ,EAArD,CATuB,CAWvB;;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqBH,OAArB,EAA8BX,aAA9B;;AAEA,QAAI;AACA,UAAIN,UAAJ,EAAgB;AACZ,cAAMqB,QAAQ,GAAG,MAAM3B,aAAa,CAChCwB,YADgC,EAEhCZ,aAFgC,CAApC;AAIH,OALD,MAKO;AACH,cAAMe,QAAQ,GAAG,MAAM5B,aAAa,CAAC;AACjC6B,UAAAA,IAAI,EAAEhB,aAD2B;AAEjCR,UAAAA,IAAI,EAAEyB,MAAM,CAACL,YAAD;AAFqB,SAAD,CAApC;AAIH;AACJ,KAZD,CAYE,OAAOM,CAAP,EAAU;AACRrB,MAAAA,OAAO,CAACC,GAAR,CAAYoB,CAAZ;AACH;AACJ,GA7BD;;AA+BA,QAAMC,WAAW,GAAG,YAAY;AAC5B,QAAI;AACA,YAAMpB,MAAM,EAAZ;AACH,KAFD,CAEE,OAAOmB,CAAP,EAAU,CACX,CAHD,SAGU;AACN3B,MAAAA,IAAI,CAAC,aAAD,CAAJ;AACH;AACJ,GAPD;;AASA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,OAAO,EAAEK,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,WAAd;AAA0B,MAAA,OAAO,EAAC,WAAlC;AAA8C,MAAA,OAAO,EAAEuB,WAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,OAAO,EAAEpB,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADJ;AAaH,CAhED;;GAAMV,iB;UACkBN,a,EACPD,W,EACWD,c,EACYA,c;;;KAJlCQ,iB;AAkEN,eAAeA,iBAAf","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { useNavigate } from \"react-router-dom\";\nimport { usePlateValue } from \"@udecode/plate-core\";\nimport Button from \"@mui/material/Button\";\nimport { dateAtom, isUpdateNow } from \"../recoils/diary\";\nimport { createArticle, updateArticle } from \"../apis/article\";\n\nconst DiaryWriteButtons = () => {\n    const editorValue = usePlateValue();\n    const navi = useNavigate();\n    const [date, setDate] = useRecoilState(dateAtom);\n    const [isUpdating, setIsUpdating] = useRecoilState(isUpdateNow);\n\n    const cancel = () => {\n        console.log(\"글쓰기 취소\");\n        navi(\"/\");\n    };\n\n    const submit = async () => {\n        console.log(\"글쓰기 저장\");\n        const contentString = JSON.stringify(editorValue);\n        const yearStr = date.getFullYear();\n        const monthNum = date.getMonth() + 1;\n        const dateNum = date.getDate();\n        const monthStr = monthNum < 10 ? `0${monthNum}` : monthNum;\n        const dateStr = dateNum < 10 ? `0${dateNum}` : dateNum;\n        const numDate = `${yearStr}-${monthStr}-${dateStr}`;\n        const otherNumDate = `${yearStr}${monthStr}${dateStr}`;\n\n        // localStorage.setItem(\"diaryContent\", contentString);\n        localStorage.setItem(numDate, contentString);\n\n        try {\n            if (isUpdating) {\n                const response = await updateArticle(\n                    otherNumDate,\n                    contentString\n                );\n            } else {\n                const response = await createArticle({\n                    text: contentString,\n                    date: Number(otherNumDate),\n                });\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    const forceToNext = async () => {\n        try {\n            await submit();\n        } catch (e) {\n        } finally {\n            navi(\"/diary/done\");\n        }\n    };\n\n    return (\n        <>\n            <Button variant=\"contained\" onClick={cancel}>\n                취소\n            </Button>\n            <Button color=\"secondary\" variant=\"contained\" onClick={forceToNext}>\n                강제로 저장 후 화면으로\n            </Button>\n            <Button variant=\"contained\" onClick={submit}>\n                저장\n            </Button>\n        </>\n    );\n};\n\nexport default DiaryWriteButtons;\n"]},"metadata":{},"sourceType":"module"}