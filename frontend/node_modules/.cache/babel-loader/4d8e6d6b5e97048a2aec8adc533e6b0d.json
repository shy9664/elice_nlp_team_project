{"ast":null,"code":"export var strictEquality = function strictEquality(a, b) {\n  return a === b;\n};\n/**\r\n * Determine if two cartesian coordinate offsets are equal\r\n * @param offsetA\r\n * @param offsetB\r\n */\n\nexport function areCoordsEqual(offsetA, offsetB) {\n  if (!offsetA && !offsetB) {\n    return true;\n  } else if (!offsetA || !offsetB) {\n    return false;\n  } else {\n    return offsetA.x === offsetB.x && offsetA.y === offsetB.y;\n  }\n}\n/**\r\n * Determines if two arrays of items are equal\r\n * @param a The first array of items\r\n * @param b The second array of items\r\n */\n\nexport function areArraysEqual(a, b) {\n  var isEqual = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : strictEquality;\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  for (var i = 0; i < a.length; ++i) {\n    if (!isEqual(a[i], b[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}","map":{"version":3,"sources":["C:/Users/ghdus/OneDrive/바탕 화면/team-project/nlp-project-team2/frontend/node_modules/dnd-core/dist/esm/utils/equality.js"],"names":["strictEquality","a","b","areCoordsEqual","offsetA","offsetB","x","y","areArraysEqual","isEqual","arguments","length","undefined","i"],"mappings":"AAAA,OAAO,IAAIA,cAAc,GAAG,SAASA,cAAT,CAAwBC,CAAxB,EAA2BC,CAA3B,EAA8B;AACxD,SAAOD,CAAC,KAAKC,CAAb;AACD,CAFM;AAGP;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,cAAT,CAAwBC,OAAxB,EAAiCC,OAAjC,EAA0C;AAC/C,MAAI,CAACD,OAAD,IAAY,CAACC,OAAjB,EAA0B;AACxB,WAAO,IAAP;AACD,GAFD,MAEO,IAAI,CAACD,OAAD,IAAY,CAACC,OAAjB,EAA0B;AAC/B,WAAO,KAAP;AACD,GAFM,MAEA;AACL,WAAOD,OAAO,CAACE,CAAR,KAAcD,OAAO,CAACC,CAAtB,IAA2BF,OAAO,CAACG,CAAR,KAAcF,OAAO,CAACE,CAAxD;AACD;AACF;AACD;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,cAAT,CAAwBP,CAAxB,EAA2BC,CAA3B,EAA8B;AACnC,MAAIO,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoEV,cAAlF;;AAEA,MAAIC,CAAC,CAACU,MAAF,KAAaT,CAAC,CAACS,MAAnB,EAA2B;AACzB,WAAO,KAAP;AACD;;AAED,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,CAAC,CAACU,MAAtB,EAA8B,EAAEE,CAAhC,EAAmC;AACjC,QAAI,CAACJ,OAAO,CAACR,CAAC,CAACY,CAAD,CAAF,EAAOX,CAAC,CAACW,CAAD,CAAR,CAAZ,EAA0B;AACxB,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD","sourcesContent":["export var strictEquality = function strictEquality(a, b) {\r\n  return a === b;\r\n};\r\n/**\r\n * Determine if two cartesian coordinate offsets are equal\r\n * @param offsetA\r\n * @param offsetB\r\n */\r\n\r\nexport function areCoordsEqual(offsetA, offsetB) {\r\n  if (!offsetA && !offsetB) {\r\n    return true;\r\n  } else if (!offsetA || !offsetB) {\r\n    return false;\r\n  } else {\r\n    return offsetA.x === offsetB.x && offsetA.y === offsetB.y;\r\n  }\r\n}\r\n/**\r\n * Determines if two arrays of items are equal\r\n * @param a The first array of items\r\n * @param b The second array of items\r\n */\r\n\r\nexport function areArraysEqual(a, b) {\r\n  var isEqual = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : strictEquality;\r\n\r\n  if (a.length !== b.length) {\r\n    return false;\r\n  }\r\n\r\n  for (var i = 0; i < a.length; ++i) {\r\n    if (!isEqual(a[i], b[i])) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}"]},"metadata":{},"sourceType":"module"}