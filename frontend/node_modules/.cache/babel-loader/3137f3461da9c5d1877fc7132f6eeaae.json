{"ast":null,"code":"'use strict';\n\nvar cheerio = require('./lib/cheerio');\n\nvar makeJuiceClient = require('./lib/inline');\n/**\r\n * Note that makeJuiceClient will take a base object (in this case a function) and enhance it\r\n * with a lot of useful properties and functions.\r\n *\r\n * This client adopts cheerio as a DOM parser and adds an \"inlineContent\" function that let\r\n * users to specify the CSS to be inlined instead of extracting it from the html.\r\n * \r\n * The weird \"makeJuiceClient\" behaviour is there in order to keep backward API compatibility.\r\n */\n\n\nvar juiceClient = makeJuiceClient(function (html, options) {\n  return cheerio(html, {\n    xmlMode: options && options.xmlMode\n  }, juiceDocument, [options]);\n});\n\nvar juiceDocument = function (html, options) {\n  return juiceClient.juiceDocument(html, options);\n};\n\njuiceClient.inlineContent = function (html, css, options) {\n  return cheerio(html, {\n    xmlMode: options && options.xmlMode\n  }, juiceClient.inlineDocument, [css, options]);\n};\n\nmodule.exports = juiceClient;","map":{"version":3,"sources":["C:/Users/ghdus/OneDrive/바탕 화면/team-project/nlp-project-team2/frontend/node_modules/juice/client.js"],"names":["cheerio","require","makeJuiceClient","juiceClient","html","options","xmlMode","juiceDocument","inlineContent","css","inlineDocument","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,eAAD,CAArB;;AACA,IAAIC,eAAe,GAAGD,OAAO,CAAC,cAAD,CAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIE,WAAW,GAAGD,eAAe,CAAC,UAASE,IAAT,EAAcC,OAAd,EAAuB;AACvD,SAAOL,OAAO,CAACI,IAAD,EAAO;AAAEE,IAAAA,OAAO,EAAED,OAAO,IAAIA,OAAO,CAACC;AAA9B,GAAP,EAA+CC,aAA/C,EAA8D,CAACF,OAAD,CAA9D,CAAd;AACD,CAFgC,CAAjC;;AAIA,IAAIE,aAAa,GAAG,UAASH,IAAT,EAAeC,OAAf,EAAwB;AAC1C,SAAOF,WAAW,CAACI,aAAZ,CAA0BH,IAA1B,EAAgCC,OAAhC,CAAP;AACD,CAFD;;AAIAF,WAAW,CAACK,aAAZ,GAA4B,UAASJ,IAAT,EAAeK,GAAf,EAAoBJ,OAApB,EAA6B;AACvD,SAAOL,OAAO,CAACI,IAAD,EAAO;AAAEE,IAAAA,OAAO,EAAED,OAAO,IAAIA,OAAO,CAACC;AAA9B,GAAP,EAA+CH,WAAW,CAACO,cAA3D,EAA2E,CAACD,GAAD,EAAMJ,OAAN,CAA3E,CAAd;AACD,CAFD;;AAIAM,MAAM,CAACC,OAAP,GAAiBT,WAAjB","sourcesContent":["'use strict';\r\n\r\nvar cheerio = require('./lib/cheerio');\r\nvar makeJuiceClient = require('./lib/inline');\r\n\r\n/**\r\n * Note that makeJuiceClient will take a base object (in this case a function) and enhance it\r\n * with a lot of useful properties and functions.\r\n *\r\n * This client adopts cheerio as a DOM parser and adds an \"inlineContent\" function that let\r\n * users to specify the CSS to be inlined instead of extracting it from the html.\r\n * \r\n * The weird \"makeJuiceClient\" behaviour is there in order to keep backward API compatibility.\r\n */\r\nvar juiceClient = makeJuiceClient(function(html,options) {\r\n  return cheerio(html, { xmlMode: options && options.xmlMode}, juiceDocument, [options]);\r\n});\r\n\r\nvar juiceDocument = function(html, options) {\r\n  return juiceClient.juiceDocument(html, options);\r\n}\r\n\r\njuiceClient.inlineContent = function(html, css, options) {\r\n  return cheerio(html, { xmlMode: options && options.xmlMode}, juiceClient.inlineDocument, [css, options]);\r\n};\r\n\r\nmodule.exports = juiceClient;\r\n"]},"metadata":{},"sourceType":"script"}