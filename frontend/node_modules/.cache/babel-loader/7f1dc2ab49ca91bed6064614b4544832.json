{"ast":null,"code":"'use strict';\n\nvar VMessage = require('vfile-message');\n\nvar VFile = require('./core.js');\n\nmodule.exports = VFile;\nVFile.prototype.message = message;\nVFile.prototype.info = info;\nVFile.prototype.fail = fail; // Create a message with `reason` at `position`.\n// When an error is passed in as `reason`, copies the stack.\n\nfunction message(reason, position, origin) {\n  var message = new VMessage(reason, position, origin);\n\n  if (this.path) {\n    message.name = this.path + ':' + message.name;\n    message.file = this.path;\n  }\n\n  message.fatal = false;\n  this.messages.push(message);\n  return message;\n} // Fail: creates a vmessage, associates it with the file, and throws it.\n\n\nfunction fail() {\n  var message = this.message.apply(this, arguments);\n  message.fatal = true;\n  throw message;\n} // Info: creates a vmessage, associates it with the file, and marks the fatality\n// as null.\n\n\nfunction info() {\n  var message = this.message.apply(this, arguments);\n  message.fatal = null;\n  return message;\n}","map":{"version":3,"sources":["C:/Users/ghdus/OneDrive/바탕 화면/team-project/nlp-project-team2/frontend/node_modules/vfile/lib/index.js"],"names":["VMessage","require","VFile","module","exports","prototype","message","info","fail","reason","position","origin","path","name","file","fatal","messages","push","apply","arguments"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,eAAD,CAAtB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,WAAD,CAAnB;;AAEAE,MAAM,CAACC,OAAP,GAAiBF,KAAjB;AAEAA,KAAK,CAACG,SAAN,CAAgBC,OAAhB,GAA0BA,OAA1B;AACAJ,KAAK,CAACG,SAAN,CAAgBE,IAAhB,GAAuBA,IAAvB;AACAL,KAAK,CAACG,SAAN,CAAgBG,IAAhB,GAAuBA,IAAvB,C,CAEA;AACA;;AACA,SAASF,OAAT,CAAiBG,MAAjB,EAAyBC,QAAzB,EAAmCC,MAAnC,EAA2C;AACzC,MAAIL,OAAO,GAAG,IAAIN,QAAJ,CAAaS,MAAb,EAAqBC,QAArB,EAA+BC,MAA/B,CAAd;;AAEA,MAAI,KAAKC,IAAT,EAAe;AACbN,IAAAA,OAAO,CAACO,IAAR,GAAe,KAAKD,IAAL,GAAY,GAAZ,GAAkBN,OAAO,CAACO,IAAzC;AACAP,IAAAA,OAAO,CAACQ,IAAR,GAAe,KAAKF,IAApB;AACD;;AAEDN,EAAAA,OAAO,CAACS,KAAR,GAAgB,KAAhB;AAEA,OAAKC,QAAL,CAAcC,IAAd,CAAmBX,OAAnB;AAEA,SAAOA,OAAP;AACD,C,CAED;;;AACA,SAASE,IAAT,GAAgB;AACd,MAAIF,OAAO,GAAG,KAAKA,OAAL,CAAaY,KAAb,CAAmB,IAAnB,EAAyBC,SAAzB,CAAd;AAEAb,EAAAA,OAAO,CAACS,KAAR,GAAgB,IAAhB;AAEA,QAAMT,OAAN;AACD,C,CAED;AACA;;;AACA,SAASC,IAAT,GAAgB;AACd,MAAID,OAAO,GAAG,KAAKA,OAAL,CAAaY,KAAb,CAAmB,IAAnB,EAAyBC,SAAzB,CAAd;AAEAb,EAAAA,OAAO,CAACS,KAAR,GAAgB,IAAhB;AAEA,SAAOT,OAAP;AACD","sourcesContent":["'use strict'\r\n\r\nvar VMessage = require('vfile-message')\r\nvar VFile = require('./core.js')\r\n\r\nmodule.exports = VFile\r\n\r\nVFile.prototype.message = message\r\nVFile.prototype.info = info\r\nVFile.prototype.fail = fail\r\n\r\n// Create a message with `reason` at `position`.\r\n// When an error is passed in as `reason`, copies the stack.\r\nfunction message(reason, position, origin) {\r\n  var message = new VMessage(reason, position, origin)\r\n\r\n  if (this.path) {\r\n    message.name = this.path + ':' + message.name\r\n    message.file = this.path\r\n  }\r\n\r\n  message.fatal = false\r\n\r\n  this.messages.push(message)\r\n\r\n  return message\r\n}\r\n\r\n// Fail: creates a vmessage, associates it with the file, and throws it.\r\nfunction fail() {\r\n  var message = this.message.apply(this, arguments)\r\n\r\n  message.fatal = true\r\n\r\n  throw message\r\n}\r\n\r\n// Info: creates a vmessage, associates it with the file, and marks the fatality\r\n// as null.\r\nfunction info() {\r\n  var message = this.message.apply(this, arguments)\r\n\r\n  message.fatal = null\r\n\r\n  return message\r\n}\r\n"]},"metadata":{},"sourceType":"script"}