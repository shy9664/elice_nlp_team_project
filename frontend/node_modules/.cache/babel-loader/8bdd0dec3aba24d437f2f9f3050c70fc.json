{"ast":null,"code":"'use strict';\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js');\n\nvar markdownSpace = require('../character/markdown-space.js');\n\nvar factorySpace = require('./factory-space.js');\n\nvar thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n};\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  var size = 0;\n  var marker;\n  return start;\n\n  function start(code) {\n    effects.enter('thematicBreak');\n    marker = code;\n    return atBreak(code);\n  }\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence');\n      return sequence(code);\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code);\n    }\n\n    if (size < 3 || code !== null && !markdownLineEnding(code)) {\n      return nok(code);\n    }\n\n    effects.exit('thematicBreak');\n    return ok(code);\n  }\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code);\n      size++;\n      return sequence;\n    }\n\n    effects.exit('thematicBreakSequence');\n    return atBreak(code);\n  }\n}\n\nmodule.exports = thematicBreak;","map":{"version":3,"sources":["C:/Users/ghdus/OneDrive/바탕 화면/team-project/nlp-project-team2/frontend/node_modules/micromark/dist/tokenize/thematic-break.js"],"names":["markdownLineEnding","require","markdownSpace","factorySpace","thematicBreak","name","tokenize","tokenizeThematicBreak","effects","ok","nok","size","marker","start","code","enter","atBreak","sequence","exit","consume","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,kBAAkB,GAAGC,OAAO,CAAC,sCAAD,CAAhC;;AACA,IAAIC,aAAa,GAAGD,OAAO,CAAC,gCAAD,CAA3B;;AACA,IAAIE,YAAY,GAAGF,OAAO,CAAC,oBAAD,CAA1B;;AAEA,IAAIG,aAAa,GAAG;AAClBC,EAAAA,IAAI,EAAE,eADY;AAElBC,EAAAA,QAAQ,EAAEC;AAFQ,CAApB;;AAKA,SAASA,qBAAT,CAA+BC,OAA/B,EAAwCC,EAAxC,EAA4CC,GAA5C,EAAiD;AAC/C,MAAIC,IAAI,GAAG,CAAX;AACA,MAAIC,MAAJ;AACA,SAAOC,KAAP;;AAEA,WAASA,KAAT,CAAeC,IAAf,EAAqB;AACnBN,IAAAA,OAAO,CAACO,KAAR,CAAc,eAAd;AACAH,IAAAA,MAAM,GAAGE,IAAT;AACA,WAAOE,OAAO,CAACF,IAAD,CAAd;AACD;;AAED,WAASE,OAAT,CAAiBF,IAAjB,EAAuB;AACrB,QAAIA,IAAI,KAAKF,MAAb,EAAqB;AACnBJ,MAAAA,OAAO,CAACO,KAAR,CAAc,uBAAd;AACA,aAAOE,QAAQ,CAACH,IAAD,CAAf;AACD;;AAED,QAAIZ,aAAa,CAACY,IAAD,CAAjB,EAAyB;AACvB,aAAOX,YAAY,CAACK,OAAD,EAAUQ,OAAV,EAAmB,YAAnB,CAAZ,CAA6CF,IAA7C,CAAP;AACD;;AAED,QAAIH,IAAI,GAAG,CAAP,IAAaG,IAAI,KAAK,IAAT,IAAiB,CAACd,kBAAkB,CAACc,IAAD,CAArD,EAA8D;AAC5D,aAAOJ,GAAG,CAACI,IAAD,CAAV;AACD;;AAEDN,IAAAA,OAAO,CAACU,IAAR,CAAa,eAAb;AACA,WAAOT,EAAE,CAACK,IAAD,CAAT;AACD;;AAED,WAASG,QAAT,CAAkBH,IAAlB,EAAwB;AACtB,QAAIA,IAAI,KAAKF,MAAb,EAAqB;AACnBJ,MAAAA,OAAO,CAACW,OAAR,CAAgBL,IAAhB;AACAH,MAAAA,IAAI;AACJ,aAAOM,QAAP;AACD;;AAEDT,IAAAA,OAAO,CAACU,IAAR,CAAa,uBAAb;AACA,WAAOF,OAAO,CAACF,IAAD,CAAd;AACD;AACF;;AAEDM,MAAM,CAACC,OAAP,GAAiBjB,aAAjB","sourcesContent":["'use strict'\r\n\r\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\r\nvar markdownSpace = require('../character/markdown-space.js')\r\nvar factorySpace = require('./factory-space.js')\r\n\r\nvar thematicBreak = {\r\n  name: 'thematicBreak',\r\n  tokenize: tokenizeThematicBreak\r\n}\r\n\r\nfunction tokenizeThematicBreak(effects, ok, nok) {\r\n  var size = 0\r\n  var marker\r\n  return start\r\n\r\n  function start(code) {\r\n    effects.enter('thematicBreak')\r\n    marker = code\r\n    return atBreak(code)\r\n  }\r\n\r\n  function atBreak(code) {\r\n    if (code === marker) {\r\n      effects.enter('thematicBreakSequence')\r\n      return sequence(code)\r\n    }\r\n\r\n    if (markdownSpace(code)) {\r\n      return factorySpace(effects, atBreak, 'whitespace')(code)\r\n    }\r\n\r\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\r\n      return nok(code)\r\n    }\r\n\r\n    effects.exit('thematicBreak')\r\n    return ok(code)\r\n  }\r\n\r\n  function sequence(code) {\r\n    if (code === marker) {\r\n      effects.consume(code)\r\n      size++\r\n      return sequence\r\n    }\r\n\r\n    effects.exit('thematicBreakSequence')\r\n    return atBreak(code)\r\n  }\r\n}\r\n\r\nmodule.exports = thematicBreak\r\n"]},"metadata":{},"sourceType":"script"}