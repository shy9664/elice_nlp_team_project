import { WithPlateOptions } from '../plugins/withPlate';
import { OverrideByKey } from '../types/OverrideByKey';
import { PlateEditor } from '../types/PlateEditor';
import { PlatePlugin } from '../types/plugins/PlatePlugin';
import { PlatePluginComponent } from '../types/plugins/PlatePluginComponent';
export interface CreatePlateEditorOptions<T = {}> extends Omit<WithPlateOptions, 'plugins'> {
    editor?: any;
    plugins?: PlatePlugin<T>[];
    components?: Record<string, PlatePluginComponent>;
    overrideByKey?: OverrideByKey<T>;
}
/**
 * Create a plate editor with:
 * - `createEditor` or custom `editor`
 * - `withPlate`
 * - custom `components`
 */
export declare const createPlateEditor: <T = {}>({ editor, plugins, components, overrideByKey, ...withPlateOptions }?: CreatePlateEditorOptions<T>) => PlateEditor<T>;
//# sourceMappingURL=createPlateEditor.d.ts.map