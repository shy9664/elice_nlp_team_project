import { NodeEntry } from 'slate';
import { TEditor } from '../../types/slate/TEditor';
import { TNode } from '../../types/slate/TNode';
import { EditorNodesOptions } from '../types/index';
export declare type FindNodeOptions<T extends TNode = TNode> = EditorNodesOptions<T>;
/**
 * Find node matching the condition.
 */
export declare const findNode: <T extends TNode<import("../..").AnyObject> = TNode<import("../..").AnyObject>>(editor: TEditor, options?: FindNodeOptions<T>) => NodeEntry<T> | undefined;
//# sourceMappingURL=findNode.d.ts.map