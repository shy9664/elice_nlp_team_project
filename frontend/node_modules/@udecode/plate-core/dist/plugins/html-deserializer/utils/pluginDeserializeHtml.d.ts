import { DeserializeHtml } from '../../../types/plugins/DeserializeHtml';
import { WithPlatePlugin } from '../../../types/plugins/PlatePlugin';
import { AnyObject } from '../../../types/utility/AnyObject';
import { Nullable } from '../../../types/utility/Nullable';
/**
 * Get a deserializer by type, node names, class names and styles.
 */
export declare const pluginDeserializeHtml: <T = {}, P = {}>(plugin: WithPlatePlugin<T, P>, { element: el, deserializeLeaf, }: {
    element: HTMLElement;
    deserializeLeaf?: boolean | undefined;
}) => (Nullable<DeserializeHtml> & {
    node: AnyObject;
}) | undefined;
//# sourceMappingURL=pluginDeserializeHtml.d.ts.map