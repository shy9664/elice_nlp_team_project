{"version":3,"file":"index.js","sources":["../src/transforms/insertImage.ts","../src/utils/isImageUrl.ts","../src/withImageUpload.ts","../src/createImagePlugin.ts"],"sourcesContent":["import {\n  getPluginType,\n  insertNodes,\n  PlateEditor,\n  TElement,\n} from '@udecode/plate-core';\nimport { ELEMENT_IMAGE } from '../createImagePlugin';\n\nexport const insertImage = (editor: PlateEditor, url: string | ArrayBuffer) => {\n  const text = { text: '' };\n  const image = {\n    type: getPluginType(editor, ELEMENT_IMAGE),\n    url,\n    children: [text],\n  };\n  insertNodes<TElement>(editor, image);\n};\n","import { isUrl } from '@udecode/plate-core';\n\nconst imageExtensions = [\n  'ase',\n  'art',\n  'bmp',\n  'blp',\n  'cd5',\n  'cit',\n  'cpt',\n  'cr2',\n  'cut',\n  'dds',\n  'dib',\n  'djvu',\n  'egt',\n  'exif',\n  'gif',\n  'gpl',\n  'grf',\n  'icns',\n  'ico',\n  'iff',\n  'jng',\n  'jpeg',\n  'jpg',\n  'jfif',\n  'jp2',\n  'jps',\n  'lbm',\n  'max',\n  'miff',\n  'mng',\n  'msp',\n  'nitf',\n  'ota',\n  'pbm',\n  'pc1',\n  'pc2',\n  'pc3',\n  'pcf',\n  'pcx',\n  'pdn',\n  'pgm',\n  'PI1',\n  'PI2',\n  'PI3',\n  'pict',\n  'pct',\n  'pnm',\n  'pns',\n  'ppm',\n  'psb',\n  'psd',\n  'pdd',\n  'psp',\n  'px',\n  'pxm',\n  'pxr',\n  'qfx',\n  'raw',\n  'rle',\n  'sct',\n  'sgi',\n  'rgb',\n  'int',\n  'bw',\n  'tga',\n  'tiff',\n  'tif',\n  'vtf',\n  'xbm',\n  'xcf',\n  'xpm',\n  '3dv',\n  'amf',\n  'ai',\n  'awg',\n  'cgm',\n  'cdr',\n  'cmx',\n  'dxf',\n  'e2d',\n  'egt',\n  'eps',\n  'fs',\n  'gbr',\n  'odg',\n  'svg',\n  'stl',\n  'vrml',\n  'x3d',\n  'sxd',\n  'v2d',\n  'vnd',\n  'wmf',\n  'emf',\n  'art',\n  'xar',\n  'png',\n  'webp',\n  'jxr',\n  'hdp',\n  'wdp',\n  'cur',\n  'ecw',\n  'iff',\n  'lbm',\n  'liff',\n  'nrrd',\n  'pam',\n  'pcx',\n  'pgf',\n  'sgi',\n  'rgb',\n  'rgba',\n  'bw',\n  'int',\n  'inta',\n  'sid',\n  'ras',\n  'sun',\n  'tga',\n];\n\nexport const isImageUrl = (url: string) => {\n  if (!isUrl(url)) return false;\n\n  const ext = new URL(url).pathname.split('.').pop() as string;\n\n  return imageExtensions.includes(ext);\n};\n","import {\n  getInjectedPlugins,\n  pipeInsertDataQuery,\n  WithOverride,\n} from '@udecode/plate-core';\nimport { insertImage } from './transforms/insertImage';\nimport { isImageUrl } from './utils/isImageUrl';\nimport { ImagePlugin } from './types';\n\n/**\n * Allows for pasting images from clipboard.\n * Not yet: dragging and dropping images, selecting them through a file system dialog.\n * @param options.type\n * @param options.uploadImage\n */\nexport const withImageUpload: WithOverride<{}, ImagePlugin> = (\n  editor,\n  plugin\n) => {\n  const {\n    options: { uploadImage },\n  } = plugin;\n  const { insertData } = editor;\n\n  editor.insertData = (dataTransfer: DataTransfer) => {\n    const text = dataTransfer.getData('text/plain');\n    const { files } = dataTransfer;\n    if (files && files.length > 0) {\n      const injectedPlugins = getInjectedPlugins(editor, plugin);\n      if (!pipeInsertDataQuery(injectedPlugins, { data: text, dataTransfer })) {\n        return insertData(dataTransfer);\n      }\n\n      for (const file of files) {\n        const reader = new FileReader();\n        const [mime] = file.type.split('/');\n\n        if (mime === 'image') {\n          reader.addEventListener('load', async () => {\n            if (!reader.result) {\n              return;\n            }\n            const uploadedUrl = uploadImage\n              ? await uploadImage(reader.result)\n              : reader.result;\n\n            insertImage(editor, uploadedUrl);\n          });\n\n          reader.readAsDataURL(file);\n        }\n      }\n    } else if (isImageUrl(text)) {\n      insertImage(editor, text);\n    } else {\n      insertData(dataTransfer);\n    }\n  };\n\n  return editor;\n};\n","import { createPluginFactory } from '@udecode/plate-core';\nimport { ImagePlugin } from './types';\nimport { withImageUpload } from './withImageUpload';\n\nexport const ELEMENT_IMAGE = 'img';\n\n/**\n * Enables support for images.\n */\nexport const createImagePlugin = createPluginFactory<ImagePlugin>({\n  key: ELEMENT_IMAGE,\n  isElement: true,\n  isVoid: true,\n  withOverrides: withImageUpload,\n  then: (editor, { type }) => ({\n    deserializeHtml: {\n      getNode: (el) => ({\n        type,\n        url: el.getAttribute('src'),\n      }),\n      validNodeName: 'IMG',\n    },\n  }),\n});\n"],"names":["insertImage","editor","url","text","image","type","getPluginType","ELEMENT_IMAGE","children","insertNodes","imageExtensions","isImageUrl","isUrl","ext","URL","pathname","split","pop","includes","withImageUpload","plugin","options","uploadImage","insertData","dataTransfer","getData","files","length","injectedPlugins","getInjectedPlugins","pipeInsertDataQuery","data","file","reader","FileReader","mime","addEventListener","result","uploadedUrl","readAsDataURL","createImagePlugin","createPluginFactory","key","isElement","isVoid","withOverrides","then","deserializeHtml","getNode","el","getAttribute","validNodeName"],"mappings":"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"}