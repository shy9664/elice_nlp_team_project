import { createPluginFactory, onKeyDownToggleMark, findHtmlParentElement } from '@udecode/plate-core';

const deserializeHtmlBold = [{
  validNodeName: ['STRONG', 'B']
}, {
  validStyle: {
    fontWeight: ['600', '700', 'bold']
  }
}];

const MARK_BOLD = 'bold';
/**
 * Enables support for bold formatting
 */

const createBoldPlugin = createPluginFactory({
  key: MARK_BOLD,
  isLeaf: true,
  deserializeHtml: deserializeHtmlBold,
  handlers: {
    onKeyDown: onKeyDownToggleMark
  },
  options: {
    hotkey: 'mod+b'
  }
});

const MARK_CODE = 'code';
/**
 * Enables support for code formatting
 */

const createCodePlugin = createPluginFactory({
  key: MARK_CODE,
  isLeaf: true,
  deserializeHtml: [{
    validNodeName: ['CODE'],
    query: el => !findHtmlParentElement(el, 'PRE')
  }, {
    validStyle: {
      wordWrap: 'break-word'
    }
  }, {
    validStyle: {
      fontFamily: 'Consolas'
    }
  }],
  handlers: {
    onKeyDown: onKeyDownToggleMark
  },
  options: {
    hotkey: 'mod+e'
  }
});

const deserializeHtmlItalic = [{
  validNodeName: ['EM', 'I']
}, {
  validStyle: {
    fontStyle: 'italic'
  }
}];

const MARK_ITALIC = 'italic';
/**
 * Enables support for italic formatting.
 */

const createItalicPlugin = createPluginFactory({
  key: MARK_ITALIC,
  isLeaf: true,
  handlers: {
    onKeyDown: onKeyDownToggleMark
  },
  options: {
    hotkey: 'mod+i'
  },
  deserializeHtml: deserializeHtmlItalic
});

const MARK_STRIKETHROUGH = 'strikethrough';
/**
 * Enables support for strikethrough formatting.
 */

const createStrikethroughPlugin = createPluginFactory({
  key: MARK_STRIKETHROUGH,
  isLeaf: true,
  handlers: {
    onKeyDown: onKeyDownToggleMark
  },
  options: {
    hotkey: 'mod+shift+x'
  },
  deserializeHtml: [{
    validNodeName: ['S', 'DEL', 'STRIKE']
  }, {
    validStyle: {
      textDecoration: 'line-through'
    }
  }]
});

const MARK_SUBSCRIPT$1 = 'subscript';
const MARK_SUPERSCRIPT$1 = 'superscript';
/**
 * Enables support for subscript formatting.
 */

const createSubscriptPlugin = createPluginFactory({
  key: MARK_SUBSCRIPT$1,
  isLeaf: true,
  handlers: {
    onKeyDown: onKeyDownToggleMark
  },
  options: {
    hotkey: 'mod+,',
    clear: MARK_SUPERSCRIPT$1
  },
  deserializeHtml: [{
    validNodeName: ['SUB']
  }, {
    validStyle: {
      verticalAlign: 'sub'
    }
  }]
});

const MARK_SUPERSCRIPT = 'superscript';
const MARK_SUBSCRIPT = 'subscript';
/**
 * Enables support for superscript formatting.
 */

const createSuperscriptPlugin = createPluginFactory({
  key: MARK_SUPERSCRIPT,
  isLeaf: true,
  handlers: {
    onKeyDown: onKeyDownToggleMark
  },
  options: {
    hotkey: 'mod+.',
    clear: MARK_SUBSCRIPT
  },
  deserializeHtml: [{
    validNodeName: ['SUP']
  }, {
    validStyle: {
      verticalAlign: 'super'
    }
  }]
});

const MARK_UNDERLINE = 'underline';
/**
 * Enables support for underline formatting.
 */

const createUnderlinePlugin = createPluginFactory({
  key: MARK_UNDERLINE,
  isLeaf: true,
  handlers: {
    onKeyDown: onKeyDownToggleMark
  },
  options: {
    hotkey: 'mod+u'
  },
  deserializeHtml: [{
    validNodeName: ['U']
  }, {
    validStyle: {
      textDecoration: 'underline'
    }
  }]
});

/**
 * Enables support for basic marks:
 * - Bold
 * - Code
 * - Italic
 * - Strikethrough
 * - Subscript
 * - Superscript
 * - Underline
 */

const createBasicMarksPlugin = createPluginFactory({
  key: 'basicMarks',
  plugins: [createBoldPlugin(), createCodePlugin(), createItalicPlugin(), createStrikethroughPlugin(), createSubscriptPlugin(), createSuperscriptPlugin(), createUnderlinePlugin()]
});

export { MARK_BOLD, MARK_CODE, MARK_ITALIC, MARK_STRIKETHROUGH, MARK_SUBSCRIPT$1 as MARK_SUBSCRIPT, MARK_SUPERSCRIPT, MARK_UNDERLINE, createBasicMarksPlugin, createBoldPlugin, createCodePlugin, createItalicPlugin, createStrikethroughPlugin, createSubscriptPlugin, createSuperscriptPlugin, createUnderlinePlugin, deserializeHtmlBold, deserializeHtmlItalic };
//# sourceMappingURL=index.es.js.map
