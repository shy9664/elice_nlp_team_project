{"version":3,"file":"index.es.js","sources":["../src/LineHeightToolbarButton/LineHeightToolbarDropdown.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport {\n  getPluginInjectProps,\n  isCollapsed,\n  someNode,\n  usePlateEditorState,\n} from '@udecode/plate-core';\nimport { KEY_LINE_HEIGHT, setLineHeight } from '@udecode/plate-line-height';\nimport {\n  ToolbarButton,\n  ToolbarButtonProps,\n  ToolbarDropdown,\n} from '@udecode/plate-toolbar';\nimport { ReactEditor } from 'slate-react';\n\nexport const LineHeightToolbarDropdown = (props: ToolbarButtonProps) => {\n  const [open, setOpen] = React.useState(false);\n  const editor = usePlateEditorState()!;\n\n  const { validNodeValues } = getPluginInjectProps(editor, KEY_LINE_HEIGHT);\n\n  const onToggle = useCallback(() => {\n    setOpen(!open);\n  }, [open, setOpen]);\n\n  const selectHandler = useCallback(\n    (lineHeight) => {\n      if (editor) {\n        ReactEditor.focus(editor);\n\n        setLineHeight(editor, {\n          value: lineHeight,\n        });\n      }\n    },\n    [editor]\n  );\n\n  return (\n    <ToolbarDropdown\n      control={\n        <ToolbarButton\n          active={\n            isCollapsed(editor?.selection) &&\n            someNode(editor!, {\n              match: (n) => n[KEY_LINE_HEIGHT] !== undefined,\n            })\n          }\n          {...props}\n        />\n      }\n      open={open}\n      onOpen={onToggle}\n      onClose={onToggle}\n    >\n      {validNodeValues &&\n        validNodeValues.map((lineHeight) => (\n          <div\n            style={{ cursor: 'pointer' }}\n            key={lineHeight}\n            onClick={() => selectHandler(lineHeight)}\n          >\n            {lineHeight}\n          </div>\n        ))}\n    </ToolbarDropdown>\n  );\n};\n"],"names":["LineHeightToolbarDropdown","props","open","setOpen","React","useState","editor","usePlateEditorState","validNodeValues","getPluginInjectProps","KEY_LINE_HEIGHT","onToggle","useCallback","selectHandler","lineHeight","ReactEditor","focus","setLineHeight","value","isCollapsed","selection","someNode","match","n","undefined","map","cursor"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;MAeaA,yBAAyB,GAAIC,KAAD,IAA+B;AACtE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,KAAK,CAACC,QAAN,CAAe,KAAf,CAAxB;AACA,QAAMC,MAAM,GAAGC,mBAAmB,EAAlC;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAsBC,oBAAoB,CAACH,MAAD,EAASI,eAAT,CAAhD;AAEA,QAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjCT,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,GAF2B,EAEzB,CAACA,IAAD,EAAOC,OAAP,CAFyB,CAA5B;AAIA,QAAMU,aAAa,GAAGD,WAAW,CAC9BE,UAAD,IAAgB;AACd,QAAIR,MAAJ,EAAY;AACVS,MAAAA,WAAW,CAACC,KAAZ,CAAkBV,MAAlB;AAEAW,MAAAA,aAAa,CAACX,MAAD,EAAS;AACpBY,QAAAA,KAAK,EAAEJ;AADa,OAAT,CAAb;AAGD;AACF,GAT8B,EAU/B,CAACR,MAAD,CAV+B,CAAjC;AAaA,sBACE,oBAAC,eAAD;AACE,IAAA,OAAO,eACL,oBAAC,aAAD;AACE,MAAA,MAAM,EACJa,WAAW,CAACb,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEc,SAAT,CAAX,IACAC,QAAQ,CAACf,MAAD,EAAU;AAChBgB,QAAAA,KAAK,EAAGC,CAAD,IAAOA,CAAC,CAACb,eAAD,CAAD,KAAuBc;AADrB,OAAV;AAHZ,OAOMvB,KAPN,EAFJ;AAYE,IAAA,IAAI,EAAEC,IAZR;AAaE,IAAA,MAAM,EAAES,QAbV;AAcE,IAAA,OAAO,EAAEA;AAdX,KAgBGH,eAAe,IACdA,eAAe,CAACiB,GAAhB,CAAqBX,UAAD,iBAClB;AACE,IAAA,KAAK,EAAE;AAAEY,MAAAA,MAAM,EAAE;AAAV,KADT;AAEE,IAAA,GAAG,EAAEZ,UAFP;AAGE,IAAA,OAAO,EAAE,MAAMD,aAAa,CAACC,UAAD;AAH9B,KAKGA,UALH,CADF,CAjBJ,CADF;AA6BD;;;;"}