{"version":3,"file":"index.js","sources":["../src/withSelectOnBackspace.ts","../src/createSelectOnBackspacePlugin.ts"],"sourcesContent":["import {\n  isCollapsed,\n  queryNode,\n  TNode,\n  WithOverride,\n} from '@udecode/plate-core';\nimport Slate, { Editor, Transforms } from 'slate';\nimport { SelectOnBackspacePlugin } from './createSelectOnBackspacePlugin';\n\n/**\n * Set a list of element types to select on backspace\n */\nexport const withSelectOnBackspace: WithOverride<\n  {},\n  SelectOnBackspacePlugin\n> = (editor, { options: { query } }) => {\n  const { deleteBackward } = editor;\n\n  editor.deleteBackward = (unit: 'character' | 'word' | 'line' | 'block') => {\n    const { selection } = editor;\n    if (unit === 'character' && isCollapsed(selection)) {\n      const prevNode = Editor.before(editor, selection as Slate.Location, {\n        unit,\n      });\n      if (prevNode) {\n        const [prevCell] = Editor.nodes<TNode>(editor, {\n          match: (node) => queryNode([node as TNode, prevNode.path], query),\n          at: prevNode,\n        });\n\n        if (!!prevCell && prevNode) {\n          // don't delete image, set selection there\n          Transforms.select(editor, prevNode);\n        } else {\n          deleteBackward(unit);\n        }\n      } else {\n        deleteBackward(unit);\n      }\n    } else {\n      deleteBackward(unit);\n    }\n  };\n\n  return editor;\n};\n","import { createPluginFactory, QueryNodeOptions } from '@udecode/plate-core';\nimport { withSelectOnBackspace } from './withSelectOnBackspace';\n\nexport type SelectOnBackspacePlugin = {\n  query?: QueryNodeOptions;\n};\n\nexport const KEY_SELECT_ON_BACKSPACE = 'selectOnBackspace';\n\n/**\n * @see {@link withSelectOnBackspace}\n */\nexport const createSelectOnBackspacePlugin = createPluginFactory<SelectOnBackspacePlugin>(\n  {\n    key: KEY_SELECT_ON_BACKSPACE,\n    withOverrides: withSelectOnBackspace,\n  }\n);\n"],"names":["withSelectOnBackspace","editor","options","query","deleteBackward","unit","selection","isCollapsed","prevNode","Editor","before","prevCell","nodes","match","node","queryNode","path","at","Transforms","select","KEY_SELECT_ON_BACKSPACE","createSelectOnBackspacePlugin","createPluginFactory","key","withOverrides"],"mappings":";;;;;;;AASA;AACA;AACA;MACaA,qBAGZ,GAAG,CAACC,MAAD,EAAS;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA;AAAF;AAAX,CAAT,KAAoC;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAqBH,MAA3B;;AAEAA,EAAAA,MAAM,CAACG,cAAP,GAAyBC,IAAD,IAAmD;AACzE,UAAM;AAAEC,MAAAA;AAAF,QAAgBL,MAAtB;;AACA,QAAII,IAAI,KAAK,WAAT,IAAwBE,qBAAW,CAACD,SAAD,CAAvC,EAAoD;AAClD,YAAME,QAAQ,GAAGC,YAAM,CAACC,MAAP,CAAcT,MAAd,EAAsBK,SAAtB,EAAmD;AAClED,QAAAA;AADkE,OAAnD,CAAjB;;AAGA,UAAIG,QAAJ,EAAc;AACZ,cAAM,CAACG,QAAD,IAAaF,YAAM,CAACG,KAAP,CAAoBX,MAApB,EAA4B;AAC7CY,UAAAA,KAAK,EAAGC,IAAD,IAAUC,mBAAS,CAAC,CAACD,IAAD,EAAgBN,QAAQ,CAACQ,IAAzB,CAAD,EAAiCb,KAAjC,CADmB;AAE7Cc,UAAAA,EAAE,EAAET;AAFyC,SAA5B,CAAnB;;AAKA,YAAI,CAAC,CAACG,QAAF,IAAcH,QAAlB,EAA4B;AAC1B;AACAU,UAAAA,gBAAU,CAACC,MAAX,CAAkBlB,MAAlB,EAA0BO,QAA1B;AACD,SAHD,MAGO;AACLJ,UAAAA,cAAc,CAACC,IAAD,CAAd;AACD;AACF,OAZD,MAYO;AACLD,QAAAA,cAAc,CAACC,IAAD,CAAd;AACD;AACF,KAnBD,MAmBO;AACLD,MAAAA,cAAc,CAACC,IAAD,CAAd;AACD;AACF,GAxBD;;AA0BA,SAAOJ,MAAP;AACD;;MCtCYmB,uBAAuB,GAAG;AAEvC;AACA;AACA;;MACaC,6BAA6B,GAAGC,6BAAmB,CAC9D;AACEC,EAAAA,GAAG,EAAEH,uBADP;AAEEI,EAAAA,aAAa,EAAExB;AAFjB,CAD8D;;;;;;"}