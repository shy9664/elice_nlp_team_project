{"version":3,"file":"index.es.js","sources":["../src/createDndPlugin.ts","../src/components/Draggable.styles.ts","../src/hooks/useDragBlock.ts","../src/utils/getHoverDirection.ts","../src/utils/getNewDirection.ts","../src/hooks/useDropBlockOnEditor.ts","../src/hooks/useDndBlock.ts","../src/components/Draggable.tsx","../src/components/grabberTooltipProps.tsx","../src/components/withDraggable.tsx","../src/utils/focusBlockStartById.ts","../src/utils/getBlocksWithId.ts","../src/utils/getNodesRange.ts","../src/utils/removeBlocksAndFocus.ts","../src/utils/selectBlockById.ts","../src/utils/selectBlocksBySelectionOrId.ts"],"sourcesContent":["import { createPluginFactory } from '@udecode/plate-core';\n\nexport const KEY_DND = 'dnd';\n\nexport const createDndPlugin = createPluginFactory({\n  key: KEY_DND,\n  handlers: {\n    onDrop: (editor) => () => editor.isDragging,\n  },\n});\n","import { createStyles } from '@udecode/plate-styled-components';\nimport { css } from 'styled-components';\nimport tw from 'twin.macro';\nimport { DraggableStyleProps } from './Draggable.types';\n\nexport const getDraggableStyles = (props: DraggableStyleProps) =>\n  createStyles(\n    { prefixClassNames: 'Draggable', ...props },\n    {\n      root: [\n        tw`relative`,\n        props.isDragging && tw`opacity-50`,\n        props.selected && tw`backgroundColor[rgb(181, 215, 255)]`,\n        css`\n          :hover .slate-Draggable-gutterLeft {\n            ${tw`opacity-100`}\n          }\n        `,\n      ],\n\n      block: tw`overflow-auto`,\n      gutterLeft: [\n        tw`absolute top-0 flex h-full opacity-0`,\n        css`\n          transform: translateX(-100%);\n        `,\n      ],\n\n      blockToolbarWrapper: tw`flex height[1.5em]`,\n      blockToolbar: tw`flex items-center mr-1 pointer-events-auto`,\n      dragHandle: [\n        tw`p-0 bg-transparent bg-no-repeat cursor-pointer overflow-hidden outline-none border-none`,\n        tw`minWidth[18px] height[18px]`,\n      ],\n      dropLine: [\n        tw`absolute left-0 right-0 h-0.5 opacity-100`,\n        tw`background[#B4D5FF]`,\n        props.direction === 'top' && tw`-top-px`,\n        props.direction === 'bottom' && tw`-bottom-px`,\n      ],\n    }\n  );\n","import { useDrag } from 'react-dnd';\nimport { TEditor } from '@udecode/plate-core';\n\nexport const useDragBlock = (editor: TEditor, id: string) => {\n  return useDrag(\n    () => ({\n      type: 'block',\n      item() {\n        editor.isDragging = true;\n        document.body.classList.add('dragging');\n        return { id };\n      },\n      collect: (monitor) => ({\n        isDragging: monitor.isDragging(),\n      }),\n      end: () => {\n        editor.isDragging = false;\n        document.body.classList.remove('dragging');\n      },\n    }),\n    []\n  );\n};\n","import { DropTargetMonitor, XYCoord } from 'react-dnd';\nimport { DragItemBlock, DropDirection } from '../types';\n\n/**\n * If dragging a block A over another block B:\n * get the direction of block A relative to block B.\n */\nexport const getHoverDirection = (\n  dragItem: DragItemBlock,\n  monitor: DropTargetMonitor,\n  ref: any,\n  hoverId: string\n): DropDirection => {\n  if (!ref.current) return;\n\n  const dragId = dragItem.id;\n\n  // Don't replace items with themselves\n  if (dragId === hoverId) return;\n\n  // Determine rectangle on screen\n  const hoverBoundingRect = ref.current?.getBoundingClientRect();\n\n  // Get vertical middle\n  const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n\n  // Determine mouse position\n  const clientOffset = monitor.getClientOffset();\n  if (!clientOffset) return;\n\n  // Get pixels to the top\n  const hoverClientY = (clientOffset as XYCoord).y - hoverBoundingRect.top;\n\n  // Only perform the move when the mouse has crossed half of the items height\n  // When dragging downwards, only move when the cursor is below 50%\n  // When dragging upwards, only move when the cursor is above 50%\n\n  // Dragging downwards\n  // if (dragId < hoverId && hoverClientY < hoverMiddleY) {\n  if (hoverClientY < hoverMiddleY) {\n    return 'top';\n  }\n\n  // Dragging upwards\n  // if (dragId > hoverId && hoverClientY > hoverMiddleY) {\n  if (hoverClientY >= hoverMiddleY) {\n    return 'bottom';\n  }\n};\n","/**\n * Get new direction if updated\n */\nexport const getNewDirection = (previousDir: string, dir?: string) => {\n  if (!dir && previousDir) {\n    return '';\n  }\n\n  if (dir === 'top' && previousDir !== 'top') {\n    return 'top';\n  }\n\n  if (dir === 'bottom' && previousDir !== 'bottom') {\n    return 'bottom';\n  }\n};\n","import { DropTargetMonitor, useDrop } from 'react-dnd';\nimport { findNode, isExpanded } from '@udecode/plate-core';\nimport { Path, Transforms } from 'slate';\nimport { ReactEditor } from 'slate-react';\nimport { DragItemBlock } from '../types';\nimport { getHoverDirection } from '../utils/getHoverDirection';\nimport { getNewDirection } from '../utils/getNewDirection';\n\nexport const useDropBlockOnEditor = (\n  editor: ReactEditor,\n  {\n    blockRef,\n    id,\n    dropLine,\n    setDropLine,\n  }: {\n    blockRef: any;\n    id: string;\n    dropLine: string;\n    setDropLine: Function;\n  }\n) => {\n  return useDrop({\n    accept: 'block',\n    drop: (dragItem: DragItemBlock, monitor: DropTargetMonitor) => {\n      const direction = getHoverDirection(dragItem, monitor, blockRef, id);\n      if (!direction) return;\n\n      const dragEntry = findNode(editor, {\n        at: [],\n        match: { id: dragItem.id },\n      });\n      if (!dragEntry) return;\n      const [, dragPath] = dragEntry;\n\n      ReactEditor.focus(editor);\n\n      let dropPath: Path | undefined;\n      if (direction === 'bottom') {\n        dropPath = findNode(editor, { at: [], match: { id } })?.[1];\n        if (!dropPath) return;\n\n        if (Path.equals(dragPath, Path.next(dropPath))) return;\n      }\n\n      if (direction === 'top') {\n        const nodePath = findNode(editor, { at: [], match: { id } })?.[1];\n\n        if (!nodePath) return;\n        dropPath = [\n          ...nodePath.slice(0, -1),\n          nodePath[nodePath.length - 1] - 1,\n        ];\n\n        if (Path.equals(dragPath, dropPath)) return;\n      }\n\n      if (direction) {\n        const _dropPath = dropPath as Path;\n\n        const before =\n          Path.isBefore(dragPath, _dropPath) &&\n          Path.isSibling(dragPath, _dropPath);\n        const to = before ? _dropPath : Path.next(_dropPath);\n\n        Transforms.moveNodes(editor, {\n          at: dragPath,\n          to,\n        });\n      }\n    },\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n    }),\n    hover(item: DragItemBlock, monitor: DropTargetMonitor) {\n      const direction = getHoverDirection(item, monitor, blockRef, id);\n      const dropLineDir = getNewDirection(dropLine, direction);\n      if (dropLineDir) setDropLine(dropLineDir);\n\n      if (direction && isExpanded(editor.selection)) {\n        ReactEditor.focus(editor);\n        Transforms.collapse(editor);\n      }\n    },\n  });\n};\n","import { useState } from 'react';\nimport { getEmptyImage } from 'react-dnd-html5-backend';\nimport { useEditorRef } from '@udecode/plate-core';\nimport { useDragBlock } from './useDragBlock';\nimport { useDropBlockOnEditor } from './useDropBlockOnEditor';\n\nexport const useDndBlock = ({\n  id,\n  blockRef,\n  removePreview,\n}: {\n  id: string;\n  blockRef: any;\n  removePreview?: boolean;\n}) => {\n  const editor = useEditorRef();\n\n  const [dropLine, setDropLine] = useState<'' | 'top' | 'bottom'>('');\n\n  const [{ isDragging }, dragRef, preview] = useDragBlock(editor, id);\n  const [{ isOver }, drop] = useDropBlockOnEditor(editor, {\n    id,\n    blockRef,\n    dropLine,\n    setDropLine,\n  });\n\n  // TODO: previewElement option\n  if (removePreview) {\n    drop(blockRef);\n    preview(getEmptyImage(), { captureDraggingState: true });\n  } else {\n    preview(drop(blockRef));\n  }\n\n  if (!isOver && dropLine) {\n    setDropLine('');\n  }\n\n  return {\n    isDragging,\n    dropLine,\n    dragRef,\n  };\n};\n","import React, { useRef } from 'react';\nimport useMergedRef from '@react-hook/merged-ref';\nimport { useDndBlock } from '../hooks/useDndBlock';\nimport { getDraggableStyles } from './Draggable.styles';\nimport { DraggableProps, DragHandleProps } from './Draggable.types';\n\nconst DefaultDragHandle = ({ styles, ...props }: DragHandleProps) => (\n  <button type=\"button\" {...props} css={styles} />\n);\n\nexport const Draggable = (props: DraggableProps) => {\n  const { children, element, componentRef, onRenderDragHandle } = props;\n\n  const DragHandle = onRenderDragHandle ?? DefaultDragHandle;\n\n  const blockRef = useRef<HTMLDivElement>(null);\n  const rootRef = useRef<HTMLDivElement>(null);\n  const dragWrapperRef = useRef(null);\n  const multiRootRef = useMergedRef(componentRef, rootRef);\n\n  const { dropLine, dragRef, isDragging } = useDndBlock({\n    id: element.id,\n    blockRef: rootRef,\n  });\n\n  const multiDragRef = useMergedRef(dragRef, dragWrapperRef);\n\n  const styles = getDraggableStyles({\n    ...props,\n    direction: dropLine,\n    isDragging,\n  });\n\n  return (\n    <div\n      css={styles.root.css}\n      className={styles.root.className}\n      ref={multiRootRef}\n    >\n      <div\n        ref={blockRef}\n        css={[\n          ...(styles.blockAndGutter?.css ?? []),\n          ...(styles.block?.css ?? []),\n        ]}\n      >\n        {children}\n\n        {!!dropLine && (\n          <div\n            css={styles.dropLine?.css}\n            className={styles.dropLine?.className}\n            contentEditable={false}\n          />\n        )}\n      </div>\n\n      <div\n        css={[\n          ...(styles.blockAndGutter?.css ?? []),\n          ...(styles.gutterLeft?.css ?? []),\n        ]}\n        className={styles.gutterLeft?.className}\n        contentEditable={false}\n      >\n        <div\n          css={styles.blockToolbarWrapper?.css}\n          className={styles.blockToolbarWrapper?.className}\n        >\n          <div\n            css={styles.blockToolbar?.css}\n            className={styles.blockToolbar?.className}\n            ref={multiDragRef}\n          >\n            <DragHandle\n              element={element}\n              styles={styles.dragHandle?.css}\n              className={styles.dragHandle?.className}\n              onMouseDown={(e: any) => e.stopPropagation()}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { TippyProps } from '@tippyjs/react';\n\nconst GrabberTooltipContent = () => (\n  <div style={{ fontSize: 12 }}>\n    <div>\n      Drag <span style={{ color: 'rgba(255, 255, 255, 0.45)' }}>to move</span>\n    </div>\n  </div>\n);\nexport const grabberTooltipProps: TippyProps = {\n  content: <GrabberTooltipContent />,\n  placement: 'bottom',\n  arrow: false,\n  offset: [0, 0],\n  delay: [300, 0],\n  duration: [0, 0],\n  hideOnClick: true,\n  theme: 'small',\n};\n","import React, { forwardRef, useMemo } from 'react';\nimport {\n  createNodesWithHOC,\n  PlateRenderElementProps,\n  TEditor,\n} from '@udecode/plate-core';\nimport { Path } from 'slate';\nimport { ReactEditor, useReadOnly } from 'slate-react';\nimport { Draggable } from './Draggable';\nimport { DraggableProps } from './Draggable.types';\n\nexport interface WithDraggableOptions\n  extends Pick<DraggableProps, 'onRenderDragHandle' | 'styles'> {\n  level?: number;\n  filter?: (editor: TEditor, path: Path) => boolean;\n  allowReadOnly?: boolean;\n}\n\nexport const withDraggable = (\n  Component: any,\n  {\n    styles,\n    level,\n    filter,\n    allowReadOnly = false,\n    onRenderDragHandle,\n  }: WithDraggableOptions = {}\n) => {\n  return forwardRef((props: PlateRenderElementProps, ref) => {\n    const { attributes, element, editor } = props;\n    const readOnly = useReadOnly();\n    const path = useMemo(() => ReactEditor.findPath(editor, element), [\n      editor,\n      element,\n    ]);\n\n    const filteredOut = useMemo(\n      () =>\n        (Number.isInteger(level) && level !== path.length - 1) ||\n        (filter && filter(editor, path)),\n      [path, editor]\n    );\n\n    if (filteredOut || (!allowReadOnly && readOnly)) {\n      return <Component {...props} />;\n    }\n\n    return (\n      <Draggable\n        editor={editor}\n        attributes={attributes}\n        element={element}\n        componentRef={ref}\n        styles={styles}\n        onRenderDragHandle={onRenderDragHandle}\n      >\n        <Component {...props} />\n      </Draggable>\n    );\n  });\n};\n\nexport const withDraggables = createNodesWithHOC(withDraggable);\n","import { findNode } from '@udecode/plate-core';\nimport { Editor, Transforms } from 'slate';\nimport { ReactEditor } from 'slate-react';\n\n/**\n * Select the start of a block by id and focus the editor.\n */\nexport const focusBlockStartById = (editor: ReactEditor, id: string) => {\n  const path = findNode(editor, { at: [], match: { id } })?.[1];\n  if (!path) return;\n\n  Transforms.select(editor, Editor.start(editor, path));\n  ReactEditor.focus(editor);\n};\n","import { EditorNodesOptions, getNodes, TEditor } from '@udecode/plate-core';\nimport { Editor } from 'slate';\n\n/**\n * Get blocks with an id\n */\nexport const getBlocksWithId = (\n  editor: TEditor,\n  options: EditorNodesOptions\n) => {\n  return [\n    ...getNodes(editor, {\n      match: (n) => Editor.isBlock(editor, n) && !!n.id,\n      ...options,\n    }),\n  ];\n};\n","import { TEditor } from '@udecode/plate-core';\nimport { Editor, NodeEntry } from 'slate';\n\n/**\n * Get node entries range.\n */\nexport const getNodesRange = (editor: TEditor, nodeEntries: NodeEntry[]) => {\n  if (!nodeEntries.length) return;\n\n  const firstBlockPath = nodeEntries[0][1];\n  const lastBlockPath = nodeEntries[nodeEntries.length - 1][1];\n\n  return Editor.range(editor, firstBlockPath, lastBlockPath);\n};\n","import { EditorNodesOptions, unhangRange } from '@udecode/plate-core';\nimport { Transforms } from 'slate';\nimport { ReactEditor } from 'slate-react';\nimport { getBlocksWithId } from './getBlocksWithId';\nimport { getNodesRange } from './getNodesRange';\n\n/**\n * Remove blocks with an id and focus the editor.\n */\nexport const removeBlocksAndFocus = (\n  editor: ReactEditor,\n  options: EditorNodesOptions\n) => {\n  unhangRange(editor, options);\n\n  const nodeEntries = getBlocksWithId(editor, options);\n\n  Transforms.removeNodes(editor, { at: getNodesRange(editor, nodeEntries) });\n  ReactEditor.focus(editor);\n};\n","import { findNode } from '@udecode/plate-core';\nimport { Editor, Transforms } from 'slate';\nimport { ReactEditor } from 'slate-react';\n\n/**\n * Select the block above the selection by id and focus the editor.\n */\nexport const selectBlockById = (editor: ReactEditor, id: string) => {\n  const path = findNode(editor, { at: [], match: { id } })?.[1];\n  if (!path) return;\n\n  Transforms.select(editor, Editor.range(editor, path));\n  ReactEditor.focus(editor);\n};\n","import { Range, Transforms } from 'slate';\nimport { ReactEditor } from 'slate-react';\nimport { getBlocksWithId } from './getBlocksWithId';\nimport { getNodesRange } from './getNodesRange';\nimport { selectBlockById } from './selectBlockById';\n\n/**\n * Select blocks by selection or by id.\n * If the block with id is not selected, select the block with id.\n * Else, select the blocks above the selection.\n */\nexport const selectBlocksBySelectionOrId = (\n  editor: ReactEditor,\n  id: string\n) => {\n  if (!editor.selection) return;\n\n  const blockEntries = getBlocksWithId(editor, { at: editor.selection });\n  const isBlockSelected = blockEntries.some(\n    (blockEntry) => blockEntry[0].id === id\n  );\n\n  if (isBlockSelected) {\n    Transforms.select(editor, getNodesRange(editor, blockEntries) as Range);\n    ReactEditor.focus(editor);\n  } else {\n    selectBlockById(editor, id);\n  }\n};\n"],"names":["KEY_DND","createDndPlugin","createPluginFactory","key","handlers","onDrop","editor","isDragging","getDraggableStyles","props","createStyles","prefixClassNames","root","selected","css","block","gutterLeft","blockToolbarWrapper","blockToolbar","dragHandle","dropLine","direction","useDragBlock","id","useDrag","type","item","document","body","classList","add","collect","monitor","end","remove","getHoverDirection","dragItem","ref","hoverId","current","dragId","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","clientOffset","getClientOffset","hoverClientY","y","getNewDirection","previousDir","dir","useDropBlockOnEditor","blockRef","setDropLine","useDrop","accept","drop","dragEntry","findNode","at","match","dragPath","ReactEditor","focus","dropPath","Path","equals","next","nodePath","slice","length","_dropPath","before","isBefore","isSibling","to","Transforms","moveNodes","isOver","hover","dropLineDir","isExpanded","selection","collapse","useDndBlock","removePreview","useEditorRef","useState","dragRef","preview","getEmptyImage","captureDraggingState","DefaultDragHandle","styles","Draggable","children","element","componentRef","onRenderDragHandle","DragHandle","useRef","rootRef","dragWrapperRef","multiRootRef","useMergedRef","multiDragRef","className","blockAndGutter","e","stopPropagation","GrabberTooltipContent","fontSize","color","grabberTooltipProps","content","placement","arrow","offset","delay","duration","hideOnClick","theme","withDraggable","Component","level","filter","allowReadOnly","forwardRef","attributes","readOnly","useReadOnly","path","useMemo","findPath","filteredOut","Number","isInteger","withDraggables","createNodesWithHOC","focusBlockStartById","select","Editor","start","getBlocksWithId","options","getNodes","n","isBlock","getNodesRange","nodeEntries","firstBlockPath","lastBlockPath","range","removeBlocksAndFocus","unhangRange","removeNodes","selectBlockById","selectBlocksBySelectionOrId","blockEntries","isBlockSelected","some","blockEntry"],"mappings":"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"}