{"version":3,"file":"index.js","sources":["../src/moveSelectionByOffset.ts","../src/queries/findMentionInput.ts","../src/queries/isNodeMentionInput.ts","../src/queries/isSelectionInMentionInput.ts","../src/transforms/removeMentionInput.ts","../src/withMention.ts","../src/createMentionPlugin.ts","../src/getMentionOnSelectItem.ts"],"sourcesContent":["import { KeyboardEvent } from 'react';\nimport { PlateEditor } from '@udecode/plate-core';\nimport { HandlerReturnType } from '@udecode/plate-core/src';\nimport { Range, Transforms } from 'slate';\n\nexport const moveSelectionByOffset = (\n  editor: PlateEditor,\n  { query = () => true }: { query: (editor: PlateEditor) => boolean }\n) => (event: KeyboardEvent): HandlerReturnType => {\n  const { selection } = editor;\n  if (!selection || Range.isExpanded(selection) || !query(editor)) {\n    return false;\n  }\n\n  if (event.key === 'ArrowLeft') {\n    event.preventDefault();\n    Transforms.move(editor, { unit: 'offset', reverse: true });\n    return true;\n  }\n\n  if (event.key === 'ArrowRight') {\n    event.preventDefault();\n    Transforms.move(editor, { unit: 'offset' });\n    return true;\n  }\n};\n","import {\n  findNode,\n  FindNodeOptions,\n  getPluginType,\n  PlateEditor,\n} from '@udecode/plate-core';\nimport { ELEMENT_MENTION_INPUT } from '../createMentionPlugin';\n\nexport const findMentionInput = (\n  editor: PlateEditor,\n  options?: Omit<FindNodeOptions, 'match'>\n) =>\n  findNode(editor, {\n    ...options,\n    match: { type: getPluginType(editor, ELEMENT_MENTION_INPUT) },\n  });\n","import { getPluginType, PlateEditor, TDescendant } from '@udecode/plate-core';\nimport { ELEMENT_MENTION_INPUT } from '../createMentionPlugin';\nimport { MentionInputNode } from '../types';\n\nexport const isNodeMentionInput = (\n  editor: PlateEditor,\n  node: TDescendant\n): node is MentionInputNode => {\n  return node.type === getPluginType(editor, ELEMENT_MENTION_INPUT);\n};\n","import { PlateEditor } from '@udecode/plate-core';\nimport { findMentionInput } from './findMentionInput';\n\nexport const isSelectionInMentionInput = (editor: PlateEditor) =>\n  findMentionInput(editor) !== undefined;\n","import { PlateEditor, TDescendant } from '@udecode/plate-core';\nimport { Editor, Node, Path, Transforms } from 'slate';\n\nexport const removeMentionInput = (editor: PlateEditor, path: Path) =>\n  Editor.withoutNormalizing(editor, () => {\n    const { trigger } = Node.get(editor, path) as TDescendant;\n\n    Transforms.insertText(editor, trigger, {\n      at: { path: [...path, 0], offset: 0 },\n    });\n    Transforms.unwrapNodes(editor, {\n      at: path,\n    });\n  });\n","import { comboboxStore } from '@udecode/plate-combobox';\nimport { getPlugin, insertNodes, WithOverride } from '@udecode/plate-core';\nimport { Editor, Node, Range, Transforms } from 'slate';\nimport { HistoryEditor } from 'slate-history';\nimport { removeMentionInput } from './transforms/removeMentionInput';\nimport { ELEMENT_MENTION_INPUT } from './createMentionPlugin';\nimport {\n  findMentionInput,\n  isNodeMentionInput,\n  isSelectionInMentionInput,\n} from './queries';\nimport { MentionInputNode, MentionPlugin } from './types';\n\nexport const withMention: WithOverride<{}, MentionPlugin> = (\n  editor,\n  { options: { id, trigger } }\n) => {\n  const { type } = getPlugin(editor, ELEMENT_MENTION_INPUT);\n\n  const { apply, insertText, deleteBackward } = editor;\n\n  editor.deleteBackward = (unit) => {\n    const currentMentionInput = findMentionInput(editor);\n    if (currentMentionInput && Node.string(currentMentionInput[0]) === '') {\n      return removeMentionInput(editor, currentMentionInput[1]);\n    }\n\n    deleteBackward(unit);\n  };\n\n  editor.insertText = (text) => {\n    if (isSelectionInMentionInput(editor)) {\n      return Transforms.insertText(editor, text);\n    }\n\n    if (!editor.selection || text !== trigger) {\n      return insertText(text);\n    }\n\n    // Make sure a mention input is created at the beginning of line or after a whitespace\n    const previousCharLocation = Editor.before(editor, editor.selection);\n    if (previousCharLocation) {\n      const previousChar = Editor.string(\n        editor,\n        Editor.range(editor, editor.selection, previousCharLocation)\n      );\n      if (previousChar !== '' && previousChar !== ' ') {\n        return insertText(text);\n      }\n    }\n\n    insertNodes<MentionInputNode>(editor, {\n      type,\n      children: [{ text: '' }],\n      trigger,\n    });\n  };\n\n  editor.apply = (operation) => {\n    if (HistoryEditor.isHistoryEditor(editor) && findMentionInput(editor)) {\n      HistoryEditor.withoutSaving(editor, () => apply(operation));\n    } else {\n      apply(operation);\n    }\n\n    if (operation.type === 'insert_text' || operation.type === 'remove_text') {\n      const currentMentionInput = findMentionInput(editor);\n      if (currentMentionInput) {\n        comboboxStore.set.text(Node.string(currentMentionInput[0]));\n      }\n    } else if (operation.type === 'set_selection') {\n      const previousMentionInputPath = Range.isRange(operation.properties)\n        ? findMentionInput(editor, { at: operation.properties })?.[1]\n        : undefined;\n\n      const currentMentionInputPath = Range.isRange(operation.newProperties)\n        ? findMentionInput(editor, { at: operation.newProperties })?.[1]\n        : undefined;\n\n      if (previousMentionInputPath && !currentMentionInputPath) {\n        removeMentionInput(editor, previousMentionInputPath);\n      }\n\n      if (currentMentionInputPath) {\n        comboboxStore.set.targetRange(editor.selection);\n      }\n    } else if (\n      operation.type === 'insert_node' &&\n      isNodeMentionInput(editor, operation.node)\n    ) {\n      if (operation.node.trigger !== trigger) {\n        return;\n      }\n\n      comboboxStore.set.open({\n        activeId: id!,\n        text: '',\n        targetRange: editor.selection,\n      });\n    } else if (\n      operation.type === 'remove_node' &&\n      isNodeMentionInput(editor, operation.node)\n    ) {\n      if (operation.node.trigger !== trigger) {\n        return;\n      }\n\n      comboboxStore.set.reset();\n    }\n  };\n\n  return editor;\n};\n","import { createPluginFactory } from '@udecode/plate-core';\nimport { moveSelectionByOffset } from './moveSelectionByOffset';\nimport { isSelectionInMentionInput } from './queries';\nimport { MentionPlugin } from './types';\nimport { withMention } from './withMention';\n\nexport const ELEMENT_MENTION = 'mention';\nexport const ELEMENT_MENTION_INPUT = 'mention_input';\n\n/**\n * Enables support for autocompleting @mentions.\n */\nexport const createMentionPlugin = createPluginFactory<MentionPlugin>({\n  key: ELEMENT_MENTION,\n  isElement: true,\n  isInline: true,\n  isVoid: true,\n  handlers: {\n    onKeyDown: (editor) =>\n      moveSelectionByOffset(editor, { query: isSelectionInMentionInput }),\n  },\n  withOverrides: withMention,\n  options: {\n    trigger: '@',\n    createMentionNode: (item) => ({ value: item.text }),\n  },\n  plugins: [\n    {\n      key: ELEMENT_MENTION_INPUT,\n      isElement: true,\n      isInline: true,\n    },\n  ],\n  then: (editor, { key }) => ({\n    options: {\n      id: key,\n    },\n  }),\n});\n","import {\n  ComboboxOnSelectItem,\n  comboboxStore,\n  Data,\n  NoData,\n  TComboboxItem,\n} from '@udecode/plate-combobox';\nimport {\n  getBlockAbove,\n  getPlugin,\n  insertNodes,\n  PlatePluginKey,\n} from '@udecode/plate-core';\nimport { Editor, Transforms } from 'slate';\nimport { ELEMENT_MENTION, ELEMENT_MENTION_INPUT } from './createMentionPlugin';\nimport { MentionNode, MentionNodeData, MentionPlugin } from './types';\n\nexport interface CreateMentionNode<TData extends Data> {\n  (item: TComboboxItem<TData>): MentionNodeData;\n}\n\nexport const getMentionOnSelectItem = <TData extends Data = NoData>({\n  key = ELEMENT_MENTION,\n}: PlatePluginKey = {}): ComboboxOnSelectItem<TData> => (editor, item) => {\n  const targetRange = comboboxStore.get.targetRange();\n  if (!targetRange) return;\n\n  const {\n    type,\n    options: { insertSpaceAfterMention, createMentionNode },\n  } = getPlugin<MentionPlugin>(editor, key);\n\n  const pathAbove = getBlockAbove(editor)?.[1];\n  const isBlockEnd =\n    editor.selection &&\n    pathAbove &&\n    Editor.isEnd(editor, editor.selection.anchor, pathAbove);\n\n  Editor.withoutNormalizing(editor, () => {\n    // insert a space to fix the bug\n    if (isBlockEnd) {\n      Transforms.insertText(editor, ' ');\n    }\n\n    // select the text and insert the element\n    Transforms.select(editor, targetRange);\n\n    Transforms.removeNodes(editor, {\n      // TODO: replace any\n      match: (node: any) => node.type === ELEMENT_MENTION_INPUT,\n    });\n\n    insertNodes<MentionNode>(editor, {\n      type: type!,\n      children: [{ text: '' }],\n      ...createMentionNode!(item),\n    });\n    // move the selection after the element\n    Transforms.move(editor);\n\n    // delete the inserted space\n    if (isBlockEnd && !insertSpaceAfterMention) {\n      Transforms.delete(editor);\n    }\n  });\n  return comboboxStore.set.reset();\n};\n"],"names":["moveSelectionByOffset","editor","query","event","selection","Range","isExpanded","key","preventDefault","Transforms","move","unit","reverse","findMentionInput","options","findNode","match","type","getPluginType","ELEMENT_MENTION_INPUT","isNodeMentionInput","node","isSelectionInMentionInput","undefined","removeMentionInput","path","Editor","withoutNormalizing","trigger","Node","get","insertText","at","offset","unwrapNodes","withMention","id","getPlugin","apply","deleteBackward","currentMentionInput","string","text","previousCharLocation","before","previousChar","range","insertNodes","children","operation","HistoryEditor","isHistoryEditor","withoutSaving","comboboxStore","set","previousMentionInputPath","isRange","properties","currentMentionInputPath","newProperties","targetRange","open","activeId","reset","ELEMENT_MENTION","createMentionPlugin","createPluginFactory","isElement","isInline","isVoid","handlers","onKeyDown","withOverrides","createMentionNode","item","value","plugins","then","getMentionOnSelectItem","insertSpaceAfterMention","pathAbove","getBlockAbove","isBlockEnd","isEnd","anchor","select","removeNodes","delete"],"mappings":"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"}