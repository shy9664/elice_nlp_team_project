{"version":3,"file":"index.js","sources":["../src/queries/getCellInNextTableRow.ts","../src/queries/getNextTableCell.ts","../src/queries/getCellInPreviousTableRow.ts","../src/queries/getPreviousTableCell.ts","../src/queries/getTableCellEntry.ts","../src/onKeyDownTable.ts","../src/withTable.ts","../src/createTablePlugin.ts","../src/queries/getTableColumnCount.ts","../src/queries/getTableColumnIndex.ts","../src/utils/getEmptyCellNode.ts","../src/transforms/addColumn.ts","../src/utils/getEmptyRowNode.ts","../src/transforms/addRow.ts","../src/transforms/deleteColumn.ts","../src/transforms/deleteRow.ts","../src/transforms/deleteTable.ts","../src/utils/getEmptyTableNode.ts","../src/transforms/insertTable.ts","../src/transforms/setTableColSize.ts"],"sourcesContent":["import { TEditor } from '@udecode/plate-core';\nimport { Ancestor, Editor, NodeEntry, Path } from 'slate';\n\nexport function getCellInNextTableRow(\n  editor: TEditor,\n  currentRowPath: Path\n): NodeEntry | undefined {\n  try {\n    const nextRow = Editor.node(\n      editor,\n      Path.next(currentRowPath)\n    ) as NodeEntry<Ancestor>;\n    // TODO: Many tables in rich text editors (Google Docs, Word),\n    // add a new row if we're in the last cell. Should we do the same?\n    const [nextRowNode, nextRowPath] = nextRow;\n    const nextCell = nextRowNode?.children?.[0];\n    const nextCellPath = nextRowPath.concat(0);\n    if (nextCell && nextCellPath) {\n      return Editor.node(editor, nextCellPath);\n    }\n  } catch (err) {}\n}\n","import { TEditor } from '@udecode/plate-core';\nimport { Editor, NodeEntry, Path } from 'slate';\nimport { getCellInNextTableRow } from './getCellInNextTableRow';\n\nexport function getNextTableCell(\n  editor: TEditor,\n  currentCell: NodeEntry,\n  currentPath: Path,\n  currentRow: NodeEntry\n): NodeEntry | undefined {\n  try {\n    return Editor.node(editor, Path.next(currentPath));\n  } catch (err) {\n    const [, currentRowPath] = currentRow;\n    return getCellInNextTableRow(editor, currentRowPath);\n  }\n}\n","import { TEditor } from '@udecode/plate-core';\nimport { Ancestor, Editor, NodeEntry, Path } from 'slate';\n\nexport function getCellInPreviousTableRow(\n  editor: TEditor,\n  currentRowPath: Path\n): NodeEntry | undefined {\n  try {\n    const previousRow = Editor.node(\n      editor,\n      Path.previous(currentRowPath)\n    ) as NodeEntry<Ancestor>;\n    const [previousRowNode, previousRowPath] = previousRow;\n    const previousCell =\n      previousRowNode?.children?.[previousRowNode.children.length - 1];\n    const previousCellPath = previousRowPath.concat(\n      previousRowNode.children.length - 1\n    );\n    if (previousCell && previousCellPath) {\n      return Editor.node(editor, previousCellPath);\n    }\n  } catch (err) {}\n}\n","import { TEditor } from '@udecode/plate-core';\nimport { Editor, NodeEntry, Path } from 'slate';\nimport { getCellInPreviousTableRow } from './getCellInPreviousTableRow';\n\nexport function getPreviousTableCell(\n  editor: TEditor,\n  currentCell: NodeEntry,\n  currentPath: Path,\n  currentRow: NodeEntry\n): NodeEntry | undefined {\n  try {\n    return Editor.node(editor, Path.previous(currentPath));\n  } catch (err) {\n    const [, currentRowPath] = currentRow;\n    return getCellInPreviousTableRow(editor, currentRowPath);\n  }\n}\n","import {\n  getAbove,\n  getParent,\n  getPluginType,\n  PlateEditor,\n  someNode,\n} from '@udecode/plate-core';\nimport { Location } from 'slate';\nimport { ELEMENT_TD, ELEMENT_TH, ELEMENT_TR } from '../createTablePlugin';\n\n/**\n * If at (default = selection) is in table>tr>td or table>tr>th,\n * return table, tr, and td or th node entries.\n */\nexport const getTableCellEntry = <T = {}>(\n  editor: PlateEditor<T>,\n  { at = editor.selection }: { at?: Location | null } = {}\n) => {\n  if (\n    at &&\n    someNode(editor, {\n      at,\n      match: {\n        type: [\n          getPluginType(editor, ELEMENT_TD),\n          getPluginType(editor, ELEMENT_TH),\n        ],\n      },\n    })\n  ) {\n    const selectionParent = getParent(editor, at);\n    if (!selectionParent) return;\n    const [, paragraphPath] = selectionParent;\n\n    const tableCell =\n      getAbove(editor, {\n        at,\n        match: {\n          type: [\n            getPluginType(editor, ELEMENT_TD),\n            getPluginType(editor, ELEMENT_TH),\n          ],\n        },\n      }) || getParent(editor, paragraphPath);\n\n    if (!tableCell) return;\n    const [tableCellNode, tableCellPath] = tableCell;\n\n    if (\n      tableCellNode.type !== getPluginType(editor, ELEMENT_TD) &&\n      tableCellNode.type !== getPluginType(editor, ELEMENT_TH)\n    )\n      return;\n\n    const tableRow = getParent(editor, tableCellPath);\n    if (!tableRow) return;\n    const [tableRowNode, tableRowPath] = tableRow;\n\n    if (tableRowNode.type !== getPluginType(editor, ELEMENT_TR)) return;\n\n    const tableElement = getParent(editor, tableRowPath);\n    if (!tableElement) return;\n\n    return {\n      tableElement,\n      tableRow,\n      tableCell,\n    };\n  }\n};\n","import { getAbove, KeyboardHandler, TElement } from '@udecode/plate-core';\nimport { Transforms } from 'slate';\nimport { getNextTableCell } from './queries/getNextTableCell';\nimport { getPreviousTableCell } from './queries/getPreviousTableCell';\nimport { getTableCellEntry } from './queries/getTableCellEntry';\n\nexport const onKeyDownTable: KeyboardHandler = (editor, { type }) => (e) => {\n  if (e.key === 'Tab') {\n    e.preventDefault();\n    const res = getTableCellEntry(editor, {});\n    if (!res) return;\n    const { tableRow, tableCell } = res;\n    const [, tableCellPath] = tableCell;\n    const shiftTab = e.shiftKey;\n    const tab = !e.shiftKey;\n    if (shiftTab) {\n      // move left with shift+tab\n      const previousCell = getPreviousTableCell(\n        editor,\n        tableCell,\n        tableCellPath,\n        tableRow\n      );\n      if (previousCell) {\n        const [, previousCellPath] = previousCell;\n        Transforms.select(editor, previousCellPath);\n      }\n    } else if (tab) {\n      // move right with tab\n      const nextCell = getNextTableCell(\n        editor,\n        tableCell,\n        tableCellPath,\n        tableRow\n      );\n      if (nextCell) {\n        const [, nextCellPath] = nextCell;\n        Transforms.select(editor, nextCellPath);\n      }\n    }\n  }\n\n  // FIXME: would prefer this as mod+a, but doesn't work\n  if (e.key === 'a' && (e.metaKey || e.ctrlKey)) {\n    const res = getAbove<TElement>(editor, { match: { type } });\n    if (!res) return;\n\n    const [, tablePath] = res;\n\n    // select the whole table\n    Transforms.select(editor, tablePath);\n\n    e.preventDefault();\n    e.stopPropagation();\n  }\n};\n","import {\n  getPluginType,\n  isCollapsed,\n  isElement,\n  TElement,\n  WithOverride,\n} from '@udecode/plate-core';\nimport { Editor, Node, Point, Transforms } from 'slate';\nimport { ELEMENT_TD, ELEMENT_TH } from './createTablePlugin';\n\nexport const withTable: WithOverride = (editor) => {\n  const matchCells = (node: Node) => {\n    return (\n      isElement(node) &&\n      (node.type === getPluginType(editor, ELEMENT_TD) ||\n        node.type === getPluginType(editor, ELEMENT_TH))\n    );\n  };\n\n  const { deleteBackward, deleteForward, deleteFragment, insertText } = editor;\n\n  const preventDeleteCell = (\n    operation: any,\n    pointCallback: any,\n    nextPoint: any\n  ) => (unit: any) => {\n    const { selection } = editor;\n\n    if (isCollapsed(selection)) {\n      const [cell] = Editor.nodes<TElement>(editor, {\n        match: matchCells,\n      });\n      if (cell) {\n        // Prevent deletions within a cell\n        const [, cellPath] = cell;\n        const start = pointCallback(editor, cellPath);\n\n        if (selection && Point.equals(selection.anchor, start)) {\n          return;\n        }\n      } else {\n        // Prevent deleting cell when selection is before or after a table\n        const next = nextPoint(editor, selection, { unit });\n        const [nextCell] = Editor.nodes(editor, {\n          match: matchCells,\n          at: next,\n        });\n        if (nextCell) return;\n      }\n    }\n\n    operation(unit);\n  };\n\n  editor.deleteFragment = () => {\n    const { selection } = editor;\n    const [start] = Editor.nodes(editor, {\n      match: matchCells,\n      at: selection?.anchor.path,\n    });\n    const [end] = Editor.nodes(editor, {\n      match: matchCells,\n      at: selection?.focus.path,\n    });\n    // Skip deletes if they start or end in a table cell, unless start & end in the same cell\n    if ((start || end) && start?.[0] !== end?.[0]) {\n      // Clear cells content\n      const cells = Editor.nodes(editor, {\n        match: matchCells,\n      });\n      for (const [, path] of cells) {\n        for (const [, childPath] of Node.children(editor, path, {\n          reverse: true,\n        })) {\n          Transforms.removeNodes(editor, { at: childPath });\n        }\n      }\n      Transforms.collapse(editor);\n      return;\n    }\n    deleteFragment();\n  };\n\n  editor.insertText = (text) => {\n    const { selection } = editor;\n    const [start] = Editor.nodes(editor, {\n      match: matchCells,\n      at: selection?.anchor.path,\n    });\n    const [end] = Editor.nodes(editor, {\n      match: matchCells,\n      at: selection?.focus.path,\n    });\n    // Collapse selection if multiple cells are selected to avoid breaking the table\n    if (!isCollapsed(selection) && (start || end) && start?.[0] !== end?.[0]) {\n      const [cell] = Editor.nodes(editor, { match: matchCells });\n      if (cell) {\n        Transforms.collapse(editor, { edge: 'end' });\n        insertText(text);\n        return;\n      }\n    }\n    insertText(text);\n  };\n\n  // prevent deleting cells with deleteBackward\n  editor.deleteBackward = preventDeleteCell(\n    deleteBackward,\n    Editor.start,\n    Editor.before\n  );\n\n  // prevent deleting cells with deleteForward\n  editor.deleteForward = preventDeleteCell(\n    deleteForward,\n    Editor.end,\n    Editor.after\n  );\n\n  return editor;\n};\n","import { createPluginFactory } from '@udecode/plate-core';\nimport { onKeyDownTable } from './onKeyDownTable';\nimport { withTable } from './withTable';\n\nexport const ELEMENT_TABLE = 'table';\nexport const ELEMENT_TH = 'th';\nexport const ELEMENT_TR = 'tr';\nexport const ELEMENT_TD = 'td';\n\n/**\n * Enables support for tables.\n */\nexport const createTablePlugin = createPluginFactory({\n  key: ELEMENT_TABLE,\n  isElement: true,\n  handlers: {\n    onKeyDown: onKeyDownTable,\n  },\n  deserializeHtml: {\n    validNodeName: 'TABLE',\n  },\n  withOverrides: withTable,\n  plugins: [\n    {\n      key: ELEMENT_TR,\n      isElement: true,\n      deserializeHtml: {\n        validNodeName: 'TR',\n      },\n    },\n    {\n      key: ELEMENT_TD,\n      isElement: true,\n      deserializeHtml: {\n        attributeNames: ['rowspan', 'colspan'],\n        validNodeName: 'TD',\n      },\n      props: ({ element }) => ({\n        nodeProps: {\n          colSpan: element?.attributes?.colspan,\n          rowSpan: element?.attributes?.rowspan,\n        },\n      }),\n    },\n    {\n      key: ELEMENT_TH,\n      isElement: true,\n      deserializeHtml: {\n        attributeNames: ['rowspan', 'colspan'],\n        validNodeName: 'TH',\n      },\n      props: ({ element }) => ({\n        nodeProps: {\n          colSpan: element?.attributes?.colspan,\n          rowSpan: element?.attributes?.rowspan,\n        },\n      }),\n    },\n  ],\n});\n","import { TElement } from '@udecode/plate-core';\n\nexport const getTableColumnCount = (tableNode: TElement) => {\n  return tableNode.children[0]?.children.length ?? 0;\n};\n","import { findNodePath, getParent, TElement } from '@udecode/plate-core';\nimport { ReactEditor } from 'slate-react';\n\n/**\n * Get table column index of a cell node.\n */\nexport const getTableColumnIndex = (\n  editor: ReactEditor,\n  { node }: { node: TElement }\n) => {\n  const path = findNodePath(editor, node);\n  if (!path) return 0;\n\n  const [trNode] = getParent(editor, path) ?? [];\n  if (!trNode) return 0;\n\n  let colIndex = 0;\n\n  trNode.children.some((item, index) => {\n    if (item === node) {\n      colIndex = index;\n      return true;\n    }\n    return false;\n  });\n\n  return colIndex;\n};\n","import {\n  ELEMENT_DEFAULT,\n  getPluginType,\n  PlateEditor,\n} from '@udecode/plate-core';\nimport { ELEMENT_TD, ELEMENT_TH } from '../createTablePlugin';\nimport { TablePluginOptions } from '../types';\n\nexport const getEmptyCellNode = (\n  editor: PlateEditor,\n  { header }: TablePluginOptions\n) => {\n  return {\n    type: header\n      ? getPluginType(editor, ELEMENT_TH)\n      : getPluginType(editor, ELEMENT_TD),\n    children: [\n      {\n        type: getPluginType(editor, ELEMENT_DEFAULT),\n        children: [{ text: '' }],\n      },\n    ],\n  };\n};\n","import {\n  getAbove,\n  getPluginType,\n  insertNodes,\n  PlateEditor,\n  someNode,\n  TElement,\n} from '@udecode/plate-core';\nimport { Path } from 'slate';\nimport { ELEMENT_TABLE, ELEMENT_TD, ELEMENT_TH } from '../createTablePlugin';\nimport { TablePluginOptions } from '../types';\nimport { getEmptyCellNode } from '../utils/getEmptyCellNode';\n\nexport const addColumn = (\n  editor: PlateEditor,\n  { header }: TablePluginOptions\n) => {\n  if (\n    someNode(editor, {\n      match: { type: getPluginType(editor, ELEMENT_TABLE) },\n    })\n  ) {\n    const currentCellItem = getAbove(editor, {\n      match: {\n        type: [\n          getPluginType(editor, ELEMENT_TH),\n          getPluginType(editor, ELEMENT_TD),\n        ],\n      },\n    });\n\n    const currentTableItem = getAbove(editor, {\n      match: { type: getPluginType(editor, ELEMENT_TABLE) },\n    });\n\n    if (currentCellItem && currentTableItem) {\n      const nextCellPath = Path.next(currentCellItem[1]);\n      const newCellPath = nextCellPath.slice();\n      const replacePathPos = newCellPath.length - 2;\n      const currentRowIdx = nextCellPath[replacePathPos];\n\n      currentTableItem[0].children.forEach((row: TElement, rowIdx) => {\n        newCellPath[replacePathPos] = rowIdx;\n        const isHeaderRow =\n          header === undefined ? row.children[0].type === ELEMENT_TH : header;\n\n        insertNodes<TElement>(\n          editor,\n          getEmptyCellNode(editor, { header: isHeaderRow }),\n          {\n            at: newCellPath,\n            select: rowIdx === currentRowIdx,\n          }\n        );\n      });\n    }\n  }\n};\n","import { getPluginType, PlateEditor } from '@udecode/plate-core';\nimport { ELEMENT_TR } from '../createTablePlugin';\nimport { TablePluginOptions } from '../types';\nimport { getEmptyCellNode } from './getEmptyCellNode';\n\nexport const getEmptyRowNode = (\n  editor: PlateEditor,\n  { header, colCount }: TablePluginOptions & { colCount: number }\n) => {\n  return {\n    type: getPluginType(editor, ELEMENT_TR),\n    children: Array(colCount)\n      .fill(colCount)\n      .map(() => getEmptyCellNode(editor, { header })),\n  };\n};\n","import {\n  getAbove,\n  getPluginType,\n  insertNodes,\n  PlateEditor,\n  someNode,\n  TElement,\n} from '@udecode/plate-core';\nimport { Path } from 'slate';\nimport { ELEMENT_TABLE, ELEMENT_TR } from '../createTablePlugin';\nimport { TablePluginOptions } from '../types';\nimport { getEmptyRowNode } from '../utils/getEmptyRowNode';\n\nexport const addRow = (editor: PlateEditor, { header }: TablePluginOptions) => {\n  if (\n    someNode(editor, {\n      match: { type: getPluginType(editor, ELEMENT_TABLE) },\n    })\n  ) {\n    const currentRowItem = getAbove(editor, {\n      match: { type: getPluginType(editor, ELEMENT_TR) },\n    });\n    if (currentRowItem) {\n      const [currentRowElem, currentRowPath] = currentRowItem;\n      insertNodes<TElement>(\n        editor,\n        getEmptyRowNode(editor, {\n          header,\n          colCount: currentRowElem.children.length,\n        }),\n        {\n          at: Path.next(currentRowPath),\n          select: true,\n        }\n      );\n    }\n  }\n};\n","import {\n  getAbove,\n  getPluginType,\n  PlateEditor,\n  someNode,\n} from '@udecode/plate-core';\nimport { Transforms } from 'slate';\nimport {\n  ELEMENT_TABLE,\n  ELEMENT_TD,\n  ELEMENT_TH,\n  ELEMENT_TR,\n} from '../createTablePlugin';\n\nexport const deleteColumn = (editor: PlateEditor) => {\n  if (\n    someNode(editor, {\n      match: { type: getPluginType(editor, ELEMENT_TABLE) },\n    })\n  ) {\n    const currentCellItem = getAbove(editor, {\n      match: {\n        type: [\n          getPluginType(editor, ELEMENT_TD),\n          getPluginType(editor, ELEMENT_TH),\n        ],\n      },\n    });\n    const currentRowItem = getAbove(editor, {\n      match: { type: getPluginType(editor, ELEMENT_TR) },\n    });\n    const currentTableItem = getAbove(editor, {\n      match: { type: getPluginType(editor, ELEMENT_TABLE) },\n    });\n\n    if (\n      currentCellItem &&\n      currentRowItem &&\n      currentTableItem &&\n      // Cannot delete the last cell\n      currentRowItem[0].children.length > 1\n    ) {\n      const currentCellPath = currentCellItem[1];\n      const pathToDelete = currentCellPath.slice();\n      const replacePathPos = pathToDelete.length - 2;\n\n      currentTableItem[0].children.forEach((row, rowIdx) => {\n        pathToDelete[replacePathPos] = rowIdx;\n\n        Transforms.removeNodes(editor, {\n          at: pathToDelete,\n        });\n      });\n    }\n  }\n};\n","import {\n  getAbove,\n  getPluginType,\n  PlateEditor,\n  someNode,\n} from '@udecode/plate-core';\nimport { Transforms } from 'slate';\nimport { ELEMENT_TABLE, ELEMENT_TR } from '../createTablePlugin';\n\nexport const deleteRow = (editor: PlateEditor) => {\n  if (\n    someNode(editor, {\n      match: { type: getPluginType(editor, ELEMENT_TABLE) },\n    })\n  ) {\n    const currentTableItem = getAbove(editor, {\n      match: { type: getPluginType(editor, ELEMENT_TABLE) },\n    });\n    const currentRowItem = getAbove(editor, {\n      match: { type: getPluginType(editor, ELEMENT_TR) },\n    });\n    if (\n      currentRowItem &&\n      currentTableItem &&\n      // Cannot delete the last row\n      currentTableItem[0].children.length > 1\n    ) {\n      Transforms.removeNodes(editor, {\n        at: currentRowItem[1],\n      });\n    }\n  }\n};\n","import {\n  getAbove,\n  getPluginType,\n  PlateEditor,\n  someNode,\n} from '@udecode/plate-core';\nimport { Transforms } from 'slate';\nimport { ELEMENT_TABLE } from '../createTablePlugin';\n\nexport const deleteTable = (editor: PlateEditor) => {\n  if (\n    someNode(editor, {\n      match: { type: getPluginType(editor, ELEMENT_TABLE) },\n    })\n  ) {\n    const tableItem = getAbove(editor, {\n      match: { type: getPluginType(editor, ELEMENT_TABLE) },\n    });\n    if (tableItem) {\n      Transforms.removeNodes(editor, {\n        at: tableItem[1],\n      });\n    }\n  }\n};\n","import { getPluginType, PlateEditor } from '@udecode/plate-core';\nimport { ELEMENT_TABLE } from '../createTablePlugin';\nimport { TablePluginOptions } from '../types';\nimport { getEmptyRowNode } from './getEmptyRowNode';\n\nexport const getEmptyTableNode = (\n  editor: PlateEditor,\n  { header }: TablePluginOptions\n) => {\n  return {\n    type: getPluginType(editor, ELEMENT_TABLE),\n    children: [\n      getEmptyRowNode(editor, { header, colCount: 2 }),\n      getEmptyRowNode(editor, { header: false, colCount: 2 }),\n    ],\n  };\n};\n","import {\n  getPluginType,\n  insertNodes,\n  PlateEditor,\n  someNode,\n  TElement,\n} from '@udecode/plate-core';\nimport { ELEMENT_TABLE } from '../createTablePlugin';\nimport { TablePluginOptions } from '../types';\nimport { getEmptyTableNode } from '../utils/getEmptyTableNode';\n\nexport const insertTable = (\n  editor: PlateEditor,\n  { header }: TablePluginOptions\n) => {\n  if (\n    !someNode(editor, {\n      match: { type: getPluginType(editor, ELEMENT_TABLE) },\n    })\n  ) {\n    insertNodes<TElement>(editor, getEmptyTableNode(editor, { header }));\n  }\n};\n","import {\n  EditorAboveOptions,\n  findNode,\n  setNodes,\n  TEditor,\n  TElement,\n} from '@udecode/plate-core';\nimport { ELEMENT_TABLE } from '../createTablePlugin';\nimport { getTableColumnCount } from '../queries/getTableColumnCount';\nimport { TableNodeData } from '../types';\n\nexport const setTableColSize = (\n  editor: TEditor,\n  { colIndex, width }: { colIndex: number; width: number },\n  options: EditorAboveOptions = {}\n) => {\n  const table = findNode<TElement<TableNodeData>>(editor, {\n    ...options,\n    match: { type: ELEMENT_TABLE },\n  });\n  if (!table) return;\n\n  const [tableNode, tablePath] = table;\n\n  const colSizes = tableNode.colSizes\n    ? [...tableNode.colSizes]\n    : Array(getTableColumnCount(tableNode)).fill(0);\n\n  colSizes[colIndex] = width;\n\n  setNodes(editor, { colSizes }, { at: tablePath });\n};\n"],"names":["getCellInNextTableRow","editor","currentRowPath","nextRow","Editor","node","Path","next","nextRowNode","nextRowPath","nextCell","children","nextCellPath","concat","err","getNextTableCell","currentCell","currentPath","currentRow","getCellInPreviousTableRow","previousRow","previous","previousRowNode","previousRowPath","previousCell","length","previousCellPath","getPreviousTableCell","getTableCellEntry","at","selection","someNode","match","type","getPluginType","ELEMENT_TD","ELEMENT_TH","selectionParent","getParent","paragraphPath","tableCell","getAbove","tableCellNode","tableCellPath","tableRow","tableRowNode","tableRowPath","ELEMENT_TR","tableElement","onKeyDownTable","e","key","preventDefault","res","shiftTab","shiftKey","tab","Transforms","select","metaKey","ctrlKey","tablePath","stopPropagation","withTable","matchCells","isElement","deleteBackward","deleteForward","deleteFragment","insertText","preventDeleteCell","operation","pointCallback","nextPoint","unit","isCollapsed","cell","nodes","cellPath","start","Point","equals","anchor","path","end","focus","cells","childPath","Node","reverse","removeNodes","collapse","text","edge","before","after","ELEMENT_TABLE","createTablePlugin","createPluginFactory","handlers","onKeyDown","deserializeHtml","validNodeName","withOverrides","plugins","attributeNames","props","element","nodeProps","colSpan","attributes","colspan","rowSpan","rowspan","getTableColumnCount","tableNode","getTableColumnIndex","findNodePath","trNode","colIndex","some","item","index","getEmptyCellNode","header","ELEMENT_DEFAULT","addColumn","currentCellItem","currentTableItem","newCellPath","slice","replacePathPos","currentRowIdx","forEach","row","rowIdx","isHeaderRow","undefined","insertNodes","getEmptyRowNode","colCount","Array","fill","map","addRow","currentRowItem","currentRowElem","deleteColumn","currentCellPath","pathToDelete","deleteRow","deleteTable","tableItem","getEmptyTableNode","insertTable","setTableColSize","width","options","table","findNode","colSizes","setNodes"],"mappings":"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"}