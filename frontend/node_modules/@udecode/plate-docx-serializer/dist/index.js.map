{"version":3,"file":"index.js","sources":["../src/docx-cleaner/utils/isHtmlBlockElement.ts","../src/docx-cleaner/utils/traverseHtmlNode.ts","../src/docx-cleaner/utils/traverseHtmlElements.ts","../src/docx-cleaner/utils/copyBlockMarksToSpanChild.ts","../src/docx-cleaner/utils/traverseHtmlComments.ts","../src/docx-cleaner/utils/removeHtmlNodesBetweenComments.ts","../src/docx-cleaner/utils/cleanDocxBrComments.ts","../src/docx-cleaner/constants.ts","../src/docx-cleaner/utils/cleanDocxEmptyParagraphs.ts","../src/docx-cleaner/utils/isDocxFootnote.ts","../src/docx-cleaner/utils/cleanDocxFootnotes.ts","../../../../node_modules/validator/lib/util/assertString.js","../../../../node_modules/validator/lib/util/merge.js","../../../../node_modules/validator/lib/isFQDN.js","../../../../node_modules/validator/lib/isIP.js","../../../../node_modules/validator/lib/isURL.js","../src/docx-cleaner/utils/getRtfImageHex.ts","../src/docx-cleaner/utils/getRtfImageMimeType.ts","../src/docx-cleaner/utils/getRtfImageSpid.ts","../src/docx-cleaner/utils/getRtfImagesByType.ts","../src/docx-cleaner/utils/getRtfImagesMap.ts","../src/docx-cleaner/utils/getHtmlComments.ts","../src/docx-cleaner/utils/getVShapes.ts","../src/docx-cleaner/utils/getVShapeSpid.ts","../src/docx-cleaner/utils/hexToBase64.ts","../src/docx-cleaner/utils/cleanDocxImageElements.ts","../src/docx-cleaner/utils/cleanDocxListElements.ts","../src/docx-cleaner/utils/getDocxListContentHtml.ts","../src/docx-cleaner/utils/getDocxListIndent.ts","../src/docx-cleaner/utils/isDocxBookmark.ts","../src/docx-cleaner/utils/isDocxList.ts","../src/docx-cleaner/utils/getDocxListNode.ts","../src/docx-cleaner/utils/isOlSymbol.ts","../src/docx-cleaner/utils/isDocxOl.ts","../src/docx-cleaner/utils/docxListToList.ts","../src/docx-cleaner/utils/cleanDocxListElementsToList.ts","../src/docx-cleaner/utils/replaceTagName.ts","../src/docx-cleaner/utils/cleanDocxQuotes.ts","../src/docx-cleaner/utils/generateSpaces.ts","../src/docx-cleaner/utils/cleanDocxSpacerun.ts","../src/docx-cleaner/utils/cleanDocxTabCount.ts","../src/docx-cleaner/utils/cleanDocxSpans.ts","../src/docx-cleaner/utils/cleanHtmlBrElements.ts","../src/docx-cleaner/utils/cleanHtmlCrLf.ts","../src/docx-cleaner/utils/cleanHtmlEmptyElements.ts","../src/docx-cleaner/utils/cleanHtmlFontElements.ts","../src/docx-cleaner/utils/isHtmlFragmentHref.ts","../src/docx-cleaner/utils/unwrapHtmlElement.ts","../src/docx-cleaner/utils/cleanHtmlLinkElements.ts","../src/docx-cleaner/utils/traverseHtmlTexts.ts","../src/docx-cleaner/utils/cleanHtmlTextNodes.ts","../src/docx-cleaner/utils/getDocxIndent.ts","../src/docx-cleaner/utils/getTextListStyleType.ts","../src/docx-cleaner/utils/isDocxContent.ts","../src/docx-cleaner/utils/postCleanHtml.ts","../src/docx-cleaner/utils/removeHtmlSurroundings.ts","../src/docx-cleaner/utils/preCleanHtml.ts","../src/docx-cleaner/cleanDocx.ts","../src/deserializer/createDeserializeDocxPlugin.ts"],"sourcesContent":["/**\n * Is the element a block element?\n */\nexport const isHtmlBlockElement = (element: Element) => {\n  const blockRegex = /^(address|blockquote|body|center|dir|div|dl|fieldset|form|h[1-6]|hr|isindex|menu|noframes|noscript|ol|p|pre|table|ul|dd|dt|frameset|li|tbody|td|tfoot|th|thead|tr|html)$/i;\n\n  return blockRegex.test(element.nodeName);\n};\n","type Callback = (node: Node) => boolean;\n\n/**\n * Depth-first pre-order tree traverse the given HTML node and calls the given callback for each node.\n * see: https://en.wikipedia.org/wiki/Tree_traversal#Pre-order_(NLR)\n *\n * @param callback returns a boolean indicating whether traversal should be continued\n */\nexport const traverseHtmlNode = (node: Node, callback: Callback): void => {\n  const keepTraversing = callback(node);\n\n  if (!keepTraversing) {\n    return;\n  }\n\n  let child = node.firstChild;\n\n  while (child) {\n    const currentChild = child;\n    const previousChild = child.previousSibling;\n    child = child.nextSibling;\n\n    traverseHtmlNode(currentChild, callback);\n\n    if (\n      // An unwrap was made. Need to compute the next child again.\n      !currentChild.previousSibling &&\n      !currentChild.nextSibling &&\n      !currentChild.parentNode &&\n      child &&\n      previousChild !== child.previousSibling &&\n      child.parentNode\n    ) {\n      if (previousChild) {\n        child = previousChild.nextSibling;\n      } else {\n        child = node.firstChild;\n      }\n    } else if (\n      // A list was created. Need to compute the next child again.\n      !currentChild.previousSibling &&\n      !currentChild.nextSibling &&\n      !currentChild.parentNode &&\n      child &&\n      !child.previousSibling &&\n      !child.nextSibling &&\n      !child.parentNode\n    ) {\n      if (previousChild) {\n        if (previousChild.nextSibling) {\n          child = previousChild.nextSibling.nextSibling;\n        } else {\n          child = null;\n        }\n      } else if (node.firstChild) {\n        child = node.firstChild.nextSibling;\n      }\n    }\n  }\n};\n","import { isHtmlElement } from '@udecode/plate-core';\nimport { traverseHtmlNode } from './traverseHtmlNode';\n\ntype Callback = (node: Element) => boolean;\n\n/**\n * Traverse the HTML elements of the given HTML node.\n * @param rootNode The root HTML node to traverse.\n * @param callback The callback to call for each HTML element.\n */\nexport const traverseHtmlElements = (\n  rootNode: Node,\n  callback: Callback\n): void => {\n  traverseHtmlNode(rootNode, (node) => {\n    if (!isHtmlElement(node)) {\n      return true;\n    }\n\n    return callback(node);\n  });\n};\n","import { isHtmlBlockElement } from './isHtmlBlockElement';\nimport { traverseHtmlElements } from './traverseHtmlElements';\n\n/**\n * Set HTML blocks mark styles to a new child span element if any.\n * This allows Plate to use block marks.\n */\nexport const copyBlockMarksToSpanChild = (rootNode: Node) => {\n  traverseHtmlElements(rootNode, (element) => {\n    const el = element as HTMLElement;\n\n    const styleAttribute = element.getAttribute('style');\n    if (!styleAttribute) return true;\n\n    if (isHtmlBlockElement(el)) {\n      const {\n        style: {\n          backgroundColor,\n          color,\n          fontFamily,\n          fontSize,\n          fontStyle,\n          fontWeight,\n          textDecoration,\n        },\n      } = el;\n\n      if (\n        backgroundColor ||\n        color ||\n        fontFamily ||\n        fontSize ||\n        fontStyle ||\n        fontWeight ||\n        textDecoration\n      ) {\n        const span = document.createElement('span');\n        if (!['initial', 'inherit'].includes(color)) {\n          span.style.color = color;\n        }\n        span.style.fontFamily = fontFamily;\n        span.style.fontSize = fontSize;\n        if (!['normal', 'initial', 'inherit'].includes(color)) {\n          span.style.fontStyle = fontStyle;\n        }\n        if (!['normal', 400].includes(fontWeight)) {\n          span.style.fontWeight = fontWeight;\n        }\n        span.style.textDecoration = textDecoration;\n\n        span.innerHTML = el.innerHTML;\n        element.innerHTML = span.outerHTML;\n      }\n    }\n    return true;\n  });\n};\n","import { isHtmlComment } from '@udecode/plate-core';\nimport { traverseHtmlNode } from './traverseHtmlNode';\n\ntype Callback = (node: Comment) => boolean;\n\n/**\n * Traverse HTML comments.\n */\nexport const traverseHtmlComments = (\n  rootNode: Node,\n  callback: Callback\n): void => {\n  traverseHtmlNode(rootNode, (node) => {\n    if (!isHtmlComment(node)) {\n      return true;\n    }\n\n    return callback(node);\n  });\n};\n","import { isHtmlComment } from '@udecode/plate-core';\nimport { traverseHtmlComments } from './traverseHtmlComments';\n\n/**\n * Removes HTML nodes between HTML comments.\n */\nexport const removeHtmlNodesBetweenComments = (\n  rootNode: Node,\n  start: string,\n  end: string\n): void => {\n  const isClosingComment = (node: Node) =>\n    isHtmlComment(node) && node.data === end;\n\n  traverseHtmlComments(rootNode, (comment) => {\n    if (comment.data === start) {\n      let node = comment.nextSibling;\n\n      comment.remove();\n\n      while (node && !isClosingComment(node)) {\n        const { nextSibling } = node;\n        node.remove();\n        node = nextSibling;\n      }\n\n      if (node && isClosingComment(node)) {\n        node.remove();\n      }\n    }\n\n    return true;\n  });\n};\n","import { isHtmlComment } from '@udecode/plate-core';\nimport { removeHtmlNodesBetweenComments } from './removeHtmlNodesBetweenComments';\nimport { traverseHtmlElements } from './traverseHtmlElements';\n\n/**\n * Remove HTML nodes between comments in the next sibling after BR.\n */\nexport const cleanDocxBrComments = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    if (element.tagName !== 'BR') {\n      return true;\n    }\n\n    if (\n      element.nextSibling &&\n      isHtmlComment(element.nextSibling) &&\n      element.nextSibling.data === '[if !supportLineBreakNewLine]'\n    ) {\n      removeHtmlNodesBetweenComments(\n        element.nextSibling,\n        '[if !supportLineBreakNewLine]',\n        '[endif]'\n      );\n    }\n\n    return false;\n  });\n};\n","export const CARRIAGE_RETURN = '\\u000D';\nexport const LINE_FEED = '\\u000A';\nexport const NO_BREAK_SPACE = '\\u00A0';\nexport const SPACE = '\\u0020';\nexport const TAB = '\\u0009';\nexport const ZERO_WIDTH_SPACE = '\\u200B';\n","import { NO_BREAK_SPACE } from '../constants';\nimport { traverseHtmlElements } from './traverseHtmlElements';\n\nconst isHtmlOpEmpty = (element: Element): boolean =>\n  element.nodeName === 'O:P' && element.textContent === NO_BREAK_SPACE;\n\nconst isHtmlElementEmpty = (element: Element): boolean =>\n  element.children.length === 1 &&\n  element.firstElementChild !== null &&\n  (isHtmlOpEmpty(element.firstElementChild) ||\n    isHtmlElementEmpty(element.firstElementChild));\n\n/**\n * Remove paragraph innerHTML if its child is 'O:P' with NO_BREAK_SPACE.\n */\nexport const cleanDocxEmptyParagraphs = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    if (element.tagName === 'P' && isHtmlElementEmpty(element)) {\n      element.innerHTML = '';\n    }\n\n    return true;\n  });\n};\n","/**\n * Is element a docx footnote.\n */\nexport const isDocxFootnote = (element: Element): boolean => {\n  return (\n    element.tagName === 'SPAN' &&\n    element.classList.contains('MsoFootnoteReference')\n  );\n};\n","import { isDocxFootnote } from './isDocxFootnote';\nimport { traverseHtmlElements } from './traverseHtmlElements';\n\n/**\n * Gets \"4\" from \"[4]\", \"A\" from \"[A]\", etc.\n */\nconst extractFootnoteNumber = (footnote: Element): string => {\n  return (footnote.textContent || '').trim().replace(/[[\\]]/g, '');\n};\n\n/**\n * Replace docx footnotes with sup element.\n */\nexport const cleanDocxFootnotes = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    if (isDocxFootnote(element)) {\n      const footnoteReplacement = document.createElement('sup');\n      footnoteReplacement.textContent = extractFootnoteNumber(element);\n\n      if (element.parentElement) {\n        element.parentElement.replaceChild(footnoteReplacement, element);\n      }\n\n      return true;\n    }\n\n    return true;\n  });\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assertString;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction assertString(input) {\n  var isString = typeof input === 'string' || input instanceof String;\n\n  if (!isString) {\n    var invalidType = _typeof(input);\n\n    if (input === null) invalidType = 'null';else if (invalidType === 'object') invalidType = input.constructor.name;\n    throw new TypeError(\"Expected a string but received a \".concat(invalidType));\n  }\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = merge;\n\nfunction merge() {\n  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var defaults = arguments.length > 1 ? arguments[1] : undefined;\n\n  for (var key in defaults) {\n    if (typeof obj[key] === 'undefined') {\n      obj[key] = defaults[key];\n    }\n  }\n\n  return obj;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isFQDN;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_fqdn_options = {\n  require_tld: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_numeric_tld: false,\n  allow_wildcard: false\n};\n\nfunction isFQDN(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, default_fqdn_options);\n  /* Remove the optional trailing dot before checking validity */\n\n  if (options.allow_trailing_dot && str[str.length - 1] === '.') {\n    str = str.substring(0, str.length - 1);\n  }\n  /* Remove the optional wildcard before checking validity */\n\n\n  if (options.allow_wildcard === true && str.indexOf('*.') === 0) {\n    str = str.substring(2);\n  }\n\n  var parts = str.split('.');\n  var tld = parts[parts.length - 1];\n\n  if (options.require_tld) {\n    // disallow fqdns without tld\n    if (parts.length < 2) {\n      return false;\n    }\n\n    if (!/^([a-z\\u00A1-\\u00A8\\u00AA-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {\n      return false;\n    } // disallow spaces\n\n\n    if (/\\s/.test(tld)) {\n      return false;\n    }\n  } // reject numeric TLDs\n\n\n  if (!options.allow_numeric_tld && /^\\d+$/.test(tld)) {\n    return false;\n  }\n\n  return parts.every(function (part) {\n    if (part.length > 63) {\n      return false;\n    }\n\n    if (!/^[a-z_\\u00a1-\\uffff0-9-]+$/i.test(part)) {\n      return false;\n    } // disallow full-width chars\n\n\n    if (/[\\uff01-\\uff5e]/.test(part)) {\n      return false;\n    } // disallow parts starting or ending with hyphen\n\n\n    if (/^-|-$/.test(part)) {\n      return false;\n    }\n\n    if (!options.allow_underscores && /_/.test(part)) {\n      return false;\n    }\n\n    return true;\n  });\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIP;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n11.3.  Examples\n\n   The following addresses\n\n             fe80::1234 (on the 1st link of the node)\n             ff02::5678 (on the 5th link of the node)\n             ff08::9abc (on the 10th organization of the node)\n\n   would be represented as follows:\n\n             fe80::1234%1\n             ff02::5678%5\n             ff08::9abc%10\n\n   (Here we assume a natural translation from a zone index to the\n   <zone_id> part, where the Nth zone of any scope is translated into\n   \"N\".)\n\n   If we use interface names as <zone_id>, those addresses could also be\n   represented as follows:\n\n            fe80::1234%ne0\n            ff02::5678%pvc1.3\n            ff08::9abc%interface10\n\n   where the interface \"ne0\" belongs to the 1st link, \"pvc1.3\" belongs\n   to the 5th link, and \"interface10\" belongs to the 10th organization.\n * * */\nvar IPv4SegmentFormat = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\nvar IPv4AddressFormat = \"(\".concat(IPv4SegmentFormat, \"[.]){3}\").concat(IPv4SegmentFormat);\nvar IPv4AddressRegExp = new RegExp(\"^\".concat(IPv4AddressFormat, \"$\"));\nvar IPv6SegmentFormat = '(?:[0-9a-fA-F]{1,4})';\nvar IPv6AddressRegExp = new RegExp('^(' + \"(?:\".concat(IPv6SegmentFormat, \":){7}(?:\").concat(IPv6SegmentFormat, \"|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){6}(?:\").concat(IPv4AddressFormat, \"|:\").concat(IPv6SegmentFormat, \"|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){5}(?::\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,2}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){4}(?:(:\").concat(IPv6SegmentFormat, \"){0,1}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,3}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){3}(?:(:\").concat(IPv6SegmentFormat, \"){0,2}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,4}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){2}(?:(:\").concat(IPv6SegmentFormat, \"){0,3}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,5}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){1}(?:(:\").concat(IPv6SegmentFormat, \"){0,4}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,6}|:)|\") + \"(?::((?::\".concat(IPv6SegmentFormat, \"){0,5}:\").concat(IPv4AddressFormat, \"|(?::\").concat(IPv6SegmentFormat, \"){1,7}|:))\") + ')(%[0-9a-zA-Z-.:]{1,})?$');\n\nfunction isIP(str) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  (0, _assertString.default)(str);\n  version = String(version);\n\n  if (!version) {\n    return isIP(str, 4) || isIP(str, 6);\n  }\n\n  if (version === '4') {\n    if (!IPv4AddressRegExp.test(str)) {\n      return false;\n    }\n\n    var parts = str.split('.').sort(function (a, b) {\n      return a - b;\n    });\n    return parts[3] <= 255;\n  }\n\n  if (version === '6') {\n    return !!IPv6AddressRegExp.test(str);\n  }\n\n  return false;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isURL;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isFQDN = _interopRequireDefault(require(\"./isFQDN\"));\n\nvar _isIP = _interopRequireDefault(require(\"./isIP\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/*\noptions for isURL method\n\nrequire_protocol - if set as true isURL will return false if protocol is not present in the URL\nrequire_valid_protocol - isURL will check if the URL's protocol is present in the protocols option\nprotocols - valid protocols can be modified with this option\nrequire_host - if set as false isURL will not check if host is present in the URL\nrequire_port - if set as true isURL will check if port is present in the URL\nallow_protocol_relative_urls - if set as true protocol relative URLs will be allowed\nvalidate_length - if set as false isURL will skip string length validation (IE maximum is 2083)\n\n*/\nvar default_url_options = {\n  protocols: ['http', 'https', 'ftp'],\n  require_tld: true,\n  require_protocol: false,\n  require_host: true,\n  require_port: false,\n  require_valid_protocol: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_protocol_relative_urls: false,\n  allow_fragments: true,\n  allow_query_components: true,\n  validate_length: true\n};\nvar wrapped_ipv6 = /^\\[([^\\]]+)\\](?::([0-9]+))?$/;\n\nfunction isRegExp(obj) {\n  return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\n\nfunction checkHost(host, matches) {\n  for (var i = 0; i < matches.length; i++) {\n    var match = matches[i];\n\n    if (host === match || isRegExp(match) && match.test(host)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isURL(url, options) {\n  (0, _assertString.default)(url);\n\n  if (!url || /[\\s<>]/.test(url)) {\n    return false;\n  }\n\n  if (url.indexOf('mailto:') === 0) {\n    return false;\n  }\n\n  options = (0, _merge.default)(options, default_url_options);\n\n  if (options.validate_length && url.length >= 2083) {\n    return false;\n  }\n\n  if (!options.allow_fragments && url.includes('#')) {\n    return false;\n  }\n\n  if (!options.allow_query_components && (url.includes('?') || url.includes('&'))) {\n    return false;\n  }\n\n  var protocol, auth, host, hostname, port, port_str, split, ipv6;\n  split = url.split('#');\n  url = split.shift();\n  split = url.split('?');\n  url = split.shift();\n  split = url.split('://');\n\n  if (split.length > 1) {\n    protocol = split.shift().toLowerCase();\n\n    if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {\n      return false;\n    }\n  } else if (options.require_protocol) {\n    return false;\n  } else if (url.substr(0, 2) === '//') {\n    if (!options.allow_protocol_relative_urls) {\n      return false;\n    }\n\n    split[0] = url.substr(2);\n  }\n\n  url = split.join('://');\n\n  if (url === '') {\n    return false;\n  }\n\n  split = url.split('/');\n  url = split.shift();\n\n  if (url === '' && !options.require_host) {\n    return true;\n  }\n\n  split = url.split('@');\n\n  if (split.length > 1) {\n    if (options.disallow_auth) {\n      return false;\n    }\n\n    if (split[0] === '') {\n      return false;\n    }\n\n    auth = split.shift();\n\n    if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {\n      return false;\n    }\n\n    var _auth$split = auth.split(':'),\n        _auth$split2 = _slicedToArray(_auth$split, 2),\n        user = _auth$split2[0],\n        password = _auth$split2[1];\n\n    if (user === '' && password === '') {\n      return false;\n    }\n  }\n\n  hostname = split.join('@');\n  port_str = null;\n  ipv6 = null;\n  var ipv6_match = hostname.match(wrapped_ipv6);\n\n  if (ipv6_match) {\n    host = '';\n    ipv6 = ipv6_match[1];\n    port_str = ipv6_match[2] || null;\n  } else {\n    split = hostname.split(':');\n    host = split.shift();\n\n    if (split.length) {\n      port_str = split.join(':');\n    }\n  }\n\n  if (port_str !== null && port_str.length > 0) {\n    port = parseInt(port_str, 10);\n\n    if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {\n      return false;\n    }\n  } else if (options.require_port) {\n    return false;\n  }\n\n  if (options.host_whitelist) {\n    return checkHost(host, options.host_whitelist);\n  }\n\n  if (!(0, _isIP.default)(host) && !(0, _isFQDN.default)(host, options) && (!ipv6 || !(0, _isIP.default)(ipv6, 6))) {\n    return false;\n  }\n\n  host = host || ipv6;\n\n  if (options.host_blacklist && checkHost(host, options.host_blacklist)) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","import { SPACE } from '../constants';\n\nexport const getRtfImageHex = (imageData: string): string | null => {\n  const [, bliptagData = ''] = imageData.split('bliptag');\n  const bracketSplit = bliptagData.split('}');\n\n  if (bracketSplit.length < 2) {\n    return null;\n  }\n\n  const [beforeBracket, afterBracket] = bracketSplit;\n\n  if (bracketSplit.length > 2 && beforeBracket.includes('blipuid')) {\n    return afterBracket.split(SPACE).join('');\n  }\n\n  const spaceSplit = beforeBracket.split(SPACE);\n\n  if (spaceSplit.length < 2) {\n    return null;\n  }\n\n  return spaceSplit.slice(1).join('');\n};\n","export const getRtfImageMimeType = (imageData: string): string | null => {\n  const [bliptagMeta] = imageData.split('bliptag');\n\n  if (bliptagMeta.includes('pngblip')) {\n    return 'image/png';\n  }\n\n  if (bliptagMeta.includes('jpegblip')) {\n    return 'image/jpeg';\n  }\n\n  return null;\n};\n","import { CARRIAGE_RETURN, LINE_FEED, SPACE } from '../constants';\n\nconst END_OF_ID_SEQUENCE_CHARACTERS = [\n  '\\\\',\n  '{',\n  CARRIAGE_RETURN,\n  LINE_FEED,\n  SPACE,\n];\n\nexport const getRtfImageSpid = (\n  imageData: string,\n  spidPrefix: string\n): string | null => {\n  const indexes = END_OF_ID_SEQUENCE_CHARACTERS.map((character) =>\n    imageData.indexOf(character)\n  );\n  const foundIndexes = indexes.filter((index) => index !== -1);\n  const idLength = Math.min(imageData.length, ...foundIndexes);\n  const id = imageData.substring(0, idLength);\n  return id ? `${spidPrefix}${id}` : null;\n};\n","import { RtfImage } from '../types';\nimport { getRtfImageHex } from './getRtfImageHex';\nimport { getRtfImageMimeType } from './getRtfImageMimeType';\nimport { getRtfImageSpid } from './getRtfImageSpid';\n\nexport const getRtfImagesByType = (\n  rtf: string,\n  spidPrefix: string,\n  type: string\n): RtfImage[] => {\n  const [, ...images] = rtf.split(type);\n\n  return images.reduce<RtfImage[]>((rtfImages, image) => {\n    const [, imageData = ''] = image.split('shplid');\n    const spid = getRtfImageSpid(imageData, spidPrefix);\n    const mimeType = getRtfImageMimeType(imageData);\n    const hex = getRtfImageHex(imageData);\n\n    if (spid && mimeType && hex) {\n      rtfImages.push({ hex, mimeType, spid });\n    }\n\n    return rtfImages;\n  }, []);\n};\n","import { RtfImagesMap } from '../types';\nimport { getRtfImagesByType } from './getRtfImagesByType';\n\nexport const getRtfImagesMap = (rtf: string): RtfImagesMap => {\n  const rtfImagesMap: RtfImagesMap = {};\n\n  const shppictRtfImages = getRtfImagesByType(rtf, 'i', '\\\\shppict');\n  for (const shppictRtfImage of shppictRtfImages) {\n    rtfImagesMap[shppictRtfImage.spid] = shppictRtfImage;\n  }\n\n  const shpRtfImages = getRtfImagesByType(rtf, 's', '\\\\shp');\n  for (const shpRtfImage of shpRtfImages) {\n    rtfImagesMap[shpRtfImage.spid] = shpRtfImage;\n  }\n\n  return rtfImagesMap;\n};\n","const acceptNode = () => NodeFilter.FILTER_ACCEPT;\n\nexport const getHtmlComments = (node: Node): string[] => {\n  const comments: string[] = [];\n  const iterator = document.createNodeIterator(node, NodeFilter.SHOW_COMMENT, {\n    acceptNode,\n  });\n  let currentNode = iterator.nextNode();\n\n  while (currentNode) {\n    if (currentNode.nodeValue) {\n      comments.push(currentNode.nodeValue);\n    }\n\n    currentNode = iterator.nextNode();\n  }\n\n  return comments;\n};\n","import { getHtmlComments } from './getHtmlComments';\n\nexport const getVShapes = (document: Document): Record<string, string> => {\n  const comments = getHtmlComments(document);\n\n  return comments.reduce<Record<string, string>>((vShapesMap, comment) => {\n    try {\n      const xmlDocument = new DOMParser().parseFromString(comment, 'text/html');\n      const vShapes = Array.from(xmlDocument.getElementsByTagName('V:SHAPE'));\n\n      vShapes.forEach((vShape) => {\n        const { id } = vShape;\n        const spid = vShape.getAttribute('o:spid');\n\n        if (typeof id === 'string' && typeof spid === 'string') {\n          vShapesMap[id] = spid;\n        }\n      });\n    } catch (error) {\n      // Cannot parse as XML, we're not interested in this comment\n    }\n\n    return vShapesMap;\n  }, {});\n};\n","import { getVShapes } from './getVShapes';\n\nconst normalizeSpid = (spid: string): string => {\n  const [, , id] = spid.split('_');\n  return id;\n};\n\nexport const getVShapeSpid = (\n  document: Document,\n  element: Element\n): string | null => {\n  if (element.tagName === 'IMG') {\n    const vShapeId = element.getAttribute('v:shapes');\n    const vShapes = getVShapes(document);\n\n    if (!vShapeId) {\n      return null;\n    }\n\n    const vShapeSpid = vShapes[vShapeId];\n\n    if (vShapeSpid) {\n      return normalizeSpid(vShapeSpid);\n    }\n\n    if (\n      element.parentElement &&\n      element.parentElement.parentElement &&\n      element.parentElement.parentElement.innerHTML.indexOf('msEquation') >= 0\n    ) {\n      return null;\n    }\n\n    return normalizeSpid(vShapeId);\n  }\n\n  if (!element.parentElement) {\n    return null;\n  }\n\n  const spid = element.parentElement.getAttribute('o:spid');\n\n  if (spid) {\n    return normalizeSpid(spid);\n  }\n\n  return spid;\n};\n","export const hexToBase64 = (hex: string): string => {\n  const hexPairs = hex.match(/\\w{2}/g) || [];\n  const binary = hexPairs.map((hexPair) =>\n    String.fromCharCode(parseInt(hexPair, 16))\n  );\n  return btoa(binary.join(''));\n};\n","import isURL from 'validator/lib/isURL';\nimport { getRtfImagesMap } from './getRtfImagesMap';\nimport { getVShapeSpid } from './getVShapeSpid';\nimport { hexToBase64 } from './hexToBase64';\nimport { traverseHtmlElements } from './traverseHtmlElements';\n\n/**\n * Clean docx image elements.\n */\nexport const cleanDocxImageElements = (\n  document: Document,\n  rtf: string,\n  rootNode: Node\n): void => {\n  if (!rtf) {\n    return;\n  }\n\n  traverseHtmlElements(rootNode, (element) => {\n    if (!['IMG', 'V:IMAGEDATA'].includes(element.tagName)) {\n      return true;\n    }\n\n    if (element.tagName === 'IMG') {\n      const src = element.getAttribute('src');\n\n      if (!src || !src.startsWith('file://')) {\n        return true;\n      }\n\n      const alt = element.getAttribute('alt');\n\n      if (typeof alt === 'string' && isURL(alt, { require_protocol: true })) {\n        element.setAttribute('src', alt);\n        return true;\n      }\n    }\n\n    const vShapeSpid = getVShapeSpid(document, element);\n\n    if (!vShapeSpid) {\n      return true;\n    }\n\n    const rtfImagesMap = getRtfImagesMap(rtf);\n    const rtfImage = rtfImagesMap[vShapeSpid];\n\n    if (!rtfImage) {\n      // We fould some kind of vshape (perhaps a drawing) that we don't know\n      // how to recover from RTF. So we just skip it.\n      element.remove();\n      return true;\n    }\n\n    const dataUri = `data:${rtfImage.mimeType};base64,${hexToBase64(\n      rtfImage.hex\n    )}`;\n\n    if (element.tagName === 'IMG') {\n      element.setAttribute('src', dataUri);\n    } else if (element.parentNode && element.parentNode.parentNode) {\n      const imageElement = document.createElement('img');\n      imageElement.setAttribute('src', dataUri);\n      element.parentNode.parentNode.replaceChild(\n        imageElement,\n        element.parentNode\n      );\n    }\n    return true;\n  });\n};\n","import { traverseHtmlElements } from './traverseHtmlElements';\n\n/**\n * Clean elements style mso-list to mso-list:Ignore\n */\nexport const cleanDocxListElements = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    const styleAttribute = element.getAttribute('style');\n\n    if (styleAttribute) {\n      element.setAttribute(\n        'style',\n        styleAttribute.replace(/mso-list:\\s*Ignore/gim, 'mso-list:Ignore')\n      );\n    }\n\n    return true;\n  });\n};\n","import { removeHtmlNodesBetweenComments } from './removeHtmlNodesBetweenComments';\nimport { traverseHtmlElements } from './traverseHtmlElements';\n\nexport const getDocxListContentHtml = (rootElement: Element): string => {\n  const clonedElement = rootElement.cloneNode(true) as Element;\n\n  removeHtmlNodesBetweenComments(\n    clonedElement,\n    '[if !supportLists]',\n    '[endif]'\n  );\n\n  traverseHtmlElements(clonedElement, (element) => {\n    const styleAttribute = element.getAttribute('style');\n\n    if (styleAttribute === 'mso-list:Ignore') {\n      element.remove();\n    }\n\n    return true;\n  });\n\n  return clonedElement.innerHTML;\n};\n","export const getDocxListIndent = (element: Element): number => {\n  const styleAttribute = element.getAttribute('style') || '';\n  const matches = styleAttribute.match(/level(\\d+)/im);\n\n  if (matches && matches.length >= 1) {\n    const [, level] = matches;\n    return parseInt(level, 10);\n  }\n\n  return 1;\n};\n","export const isDocxBookmark = (element: Element): boolean => {\n  const styleAttribute = element.getAttribute('style');\n  return (\n    (styleAttribute || '').startsWith('mso-bookmark') && !element.textContent\n  );\n};\n","export const isDocxList = (element: Element): boolean => {\n  const styleAttribute = element.getAttribute('style');\n\n  if (!styleAttribute) {\n    return false;\n  }\n\n  const hasMsoListInStyle = /mso-list:\\s*l/gim.test(styleAttribute);\n\n  if (!hasMsoListInStyle) {\n    return false;\n  }\n\n  const hasMsoListIgnoreChild = Boolean(\n    element.querySelector('[style=\"mso-list:Ignore\"]')\n  );\n\n  if (hasMsoListIgnoreChild) {\n    return true;\n  }\n\n  return element.outerHTML.includes('<!--[if !supportLists]-->');\n};\n","export const getDocxListNode = (element: Element): Node | null => {\n  return (\n    element.querySelector('[style=\"mso-list:Ignore\"]') ||\n    element.querySelector('span[lang]')\n  );\n};\n","export const isOlSymbol = (symbol: string): boolean => {\n  return /[0-9a-np-z]\\S/g.test(symbol.toLowerCase());\n};\n","import { getDocxListNode } from './getDocxListNode';\nimport { isOlSymbol } from './isOlSymbol';\n\nexport const isDocxOl = (element: Element): boolean => {\n  const listNode = getDocxListNode(element);\n\n  if (!listNode) {\n    return false;\n  }\n\n  return isOlSymbol(listNode.textContent || '');\n};\n","import { parseHtmlElement } from '@udecode/plate-core';\nimport { getDocxListContentHtml } from './getDocxListContentHtml';\nimport { getDocxListIndent } from './getDocxListIndent';\nimport { isDocxBookmark } from './isDocxBookmark';\nimport { isDocxList } from './isDocxList';\nimport { isDocxOl } from './isDocxOl';\n\ninterface Result {\n  list: Element | null;\n  nextSibling: Element | null;\n}\n\nexport const docxListToList = (element: Element): Result => {\n  const listLevel = getDocxListIndent(element);\n  let listHtml = '';\n  let nextSibling: Element | null = element;\n\n  while (nextSibling) {\n    if (isDocxBookmark(nextSibling)) {\n      nextSibling = nextSibling.nextElementSibling;\n      continue;\n    }\n\n    if (!isDocxList(nextSibling)) {\n      break;\n    }\n\n    const nextListLevel = getDocxListIndent(nextSibling);\n\n    if (nextListLevel < listLevel) {\n      // Lower level found. Current list is done.\n      break;\n    }\n\n    if (nextListLevel > listLevel) {\n      const nestedList = docxListToList(nextSibling);\n\n      if (nestedList.list) {\n        listHtml += nestedList.list.outerHTML;\n      }\n\n      nextSibling = nestedList.nextSibling;\n      continue;\n    }\n\n    listHtml += `<li>${getDocxListContentHtml(nextSibling)}</li>`;\n    const currentElement = nextSibling;\n    nextSibling = currentElement.nextElementSibling;\n    currentElement.remove();\n  }\n\n  const listTagName = isDocxOl(element) ? 'ol' : 'ul';\n  const list = parseHtmlElement(`<${listTagName}>${listHtml}</${listTagName}>`);\n\n  return { list, nextSibling };\n};\n","import { docxListToList } from './docxListToList';\nimport { isDocxList } from './isDocxList';\nimport { traverseHtmlElements } from './traverseHtmlElements';\n\nexport const cleanDocxListElementsToList = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    const styleAttribute = element.getAttribute('style');\n\n    if (styleAttribute) {\n      element.setAttribute(\n        'style',\n        styleAttribute.replace(/mso-list:\\s*Ignore/gim, 'mso-list:Ignore')\n      );\n    }\n\n    return true;\n  });\n\n  traverseHtmlElements(rootNode, (element) => {\n    if (!isDocxList(element)) {\n      return true;\n    }\n\n    const { parentElement, previousSibling } = element;\n\n    if (!parentElement) {\n      return true;\n    }\n\n    const { list } = docxListToList(element);\n\n    if (!list) {\n      return true;\n    }\n\n    const beforeElement = previousSibling\n      ? previousSibling.nextSibling\n      : parentElement.firstChild;\n\n    if (beforeElement) {\n      parentElement.insertBefore(list, beforeElement);\n    } else {\n      parentElement.appendChild(list);\n    }\n\n    return false;\n  });\n};\n","/**\n * Replace `element` tag name by `tagName`.\n * Attributes, innerHTML and parent relationship is kept.\n */\nexport const replaceTagName = (element: Element, tagName: string): Element => {\n  const newElement = document.createElement(tagName);\n\n  newElement.innerHTML = element.innerHTML;\n\n  for (const { name } of element.attributes) {\n    const value = element.getAttribute(name);\n\n    if (value) {\n      newElement.setAttribute(name, value);\n    }\n  }\n\n  if (element.parentNode) {\n    element.parentNode.replaceChild(newElement, element);\n  }\n\n  return newElement;\n};\n","import { replaceTagName } from './replaceTagName';\nimport { traverseHtmlElements } from './traverseHtmlElements';\n\n/**\n * Replace p.MsoQuote elements with blockquote.\n */\nexport const cleanDocxQuotes = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    if (\n      element.parentNode &&\n      element.tagName === 'P' &&\n      element.classList.contains('MsoQuote')\n    ) {\n      replaceTagName(element, 'blockquote');\n    }\n\n    return true;\n  });\n};\n","import { SPACE, TAB } from '../constants';\n\nexport const generateSpaces = (count: number): string =>\n  Array.from({ length: count }, () => SPACE).join('');\n\nexport const generateTabs = (count: number): string =>\n  Array.from({ length: count }, () => TAB).join('');\n","import { generateSpaces } from './generateSpaces';\n\n/**\n * Replace the element with spaces if its style includes 'mso-spacerun: yes'.\n */\nexport const cleanDocxSpacerun = (element: Element): void => {\n  const styleAttribute = element.getAttribute('style');\n\n  if (\n    !(\n      styleAttribute &&\n      ['mso-spacerun:yes', 'mso-spacerun: yes'].includes(styleAttribute)\n    )\n  ) {\n    return;\n  }\n\n  const spacesCount = (element.textContent || '').length;\n  const replacementNode = document.createTextNode(generateSpaces(spacesCount));\n\n  if (element.parentNode) {\n    element.parentNode.replaceChild(replacementNode, element);\n  }\n};\n","import { generateTabs } from './generateSpaces';\n\n/**\n * Replace element with tabs if its style starts with 'mso-tab-count'.\n */\nexport const cleanDocxTabCount = (element: Element): void => {\n  const styleAttribute = element.getAttribute('style') || '';\n\n  if (!styleAttribute.startsWith('mso-tab-count:')) {\n    return;\n  }\n\n  const [, countString] = styleAttribute.split(':');\n  const count = parseInt(countString, 10);\n  const replacementNode = document.createTextNode(generateTabs(count));\n\n  if (element.parentNode) {\n    element.parentNode.replaceChild(replacementNode, element);\n  }\n};\n","import { cleanDocxSpacerun } from './cleanDocxSpacerun';\nimport { cleanDocxTabCount } from './cleanDocxTabCount';\nimport { traverseHtmlElements } from './traverseHtmlElements';\n\n/**\n * Clean docx spaceruns and tab counts.\n */\nexport const cleanDocxSpans = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    if (element.nodeName !== 'SPAN') {\n      return true;\n    }\n\n    cleanDocxSpacerun(element);\n    cleanDocxTabCount(element);\n\n    return true;\n  });\n};\n","import { LINE_FEED } from '../constants';\nimport { traverseHtmlElements } from './traverseHtmlElements';\n\n/**\n * Replace BR elements with line feeds.\n */\nexport const cleanHtmlBrElements = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    if (element.tagName !== 'BR') {\n      return true;\n    }\n\n    const replacementTextNode = document.createTextNode(LINE_FEED);\n\n    if (element.parentElement) {\n      element.parentElement.replaceChild(replacementTextNode, element);\n    }\n\n    return false;\n  });\n};\n","/**\n * Replace \\r\\n and \\r with \\n\n */\nexport const cleanHtmlCrLf = (html: string): string => {\n  return html.replace(/(\\r\\n|\\r)/gm, '\\n');\n};\n","import { traverseHtmlElements } from './traverseHtmlElements';\n\nconst ALLOWED_EMPTY_ELEMENTS = ['BR', 'IMG'];\n\nconst isEmpty = (element: Element): boolean => {\n  return (\n    !ALLOWED_EMPTY_ELEMENTS.includes(element.nodeName) &&\n    !element.innerHTML.trim()\n  );\n};\n\nconst removeIfEmpty = (element: Element): void => {\n  if (isEmpty(element)) {\n    const { parentElement } = element;\n\n    element.remove();\n\n    if (parentElement) {\n      removeIfEmpty(parentElement);\n    }\n  }\n};\n\n/**\n * Remove empty elements from rootNode.\n * Allowed empty elements: BR, IMG.\n */\nexport const cleanHtmlEmptyElements = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    removeIfEmpty(element);\n    return true;\n  });\n};\n","import { replaceTagName } from './replaceTagName';\nimport { traverseHtmlElements } from './traverseHtmlElements';\n\n/**\n * Replace FONT elements with SPAN elements if there is textContent (remove otherwise).\n */\nexport const cleanHtmlFontElements = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    if (element.tagName === 'FONT') {\n      if (element.textContent) {\n        replaceTagName(element, 'span');\n      } else {\n        element.remove();\n      }\n    }\n\n    return true;\n  });\n};\n","/**\n * If href starts with '#'.\n */\nexport const isHtmlFragmentHref = (href: string): boolean =>\n  href.startsWith('#');\n","/**\n * Unwrap the given HTML element.\n */\nexport const unwrapHtmlElement = (element: Element): void => {\n  element.outerHTML = element.innerHTML;\n};\n","import { isHtmlFragmentHref } from './isHtmlFragmentHref';\nimport { traverseHtmlElements } from './traverseHtmlElements';\nimport { unwrapHtmlElement } from './unwrapHtmlElement';\n\n/**\n * Remove fragment hrefs and spans without inner text.\n */\nexport const cleanHtmlLinkElements = (rootNode: Node): void => {\n  traverseHtmlElements(rootNode, (element) => {\n    if (element.tagName !== 'A') {\n      return true;\n    }\n\n    const href = element.getAttribute('href');\n\n    if (!href || isHtmlFragmentHref(href)) {\n      unwrapHtmlElement(element);\n    }\n\n    if (href && element.querySelector('img')) {\n      for (const span of element.querySelectorAll('span')) {\n        if (!span.innerText) {\n          unwrapHtmlElement(span);\n        }\n      }\n    }\n\n    return true;\n  });\n};\n","import { isHtmlText } from '@udecode/plate-core';\nimport { traverseHtmlNode } from './traverseHtmlNode';\n\ntype Callback = (node: Text) => boolean;\n\nexport const traverseHtmlTexts = (rootNode: Node, callback: Callback): void => {\n  traverseHtmlNode(rootNode, (node) => {\n    if (!isHtmlText(node)) {\n      return true;\n    }\n\n    return callback(node);\n  });\n};\n","import {\n  CARRIAGE_RETURN,\n  LINE_FEED,\n  NO_BREAK_SPACE,\n  SPACE,\n} from '../constants';\nimport { traverseHtmlTexts } from './traverseHtmlTexts';\n\nexport const cleanHtmlTextNodes = (rootNode: Node): void => {\n  traverseHtmlTexts(rootNode, (textNode) => {\n    if (\n      /^\\n\\s*$/.test(textNode.data) &&\n      (textNode.previousElementSibling || textNode.nextElementSibling)\n    ) {\n      textNode.remove();\n\n      return true;\n    }\n\n    textNode.data = textNode.data.replace(/\\n\\s*/g, '\\n');\n\n    if (\n      textNode.data.includes(CARRIAGE_RETURN) ||\n      textNode.data.includes(LINE_FEED) ||\n      textNode.data.includes(NO_BREAK_SPACE)\n    ) {\n      const hasSpace = textNode.data.includes(SPACE);\n      const hasNonWhitespace = /\\S/.test(textNode.data);\n      const hasLineFeed = textNode.data.includes(LINE_FEED);\n\n      if (!(hasSpace || hasNonWhitespace) && !hasLineFeed) {\n        if (textNode.data === NO_BREAK_SPACE) {\n          textNode.data = SPACE;\n          return true;\n        }\n\n        textNode.remove();\n\n        return true;\n      }\n\n      if (\n        textNode.previousSibling &&\n        textNode.previousSibling.nodeName === 'BR' &&\n        textNode.parentElement\n      ) {\n        textNode.parentElement.removeChild(textNode.previousSibling);\n\n        const matches = textNode.data.match(/^[\\r\\n]+/);\n        const offset = matches ? matches[0].length : 0;\n\n        textNode.data = textNode.data\n          .substring(offset)\n          .replace(new RegExp(LINE_FEED, 'g'), SPACE)\n          .replace(new RegExp(CARRIAGE_RETURN, 'g'), SPACE);\n        textNode.data = `\\n${textNode.data}`;\n      } else {\n        textNode.data = textNode.data\n          .replace(new RegExp(LINE_FEED, 'g'), SPACE)\n          .replace(new RegExp(CARRIAGE_RETURN, 'g'), SPACE);\n      }\n    }\n\n    return true;\n  });\n};\n","const DOCX_INDENT_STEP = 32;\n\nexport const getDocxIndent = (\n  element: Element,\n  indentStep = DOCX_INDENT_STEP\n): number => {\n  const el = element as HTMLElement;\n  const { marginLeft } = el.style;\n\n  const marginLeftNumber = parseInt(marginLeft, 10);\n\n  if (!marginLeftNumber) return 0;\n\n  return Math.round(marginLeftNumber / indentStep);\n};\n","import { ListStyleType } from '@udecode/plate-indent-list';\n\nexport const getTextListStyleType = (\n  text: string\n): ListStyleType | undefined => {\n  // text.match(/^\\d+\\s*[-\\\\.)]?\\s+/)?.[0];\n  if (text.match(/^\\d+[\\\\.]/)?.[0]) {\n    return ListStyleType.Decimal;\n  }\n\n  if (text.match(/^[a-z]+\\./)?.[0]) {\n    return ListStyleType.LowerAlpha;\n  }\n};\n","import { traverseHtmlElements } from './traverseHtmlElements';\n\n/**\n * Check if the element contains docx content.\n * True if one element has:\n * - style including 'mso-'\n * - className including 'Mso'\n */\nexport const isDocxContent = (body: HTMLElement): boolean => {\n  let result = false;\n\n  traverseHtmlElements(body, (element) => {\n    const styleAttribute = element.getAttribute('style') || '';\n    const classList = Array.from(element.classList);\n\n    const isMsoElement =\n      styleAttribute.includes('mso-') ||\n      classList.some((className) => className.startsWith('Mso'));\n\n    result = result || isMsoElement;\n\n    return !result;\n  });\n\n  return result;\n};\n","import { ZERO_WIDTH_SPACE } from '../constants';\n\n/**\n * Trim the html and remove zero width spaces,\n * then wrap it with a body element.\n */\nexport const postCleanHtml = (html: string): string => {\n  const cleanHtml = html.trim().replace(new RegExp(ZERO_WIDTH_SPACE, 'g'), '');\n\n  return `<body>${cleanHtml}</body>`;\n};\n","/**\n * Remove string before <html\n */\nconst removeBeforeHtml = (html: string): string => {\n  const index = html.indexOf('<html');\n  if (index === -1) {\n    return html;\n  }\n  return html.substring(index);\n};\n\n/**\n * Remove string after </html>\n */\nconst removeAfterHtml = (html: string): string => {\n  const index = html.lastIndexOf('</html>');\n  if (index === -1) {\n    return html;\n  }\n  return html.substring(0, index + '</html>'.length);\n};\n\n/**\n * Remove string before <html and after </html>\n */\nexport const removeHtmlSurroundings = (html: string): string => {\n  return removeBeforeHtml(removeAfterHtml(html));\n};\n","import { cleanHtmlCrLf } from './cleanHtmlCrLf';\nimport { removeHtmlSurroundings } from './removeHtmlSurroundings';\n\nconst cleaners = [removeHtmlSurroundings, cleanHtmlCrLf];\n\n/**\n * Remove HTML surroundings and clean HTML from CR/LF\n */\nexport const preCleanHtml = (html: string): string => {\n  return cleaners.reduce((result, clean) => clean(result), html);\n};\n","import { copyBlockMarksToSpanChild } from './utils/copyBlockMarksToSpanChild';\nimport {\n  cleanDocxBrComments,\n  cleanDocxEmptyParagraphs,\n  cleanDocxFootnotes,\n  cleanDocxImageElements,\n  cleanDocxListElements,\n  cleanDocxQuotes,\n  cleanDocxSpans,\n  cleanHtmlBrElements,\n  cleanHtmlEmptyElements,\n  cleanHtmlFontElements,\n  cleanHtmlLinkElements,\n  cleanHtmlTextNodes,\n  isDocxContent,\n  postCleanHtml,\n  preCleanHtml,\n} from './utils';\n\nexport const cleanDocx = (html: string, rtf: string): string => {\n  const document = new DOMParser().parseFromString(\n    preCleanHtml(html),\n    'text/html'\n  );\n  const { body } = document;\n\n  if (!rtf && !isDocxContent(body)) {\n    return html;\n  }\n\n  cleanDocxFootnotes(body);\n  cleanDocxImageElements(document, rtf, body);\n  cleanHtmlEmptyElements(body);\n  cleanDocxEmptyParagraphs(body);\n  cleanDocxQuotes(body);\n  cleanDocxSpans(body);\n  cleanHtmlTextNodes(body);\n  cleanDocxBrComments(body);\n  cleanHtmlBrElements(body);\n  cleanHtmlLinkElements(body);\n  cleanHtmlFontElements(body);\n  cleanDocxListElements(body);\n  copyBlockMarksToSpanChild(body);\n\n  return postCleanHtml(body.innerHTML);\n};\n","import { KEY_ALIGN } from '@udecode/plate-alignment';\nimport { MARK_BOLD, MARK_ITALIC } from '@udecode/plate-basic-marks';\nimport {\n  deserializeHtmlCodeBlock,\n  ELEMENT_CODE_BLOCK,\n} from '@udecode/plate-code-block';\nimport {\n  createPluginFactory,\n  DeserializeHtml,\n  KEY_DESERIALIZE_HTML,\n} from '@udecode/plate-core';\nimport { ELEMENT_H1, ELEMENT_H2, ELEMENT_H3 } from '@udecode/plate-heading';\nimport { ELEMENT_IMAGE } from '@udecode/plate-image';\nimport { KEY_INDENT } from '@udecode/plate-indent';\nimport { KEY_LIST_STYLE_TYPE, ListStyleType } from '@udecode/plate-indent-list';\nimport { ELEMENT_PARAGRAPH } from '@udecode/plate-paragraph';\nimport { cleanDocx } from '../docx-cleaner/cleanDocx';\nimport { getDocxIndent } from '../docx-cleaner/utils/getDocxIndent';\nimport { getDocxListContentHtml } from '../docx-cleaner/utils/getDocxListContentHtml';\nimport { getDocxListIndent } from '../docx-cleaner/utils/getDocxListIndent';\nimport { getTextListStyleType } from '../docx-cleaner/utils/getTextListStyleType';\nimport { isDocxContent } from '../docx-cleaner/utils/isDocxContent';\nimport { isDocxList } from '../docx-cleaner/utils/isDocxList';\n\nexport const KEY_DESERIALIZE_DOCX = 'deserializeDocx';\n\nconst getListNode = (type: string): DeserializeHtml['getNode'] => (element) => {\n  const node: any = { type };\n\n  if (element.style.textAlign) {\n    node[KEY_ALIGN] = element.style.textAlign;\n  }\n\n  if (element.style.lineHeight) {\n    node.lineHeight = element.style.lineHeight;\n  }\n\n  if (isDocxList(element)) {\n    node[KEY_INDENT] = getDocxListIndent(element);\n\n    const text = element.textContent ?? '';\n\n    node[KEY_LIST_STYLE_TYPE] =\n      getTextListStyleType(text) ?? ListStyleType.Disc;\n\n    element.innerHTML = getDocxListContentHtml(element);\n  } else {\n    const indent = getDocxIndent(element);\n\n    if (indent) {\n      node[KEY_INDENT] = indent;\n    }\n  }\n\n  return node;\n};\n\nexport const createDeserializeDocxPlugin = createPluginFactory({\n  key: KEY_DESERIALIZE_DOCX,\n  inject: {\n    pluginsByKey: {\n      [KEY_DESERIALIZE_HTML]: {\n        editor: {\n          insertData: {\n            transformData: (data, { dataTransfer }) => {\n              const rtf = dataTransfer.getData('text/rtf');\n\n              return cleanDocx(data, rtf);\n            },\n          },\n        },\n      },\n    },\n  },\n  overrideByKey: {\n    [ELEMENT_PARAGRAPH]: {\n      then: (editor, { type }) => ({\n        deserializeHtml: {\n          query: (el) => {\n            return !el.classList.contains('SourceCode');\n          },\n          getNode: getListNode(type),\n        },\n      }),\n    },\n    [ELEMENT_H1]: {\n      then: (editor, { type }) => ({\n        deserializeHtml: {\n          getNode: getListNode(type),\n        },\n      }),\n    },\n    [ELEMENT_H2]: {\n      then: (editor, { type }) => ({\n        deserializeHtml: {\n          getNode: getListNode(type),\n        },\n      }),\n    },\n    [ELEMENT_H3]: {\n      then: (editor, { type }) => ({\n        deserializeHtml: {\n          getNode: getListNode(type),\n        },\n      }),\n    },\n    [ELEMENT_CODE_BLOCK]: {\n      deserializeHtml: [\n        {\n          validNodeName: 'PRE',\n          ...deserializeHtmlCodeBlock,\n        },\n        {\n          validClassName: 'SourceCode',\n          ...deserializeHtmlCodeBlock,\n        },\n      ],\n    },\n    // [ELEMENT_TABLE]: {\n    //   deserializeHtml:\n    // },\n    [ELEMENT_IMAGE]: {\n      editor: {\n        insertData: {\n          query: ({ dataTransfer }) => {\n            const data = dataTransfer.getData('text/html');\n            const { body } = new DOMParser().parseFromString(data, 'text/html');\n\n            return !isDocxContent(body);\n          },\n        },\n      },\n    },\n    [MARK_BOLD]: {\n      deserializeHtml: [\n        {\n          validNodeName: ['STRONG', 'B'],\n          query: (el) => {\n            return !(\n              (el.children[0] as HTMLElement)?.style.fontWeight === 'normal'\n            );\n          },\n        },\n        {\n          validStyle: {\n            fontWeight: ['600', '700', 'bold'],\n          },\n        },\n      ],\n    },\n    [MARK_ITALIC]: {\n      deserializeHtml: [\n        {\n          validNodeName: ['EM', 'I'],\n          query: (el) => {\n            return !(\n              el.nodeName === 'EM' &&\n              (el.children[0] as HTMLElement)?.style.fontStyle === 'normal'\n            );\n          },\n        },\n        {\n          validStyle: {\n            fontStyle: 'italic',\n          },\n        },\n      ],\n    },\n  },\n});\n"],"names":["isHtmlBlockElement","element","blockRegex","test","nodeName","traverseHtmlNode","node","callback","keepTraversing","child","firstChild","currentChild","previousChild","previousSibling","nextSibling","parentNode","traverseHtmlElements","rootNode","isHtmlElement","copyBlockMarksToSpanChild","el","styleAttribute","getAttribute","style","backgroundColor","color","fontFamily","fontSize","fontStyle","fontWeight","textDecoration","span","document","createElement","includes","innerHTML","outerHTML","traverseHtmlComments","isHtmlComment","removeHtmlNodesBetweenComments","start","end","isClosingComment","data","comment","remove","cleanDocxBrComments","tagName","CARRIAGE_RETURN","LINE_FEED","NO_BREAK_SPACE","SPACE","TAB","ZERO_WIDTH_SPACE","isHtmlOpEmpty","textContent","isHtmlElementEmpty","children","length","firstElementChild","cleanDocxEmptyParagraphs","isDocxFootnote","classList","contains","extractFootnoteNumber","footnote","trim","replace","cleanDocxFootnotes","footnoteReplacement","parentElement","replaceChild","require$$0","require$$1","require$$2","require$$3","getRtfImageHex","imageData","bliptagData","split","bracketSplit","beforeBracket","afterBracket","join","spaceSplit","slice","getRtfImageMimeType","bliptagMeta","END_OF_ID_SEQUENCE_CHARACTERS","getRtfImageSpid","spidPrefix","indexes","map","character","indexOf","foundIndexes","filter","index","idLength","Math","min","id","substring","getRtfImagesByType","rtf","type","images","reduce","rtfImages","image","spid","mimeType","hex","push","getRtfImagesMap","rtfImagesMap","shppictRtfImages","shppictRtfImage","shpRtfImages","shpRtfImage","acceptNode","NodeFilter","FILTER_ACCEPT","getHtmlComments","comments","iterator","createNodeIterator","SHOW_COMMENT","currentNode","nextNode","nodeValue","getVShapes","vShapesMap","xmlDocument","DOMParser","parseFromString","vShapes","Array","from","getElementsByTagName","forEach","vShape","error","normalizeSpid","getVShapeSpid","vShapeId","vShapeSpid","hexToBase64","hexPairs","match","binary","hexPair","String","fromCharCode","parseInt","btoa","cleanDocxImageElements","src","startsWith","alt","isURL","require_protocol","setAttribute","rtfImage","dataUri","imageElement","cleanDocxListElements","getDocxListContentHtml","rootElement","clonedElement","cloneNode","getDocxListIndent","matches","level","isDocxBookmark","isDocxList","hasMsoListInStyle","hasMsoListIgnoreChild","Boolean","querySelector","getDocxListNode","isOlSymbol","symbol","toLowerCase","isDocxOl","listNode","docxListToList","listLevel","listHtml","nextElementSibling","nextListLevel","nestedList","list","currentElement","listTagName","parseHtmlElement","cleanDocxListElementsToList","beforeElement","insertBefore","appendChild","replaceTagName","newElement","name","attributes","value","cleanDocxQuotes","generateSpaces","count","generateTabs","cleanDocxSpacerun","spacesCount","replacementNode","createTextNode","cleanDocxTabCount","countString","cleanDocxSpans","cleanHtmlBrElements","replacementTextNode","cleanHtmlCrLf","html","ALLOWED_EMPTY_ELEMENTS","isEmpty","removeIfEmpty","cleanHtmlEmptyElements","cleanHtmlFontElements","isHtmlFragmentHref","href","unwrapHtmlElement","cleanHtmlLinkElements","querySelectorAll","innerText","traverseHtmlTexts","isHtmlText","cleanHtmlTextNodes","textNode","previousElementSibling","hasSpace","hasNonWhitespace","hasLineFeed","removeChild","offset","RegExp","DOCX_INDENT_STEP","getDocxIndent","indentStep","marginLeft","marginLeftNumber","round","getTextListStyleType","text","ListStyleType","Decimal","LowerAlpha","isDocxContent","body","result","isMsoElement","some","className","postCleanHtml","cleanHtml","removeBeforeHtml","removeAfterHtml","lastIndexOf","removeHtmlSurroundings","cleaners","preCleanHtml","clean","cleanDocx","KEY_DESERIALIZE_DOCX","getListNode","textAlign","KEY_ALIGN","lineHeight","KEY_INDENT","KEY_LIST_STYLE_TYPE","Disc","indent","createDeserializeDocxPlugin","createPluginFactory","key","inject","pluginsByKey","KEY_DESERIALIZE_HTML","editor","insertData","transformData","dataTransfer","getData","overrideByKey","ELEMENT_PARAGRAPH","then","deserializeHtml","query","getNode","ELEMENT_H1","ELEMENT_H2","ELEMENT_H3","ELEMENT_CODE_BLOCK","validNodeName","deserializeHtmlCodeBlock","validClassName","ELEMENT_IMAGE","MARK_BOLD","validStyle","MARK_ITALIC"],"mappings":"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"}