{"version":3,"file":"index.js","sources":["../src/AlignToolbarButton/AlignToolbarButton.tsx"],"sourcesContent":["import React from 'react';\nimport { Alignment, KEY_ALIGN, setAlign } from '@udecode/plate-alignment';\nimport {\n  getPreventDefaultHandler,\n  isCollapsed,\n  someNode,\n  usePlateEditorState,\n} from '@udecode/plate-core';\nimport { ToolbarButton, ToolbarButtonProps } from '@udecode/plate-toolbar';\n\nexport interface AlignToolbarButtonProps extends ToolbarButtonProps {\n  value: Alignment;\n  pluginKey?: string;\n}\n\nexport const AlignToolbarButton = ({\n  value,\n  pluginKey = KEY_ALIGN,\n  ...props\n}: AlignToolbarButtonProps) => {\n  const editor = usePlateEditorState()!;\n\n  return (\n    <ToolbarButton\n      active={\n        isCollapsed(editor?.selection) &&\n        someNode(editor!, { match: { [pluginKey]: value } })\n      }\n      onMouseDown={\n        editor\n          ? getPreventDefaultHandler(setAlign, editor, {\n              value,\n              key: pluginKey,\n            })\n          : undefined\n      }\n      {...props}\n    />\n  );\n};\n"],"names":["AlignToolbarButton","value","pluginKey","KEY_ALIGN","props","editor","usePlateEditorState","React","ToolbarButton","isCollapsed","selection","someNode","match","getPreventDefaultHandler","setAlign","key","undefined"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAeaA,kBAAkB,GAAG,CAAC;AACjCC,EAAAA,KADiC;AAEjCC,EAAAA,SAAS,GAAGC,wBAFqB;AAGjC,KAAGC;AAH8B,CAAD,KAIH;AAC7B,QAAMC,MAAM,GAAGC,6BAAmB,EAAlC;AAEA,sBACEC,wCAACC,0BAAD;AACE,IAAA,MAAM,EACJC,qBAAW,CAACJ,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEK,SAAT,CAAX,IACAC,kBAAQ,CAACN,MAAD,EAAU;AAAEO,MAAAA,KAAK,EAAE;AAAE,SAACV,SAAD,GAAaD;AAAf;AAAT,KAAV,CAHZ;AAKE,IAAA,WAAW,EACTI,MAAM,GACFQ,kCAAwB,CAACC,uBAAD,EAAWT,MAAX,EAAmB;AACzCJ,MAAAA,KADyC;AAEzCc,MAAAA,GAAG,EAAEb;AAFoC,KAAnB,CADtB,GAKFc;AAXR,KAaMZ,KAbN,EADF;AAiBD;;;;"}