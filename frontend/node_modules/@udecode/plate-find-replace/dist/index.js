'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var plateCore = require('@udecode/plate-core');
var slate = require('slate');

const decorateFindReplace = (editor, {
  type,
  options: {
    search
  }
}) => ([node, path]) => {
  const ranges = [];

  if (search && slate.Text.isText(node)) {
    const {
      text
    } = node;
    const parts = text.split(search);
    let offset = 0;
    parts.forEach((part, i) => {
      if (i !== 0) {
        ranges.push({
          anchor: {
            path,
            offset: offset - search.length
          },
          focus: {
            path,
            offset
          },
          [type]: true
        });
      }

      offset = offset + part.length + search.length;
    });
  }

  return ranges;
};

const MARK_SEARCH_HIGHLIGHT = 'search_highlight';
const createFindReplacePlugin = plateCore.createPluginFactory({
  key: MARK_SEARCH_HIGHLIGHT,
  isLeaf: true,
  decorate: decorateFindReplace
});

exports.MARK_SEARCH_HIGHLIGHT = MARK_SEARCH_HIGHLIGHT;
exports.createFindReplacePlugin = createFindReplacePlugin;
exports.decorateFindReplace = decorateFindReplace;
//# sourceMappingURL=index.js.map
